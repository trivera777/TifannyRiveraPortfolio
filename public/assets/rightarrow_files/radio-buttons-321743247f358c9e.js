(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6905],{266726:function(o,e,n){var a=n(911611),t=n(882846),r=n(491936),l=Math.max,i=Math.min;o.exports=function(o,e,n){var s,d,c,u,p,m,h=0,b=!1,f=!1,g=!0;if("function"!=typeof o)throw new TypeError("Expected a function");function v(e){var n=s,a=d;return s=d=void 0,h=e,u=o.apply(a,n)}function R(o){return h=o,p=setTimeout(x,e),b?v(o):u}function k(o){var n=o-m;return void 0===m||n>=e||n<0||f&&o-h>=c}function x(){var o=t();if(k(o))return C(o);p=setTimeout(x,function(o){var n=e-(o-m);return f?i(n,c-(o-h)):n}(o))}function C(o){return p=void 0,g&&s?v(o):(s=d=void 0,u)}function F(){var o=t(),n=k(o);if(s=arguments,d=this,m=o,n){if(void 0===p)return R(m);if(f)return clearTimeout(p),p=setTimeout(x,e),v(m)}return void 0===p&&(p=setTimeout(x,e)),u}return e=r(e)||0,a(n)&&(b=!!n.leading,c=(f="maxWait"in n)?l(r(n.maxWait)||0,e):c,g="trailing"in n?!!n.trailing:g),F.cancel=function(){void 0!==p&&clearTimeout(p),h=0,s=m=d=p=void 0},F.flush=function(){return void 0===p?u:C(t())},F}},882846:function(o,e,n){var a=n(377400);o.exports=function(){return a.Date.now()}},819783:function(o,e,n){var a=n(266726),t=n(911611);o.exports=function(o,e,n){var r=!0,l=!0;if("function"!=typeof o)throw new TypeError("Expected a function");return t(n)&&(r="leading"in n?!!n.leading:r,l="trailing"in n?!!n.trailing:l),a(o,e,{leading:r,maxWait:e,trailing:l})}},423584:function(o,e,n){"use strict";n.r(e),n.d(e,{default:function(){return H}});var a,t=n(827378),r=n(494616),l=n(823168),i=n(503170),s=n(394898),d=n(828996),c=n(165262),u=n(824246);var p,m,h,b,f=n(25778);var g=n(295649);var v,R=n(658295);var k,x,C,F,w=n(290763),y=n(252340),L=(0,w.ZP)((function(o){return(0,u.jsx)(s.Z,(0,g.Z)({},o))}))((function(o){var e=o.theme;return{".MuiFormControlLabel-label":o.checked&&{color:e.palette.primary.main}}}));function j(o){var e=(0,y.Z)(),n=!1;return e&&(n=e.value===o.value),(0,u.jsx)(L,(0,g.Z)({checked:n},o))}var G=(0,w.ZP)("span")((function(o){var e=o.theme;return{borderRadius:"50%",width:16,height:16,boxShadow:"dark"===e.palette.mode?"0 0 0 1px rgb(16 22 26 / 40%)":"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)",backgroundColor:"dark"===e.palette.mode?"#394b59":"#f5f8fa",backgroundImage:"dark"===e.palette.mode?"linear-gradient(180deg,hsla(0,0%,100%,.05),hsla(0,0%,100%,0))":"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))",".Mui-focusVisible &":{outline:"2px auto rgba(19,124,189,.6)",outlineOffset:2},"input:hover ~ &":{backgroundColor:"dark"===e.palette.mode?"#30404d":"#ebf1f5"},"input:disabled ~ &":{boxShadow:"none",background:"dark"===e.palette.mode?"rgba(57,75,89,.5)":"rgba(206,217,224,.5)"}}})),z=(0,w.ZP)(G)({backgroundColor:"#137cbd",backgroundImage:"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))","&:before":{display:"block",width:16,height:16,backgroundImage:"radial-gradient(#fff,#fff 28%,transparent 32%)",content:'""'},"input:hover ~ &":{backgroundColor:"#106ba3"}});function S(o){return(0,u.jsx)(l.Z,(0,g.Z)({sx:{"&:hover":{bgcolor:"transparent"}},disableRipple:!0,color:"default",checkedIcon:x||(x=(0,u.jsx)(z,{})),icon:C||(C=(0,u.jsx)(G,{}))},o))}var P,B,Z,T=n(336146),I=n(871649);var V,E={en:{description:"Radio buttons allow the user to select one option from a set.",location:"/docs/src/pages/components/radio-buttons/radio-buttons.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Radio</h1><p class="description">Radio buttons allow the user to select one option from a set.</p>\n\n<p>Use radio buttons when the user needs to see all available options.\nIf available options can be collapsed, consider using a dropdown menu because it uses less space.</p>\n<p>Radio buttons should have the most commonly used option selected by default.</p>\n',{component:"modules/components/ComponentLinkHeader.js"},'<h2 id="heading-radio-group"><span class="anchor-link" id="radio-group"></span>Radio group<a aria-labelledby="heading-radio-group" class="anchor-link-style" href="#radio-group" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><code>RadioGroup</code> is a helpful wrapper used to group <code>Radio</code> components that provides an easier API, and proper keyboard accessibility to the group.</p>\n',{demo:"pages/components/radio-buttons/RadioButtonsGroup.js"},'<h3 id="heading-direction"><span class="anchor-link" id="direction"></span>Direction<a aria-labelledby="heading-direction" class="anchor-link-style" href="#direction" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>To lay out the buttons horizontally, set the <code>row</code> prop:</p>\n',{demo:"pages/components/radio-buttons/RowRadioButtonsGroup.js"},'<h3 id="heading-controlled"><span class="anchor-link" id="controlled"></span>Controlled<a aria-labelledby="heading-controlled" class="anchor-link-style" href="#controlled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>You can control the radio with the <code>value</code> and <code>onChange</code> props:</p>\n',{demo:"pages/components/radio-buttons/ControlledRadioButtonsGroup.js"},'<h2 id="heading-standalone-radio-buttons"><span class="anchor-link" id="standalone-radio-buttons"></span>Standalone radio buttons<a aria-labelledby="heading-standalone-radio-buttons" class="anchor-link-style" href="#standalone-radio-buttons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><code>Radio</code> can also be used standalone, without the RadioGroup wrapper.</p>\n',{demo:"pages/components/radio-buttons/RadioButtons.js"},'<h2 id="heading-size"><span class="anchor-link" id="size"></span>Size<a aria-labelledby="heading-size" class="anchor-link-style" href="#size" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Use the <code>size</code> prop or customize the font size of the svg icons to change the size of the radios.</p>\n',{demo:"pages/components/radio-buttons/SizeRadioButtons.js"},'<h2 id="heading-color"><span class="anchor-link" id="color"></span>Color<a aria-labelledby="heading-color" class="anchor-link-style" href="#color" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2>',{demo:"pages/components/radio-buttons/ColorRadioButtons.js"},'<h2 id="heading-label-placement"><span class="anchor-link" id="label-placement"></span>Label placement<a aria-labelledby="heading-label-placement" class="anchor-link-style" href="#label-placement" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can change the placement of the label with the <code>FormControlLabel</code> component&#39;s <code>labelPlacement</code> prop:</p>\n',{demo:"pages/components/radio-buttons/FormControlLabelPlacement.js"},'<h2 id="heading-show-error"><span class="anchor-link" id="show-error"></span>Show error<a aria-labelledby="heading-show-error" class="anchor-link-style" href="#show-error" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>In general, radio buttons should have a value selected by default. If this is not the case, you can display an error if no value is selected when the form is submitted:</p>\n',{demo:"pages/components/radio-buttons/ErrorRadios.js"},'<h2 id="heading-customization"><span class="anchor-link" id="customization"></span>Customization<a aria-labelledby="heading-customization" class="anchor-link-style" href="#customization" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Here is an example of customizing the component.\nYou can learn more about this in the <a href="/customization/how-to-customize/">overrides documentation page</a>.</p>\n',{demo:"pages/components/radio-buttons/CustomizedRadios.js"},'<h2 id="heading-useradiogroup"><span class="anchor-link" id="useradiogroup"></span><code>useRadioGroup</code><a aria-labelledby="heading-useradiogroup" class="anchor-link-style" href="#useradiogroup" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>For advanced customization use cases, a <code>useRadioGroup()</code> hook is exposed.\nIt returns the context value of the parent radio group.\nThe Radio component uses this hook internally.</p>\n<h3 id="heading-api"><span class="anchor-link" id="api"></span>API<a aria-labelledby="heading-api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> useRadioGroup <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/RadioGroup\'</span><span class="token punctuation">;</span>\n</code></pre>\n<h4>Returns</h4><p><code>value</code> (<em>object</em>):</p>\n<ul>\n<li><code>value.name</code> (<em>string</em> [optional]): The name used to reference the value of the control.</li>\n<li><code>value.onChange</code> (<em>func</em> [optional]): Callback fired when a radio button is selected.</li>\n<li><code>value.value</code> (<em>any</em> [optional]): Value of the selected radio button.</li>\n</ul>\n<h4>Example</h4>',{demo:"pages/components/radio-buttons/UseRadioGroup.js"},'<h2 id="heading-when-to-use"><span class="anchor-link" id="when-to-use"></span>When to use<a aria-labelledby="heading-when-to-use" class="anchor-link-style" href="#when-to-use" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/">Checkboxes vs. Radio Buttons</a></li>\n</ul>\n<h2 id="heading-accessibility"><span class="anchor-link" id="accessibility"></span>Accessibility<a aria-labelledby="heading-accessibility" class="anchor-link-style" href="#accessibility" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>(WAI-ARIA: <a href="https://www.w3.org/TR/wai-aria-practices/#radiobutton" target="_blank" rel="noopener nofollow">https://www.w3.org/TR/wai-aria-practices/#radiobutton</a>)</p>\n<ul>\n<li>All form controls should have labels, and this includes radio buttons, checkboxes, and switches. In most cases, this is done by using the <code>&lt;label&gt;</code> element (<a href="/api/form-control-label/">FormControlLabel</a>).</li>\n<li>When a label can&#39;t be used, it&#39;s necessary to add an attribute directly to the input component.\nIn this case, you can apply the additional attribute (e.g. <code>aria-label</code>, <code>aria-labelledby</code>, <code>title</code>) via the <code>inputProps</code> property.</li>\n</ul>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio</span></span>\n  <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radioA<span class="token punctuation">"</span></span>\n  <span class="token attr-name">inputProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n    <span class="token string">\'aria-label\'</span><span class="token operator">:</span> <span class="token string">\'Radio A\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n</code></pre>\n','<h2 id="heading-api-2"><span class="anchor-link" id="api-2"></span>API<a aria-labelledby="heading-api-2" class="anchor-link-style" href="#api-2" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/api/form-control/"><code>&lt;FormControl /&gt;</code></a></li>\n<li><a href="/api/form-control-label/"><code>&lt;FormControlLabel /&gt;</code></a></li>\n<li><a href="/api/form-label/"><code>&lt;FormLabel /&gt;</code></a></li>\n<li><a href="/api/radio/"><code>&lt;Radio /&gt;</code></a></li>\n<li><a href="/api/radio-group/"><code>&lt;RadioGroup /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"Radio group",level:2,hash:"radio-group",children:[{text:"Direction",level:3,hash:"direction"},{text:"Controlled",level:3,hash:"controlled"}]},{text:"Standalone radio buttons",level:2,hash:"standalone-radio-buttons",children:[]},{text:"Size",level:2,hash:"size",children:[]},{text:"Color",level:2,hash:"color",children:[]},{text:"Label placement",level:2,hash:"label-placement",children:[]},{text:"Show error",level:2,hash:"show-error",children:[]},{text:"Customization",level:2,hash:"customization",children:[]},{text:"useRadioGroup",level:2,hash:"useradiogroup",children:[{text:"API",level:3,hash:"api"}]},{text:"When to use",level:2,hash:"when-to-use",children:[]},{text:"Accessibility",level:2,hash:"accessibility",children:[]},{text:"API",level:2,hash:"api-2",children:[]}],title:"Radio buttons React component",headers:{title:"Radio buttons React component",components:["FormControl","FormControlLabel","FormLabel","Radio","RadioGroup"],githubLabel:"component: Radio",materialDesign:"https://material.io/components/selection-controls#radio-buttons",waiAria:"https://www.w3.org/TR/wai-aria-practices/#radiobutton"}},pt:{description:"Bot\xf5es de op\xe7\xe3o permitem o usu\xe1rio selecionar uma das op\xe7\xf5es de um conjunto.",location:"/docs/src/pages/components/radio-buttons/radio-buttons-pt.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Bot\xf5es de op\xe7\xe3o</h1><p class="description">Bot\xf5es de op\xe7\xe3o permitem o usu\xe1rio selecionar uma das op\xe7\xf5es de um conjunto.</p>\n\n<p>Use <a href="https://material.io/design/components/selection-controls.html#radio-buttons" target="_blank" rel="noopener nofollow">bot\xf5es de op\xe7\xe3o</a> quando um usu\xe1rio precisar ver todas as op\xe7\xf5es dispon\xedveis. Se v\xe1rias op\xe7\xf5es podem ser suprimidas da visualiza\xe7\xe3o, considere usar um menu suspenso (dropdown), pois ele utiliza menos espa\xe7o.</p>\n<p>Os bot\xf5es de op\xe7\xe3o devem ter a op\xe7\xe3o comum e mais usada selecionada por padr\xe3o.</p>\n',{component:"modules/components/ComponentLinkHeader.js"},'<h2 id="heading-radio-group"><span class="anchor-link" id="radio-group"></span>Radio group<a aria-labelledby="heading-radio-group" class="anchor-link-style" href="#radio-group" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>O componente <code>RadioGroup</code> \xe9 um wrapper utilizado para agrupar componentes <code>Radio</code>, fornece uma API mais simples e adequada para a acessibilidade por teclado.</p>\n',{demo:"pages/components/radio-buttons/RadioButtonsGroup.js"},'<h3 id="heading-direction"><span class="anchor-link" id="direction"></span>Direction<a aria-labelledby="heading-direction" class="anchor-link-style" href="#direction" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>To lay out the buttons horizontally, set the <code>row</code> prop:</p>\n',{demo:"pages/components/radio-buttons/RowRadioButtonsGroup.js"},'<h3 id="heading-controlled"><span class="anchor-link" id="controlled"></span>Controlled<a aria-labelledby="heading-controlled" class="anchor-link-style" href="#controlled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>You can control the radio with the <code>value</code> and <code>onChange</code> props:</p>\n',{demo:"pages/components/radio-buttons/ControlledRadioButtonsGroup.js"},'<h2 id="heading-standalone-radio-buttons"><span class="anchor-link" id="standalone-radio-buttons"></span>Bot\xf5es de op\xe7\xe3o independentes<a aria-labelledby="heading-standalone-radio-buttons" class="anchor-link-style" href="#standalone-radio-buttons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>O componente <code>Radio</code> tamb\xe9m pode ser usado de forma independente, sem o wrapper RadioGroup.</p>\n',{demo:"pages/components/radio-buttons/RadioButtons.js"},'<h2 id="heading-size"><span class="anchor-link" id="size"></span>Size<a aria-labelledby="heading-size" class="anchor-link-style" href="#size" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Use the <code>size</code> prop or customize the font size of the svg icons to change the size of the radios.</p>\n',{demo:"pages/components/radio-buttons/SizeRadioButtons.js"},'<h2 id="heading-color"><span class="anchor-link" id="color"></span>Color<a aria-labelledby="heading-color" class="anchor-link-style" href="#color" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2>',{demo:"pages/components/radio-buttons/ColorRadioButtons.js"},'<h2 id="heading-label-placement"><span class="anchor-link" id="label-placement"></span>Label placement<a aria-labelledby="heading-label-placement" class="anchor-link-style" href="#label-placement" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Voc\xea pode alterar o posicionamento do r\xf3tulo com o componente <code>FormControlLabel</code> na propriedade <code>labelPlacement</code>:</p>\n',{demo:"pages/components/radio-buttons/FormControlLabelPlacement.js"},'<h2 id="heading-show-error"><span class="anchor-link" id="show-error"></span>Exibi\xe7\xe3o de erro<a aria-labelledby="heading-show-error" class="anchor-link-style" href="#show-error" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Em geral, os bot\xf5es de op\xe7\xe3o devem ter um valor selecionado por padr\xe3o. Se esse n\xe3o for o caso, voc\xea pode exibir um erro se nenhum valor estiver selecionado quando o formul\xe1rio for submetido:</p>\n',{demo:"pages/components/radio-buttons/ErrorRadios.js"},'<h2 id="heading-customization"><span class="anchor-link" id="customization"></span>Customization<a aria-labelledby="heading-customization" class="anchor-link-style" href="#customization" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Here is an example of customizing the component. You can learn more about this in the <a href="/pt/customization/how-to-customize/">overrides documentation page</a>.</p>\n',{demo:"pages/components/radio-buttons/CustomizedRadios.js"},'<h2 id="heading-useradiogroup"><span class="anchor-link" id="useradiogroup"></span><code>useRadioGroup</code><a aria-labelledby="heading-useradiogroup" class="anchor-link-style" href="#useradiogroup" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Para situa\xe7\xf5es de uso avan\xe7adas de customiza\xe7\xe3o, um hook <code>useRadioGroup()</code> \xe9 exposto. Ele retorna o valor do contexto do grupo de bot\xf5es de op\xe7\xe3o pai. O componente de bot\xf5es de op\xe7\xe3o usa este hook internamente.</p>\n<h3 id="heading-api"><span class="anchor-link" id="api"></span>API<a aria-labelledby="heading-api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> useRadioGroup <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/RadioGroup\'</span><span class="token punctuation">;</span>\n</code></pre>\n<h4>Returns</h4><p><code>value</code> (<em>object</em>):</p>\n<ul>\n<li><code>value.name</code> (<em>string</em> [opcional]): O nome usado para fazer refer\xeancia ao valor do controle.</li>\n<li><code>value.onChange</code> (<em>func</em> [optional]): Callback fired when a radio button is selected.</li>\n<li><code>value.value</code> (<em>any</em> [opcional]): Valor do bot\xe3o de op\xe7\xe3o selecionado.</li>\n</ul>\n<h4>Example</h4>',{demo:"pages/components/radio-buttons/UseRadioGroup.js"},'<h2 id="heading-when-to-use"><span class="anchor-link" id="when-to-use"></span>When to use<a aria-labelledby="heading-when-to-use" class="anchor-link-style" href="#when-to-use" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/">Checkboxes vs. Radio Buttons</a></li>\n</ul>\n<h2 id="heading-accessibility"><span class="anchor-link" id="accessibility"></span>Accessibility<a aria-labelledby="heading-accessibility" class="anchor-link-style" href="#accessibility" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>(WAI-ARIA: <a href="https://www.w3.org/TR/wai-aria-practices/#radiobutton" target="_blank" rel="noopener nofollow">https://www.w3.org/TR/wai-aria-practices/#radiobutton</a>)</p>\n<ul>\n<li>All form controls should have labels, and this includes radio buttons, checkboxes, and switches. In most cases, this is done by using the <code>&lt;label&gt;</code> element (<a href="/pt/api/form-control-label/">FormControlLabel</a>).</li>\n<li>When a label can&#39;t be used, it&#39;s necessary to add an attribute directly to the input component. Nesse caso voc\xea pode aplicar um atributo adicional (por exemplo, <code>aria-label</code>,<code>aria-labelledby</code>, <code>title</code>) atrav\xe9s da propriedade <code>inputProps</code>.</li>\n</ul>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio</span></span>\n  <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radioA<span class="token punctuation">"</span></span>\n  <span class="token attr-name">inputProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n    <span class="token string">\'aria-label\'</span><span class="token operator">:</span> <span class="token string">\'Radio A\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n</code></pre>\n','<h2 id="heading-api-2"><span class="anchor-link" id="api-2"></span>API<a aria-labelledby="heading-api-2" class="anchor-link-style" href="#api-2" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/pt/api/form-control/"><code>&lt;FormControl /&gt;</code></a></li>\n<li><a href="/pt/api/form-control-label/"><code>&lt;FormControlLabel /&gt;</code></a></li>\n<li><a href="/pt/api/form-label/"><code>&lt;FormLabel /&gt;</code></a></li>\n<li><a href="/pt/api/radio/"><code>&lt;Radio /&gt;</code></a></li>\n<li><a href="/pt/api/radio-group/"><code>&lt;RadioGroup /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"Radio group",level:2,hash:"radio-group",children:[{text:"Direction",level:3,hash:"direction"},{text:"Controlled",level:3,hash:"controlled"}]},{text:"Bot\xf5es de op\xe7\xe3o independentes",level:2,hash:"standalone-radio-buttons",children:[]},{text:"Size",level:2,hash:"size",children:[]},{text:"Color",level:2,hash:"color",children:[]},{text:"Label placement",level:2,hash:"label-placement",children:[]},{text:"Exibi\xe7\xe3o de erro",level:2,hash:"show-error",children:[]},{text:"Customization",level:2,hash:"customization",children:[]},{text:"useRadioGroup",level:2,hash:"useradiogroup",children:[{text:"API",level:3,hash:"api"}]},{text:"When to use",level:2,hash:"when-to-use",children:[]},{text:"Accessibility",level:2,hash:"accessibility",children:[]},{text:"API",level:2,hash:"api-2",children:[]}],title:"Componente React para Bot\xf5es de op\xe7\xe3o",headers:{title:"Componente React para Bot\xf5es de op\xe7\xe3o",components:["FormControl","FormControlLabel","FormLabel","Radio","RadioGroup"],githubLabel:"component: Radio",materialDesign:"https://material.io/components/selection-controls#radio-buttons",waiAria:"https://www.w3.org/TR/wai-aria-practices/#radiobutton"}},zh:{description:"\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5355\u9009\u6309\u94ae\u4ece\u4e00\u7ec4\u4e2d\u9009\u62e9\u4e00\u4e2a\u9009\u9879\u3002",location:"/docs/src/pages/components/radio-buttons/radio-buttons-zh.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Radio \u5355\u9009\u6846\u7ec4\u4ef6</h1><p class="description">\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5355\u9009\u6309\u94ae\u4ece\u4e00\u7ec4\u4e2d\u9009\u62e9\u4e00\u4e2a\u9009\u9879\u3002</p>\n\n<p>\u5f53\u7528\u6237\u60f3\u8981\u770b\u5230\u6240\u6709\u7684\u9009\u9879\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5355\u9009\u6309\u94ae\u3002 \u5982\u679c\u53ef\u7528\u9009\u9879\u53ef\u4ee5\u6298\u53e0\uff0c\u8bf7\u60a8\u8003\u8651\u4f7f\u7528\u5360\u7528\u7a7a\u95f4\u66f4\u5c11\u7684\u4e0b\u62c9\u83dc\u5355\u3002</p>\n<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5355\u9009\u6309\u94ae\u5e94\u8be5\u9009\u62e9\u4e86\u6700\u5e38\u7528\u7684\u9009\u9879\u3002</p>\n',{component:"modules/components/ComponentLinkHeader.js"},'<h2 id="heading-radio-group"><span class="anchor-link" id="radio-group"></span>Radio group<a aria-labelledby="heading-radio-group" class="anchor-link-style" href="#radio-group" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><code>RadioGroup</code> \u9002\u7528\u4e8e\u4e00\u7ec4 <code>Radio</code>\uff0c\u5b83\u63d0\u4f9b\u76f8\u5bf9\u7b80\u5355\u7684 API \u5e76\u4e14\u80fd\u591f\u4f7f\u7528\u952e\u76d8\u5bf9\u8be5 RadioGroup \u8fdb\u884c\u63a7\u5236\u3002</p>\n',{demo:"pages/components/radio-buttons/RadioButtonsGroup.js"},'<h3 id="heading-direction"><span class="anchor-link" id="direction"></span>Direction<a aria-labelledby="heading-direction" class="anchor-link-style" href="#direction" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u8981\u4f7f\u6309\u94ae\u6c34\u5e73\u5e03\u5c40\uff0c\u9700\u8981\u5c06 <code>row</code> \u5c5e\u6027\u8bbe\u7f6e\u4e3a\uff1a</p>\n',{demo:"pages/components/radio-buttons/RowRadioButtonsGroup.js"},'<h3 id="heading-controlled"><span class="anchor-link" id="controlled"></span>Controlled<a aria-labelledby="heading-controlled" class="anchor-link-style" href="#controlled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>You can control the radio with the <code>value</code> and <code>onChange</code> props:</p>\n',{demo:"pages/components/radio-buttons/ControlledRadioButtonsGroup.js"},'<h2 id="heading-standalone-radio-buttons"><span class="anchor-link" id="standalone-radio-buttons"></span>Standalone radio buttons \u72ec\u7acb\u7684\u5355\u9009\u6846\u6309\u94ae<a aria-labelledby="heading-standalone-radio-buttons" class="anchor-link-style" href="#standalone-radio-buttons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><code>Radio</code> \u4e5f\u53ef\u4ee5\u5355\u72ec\u4f7f\u7528\uff0c\u65e0\u9700\u989d\u5916\u7684 RadioGroup wrapper\u3002</p>\n',{demo:"pages/components/radio-buttons/RadioButtons.js"},'<h2 id="heading-size"><span class="anchor-link" id="size"></span>Size<a aria-labelledby="heading-size" class="anchor-link-style" href="#size" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Use the <code>size</code> prop or customize the font size of the svg icons to change the size of the radios.</p>\n',{demo:"pages/components/radio-buttons/SizeRadioButtons.js"},'<h2 id="heading-color"><span class="anchor-link" id="color"></span>Color<a aria-labelledby="heading-color" class="anchor-link-style" href="#color" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2>',{demo:"pages/components/radio-buttons/ColorRadioButtons.js"},'<h2 id="heading-label-placement"><span class="anchor-link" id="label-placement"></span>Label placement<a aria-labelledby="heading-label-placement" class="anchor-link-style" href="#label-placement" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u4f60\u53ef\u4ee5\u7528 <code>FormControlLabel</code> \u7ec4\u4ef6\u7684 <code>labelPlacement</code> \u5c5e\u6027\u6765\u6539\u53d8\u6807\u7b7e\u7684\u4f4d\u7f6e\u3002</p>\n',{demo:"pages/components/radio-buttons/FormControlLabelPlacement.js"},'<h2 id="heading-show-error"><span class="anchor-link" id="show-error"></span>\u663e\u793a\u9519\u8bef<a aria-labelledby="heading-show-error" class="anchor-link-style" href="#show-error" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u4e00\u822c\u6765\u8bf4\uff0c\u5355\u9009\u6309\u94ae\u5e94\u5e26\u6709\u4e00\u4e2a\u9ed8\u8ba4\u9009\u4e2d\u7684\u503c\u3002 \u5982\u679c\u4e0d\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u82e5\u7528\u6237\u5728\u63d0\u4ea4\u8868\u5355\u65f6\u5982\u679c\u672a\u9009\u62e9\u4efb\u4f55\u503c\uff0c\u60a8\u53ef\u4ee5\u8ba9\u5176\u663e\u793a\u4e00\u4e2a\u9519\u8bef\uff1a</p>\n',{demo:"pages/components/radio-buttons/ErrorRadios.js"},'<h2 id="heading-customization"><span class="anchor-link" id="customization"></span>Customization<a aria-labelledby="heading-customization" class="anchor-link-style" href="#customization" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Here is an example of customizing the component. You can learn more about this in the <a href="/zh/customization/how-to-customize/">overrides documentation page</a>.</p>\n',{demo:"pages/components/radio-buttons/CustomizedRadios.js"},'<h2 id="heading-useradiogroup"><span class="anchor-link" id="useradiogroup"></span><code>useRadioGroup</code><a aria-labelledby="heading-useradiogroup" class="anchor-link-style" href="#useradiogroup" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u5bf9\u4e8e\u9700\u8981\u9ad8\u7ea7\u5b9a\u5236\u7528\u4f8b\u7684\u60c5\u51b5\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a <code>useRadioGroup()</code> hook\u3002 \u8fd9\u5c06\u4f1a\u8fd4\u56de\u5355\u9009\u6846\u7ec4\u4e0a\u4e0b\u6587\u7684\u503c\u3002 \u5355\u9009\u6846\u7ec4\u4ef6\u5728\u5176\u5185\u90e8\u4f1a\u4f7f\u7528\u8fd9\u4e2a hook\u3002</p>\n<h3 id="heading-api"><span class="anchor-link" id="api"></span>API<a aria-labelledby="heading-api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> useRadioGroup <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/RadioGroup\'</span><span class="token punctuation">;</span>\n</code></pre>\n<h4>Returns</h4><p><code>value</code> (<em>object</em>):</p>\n<ul>\n<li><code>value.name</code> (<em>string</em> [optional])\uff1a\u7528\u4e8e\u5f15\u7528\u63a7\u4ef6\u503c\u7684\u540d\u79f0\u3002</li>\n<li><code>value.onChange</code> (<em>func</em> [optional])\uff1a\u9009\u62e9\u5355\u9009\u6309\u94ae\u65f6\u89e6\u53d1\u7684\u56de\u8c03\u3002</li>\n<li><code>value.value</code> (<em>any</em> [optional])\uff1a\u6240\u88ab\u9009\u5b9a\u7684\u5355\u9009\u6846\u7684\u503c\u3002</li>\n</ul>\n<h4>Example</h4>',{demo:"pages/components/radio-buttons/UseRadioGroup.js"},'<h2 id="heading-when-to-use"><span class="anchor-link" id="when-to-use"></span>When to use<a aria-labelledby="heading-when-to-use" class="anchor-link-style" href="#when-to-use" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/">Checkboxes vs. Radio Buttons</a></li>\n</ul>\n<h2 id="heading-accessibility"><span class="anchor-link" id="accessibility"></span>Accessibility<a aria-labelledby="heading-accessibility" class="anchor-link-style" href="#accessibility" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>(WAI-ARIA: <a href="https://www.w3.org/TR/wai-aria-practices/#radiobutton" target="_blank" rel="noopener nofollow">https://www.w3.org/TR/wai-aria-practices/#radiobutton</a>)</p>\n<ul>\n<li>All form controls should have labels, and this includes radio buttons, checkboxes, and switches. In most cases, this is done by using the <code>&lt;label&gt;</code> element (<a href="/zh/api/form-control-label/">FormControlLabel</a>).</li>\n<li>When a label can&#39;t be used, it&#39;s necessary to add an attribute directly to the input component. \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u7ecf\u7531 <code>inputProps</code> \u5c5e\u6027\uff0c\u6765\u9644\u7740\u4e00\u4e9b\u989d\u5916\u7684\u5c5e\u6027\uff08\u4f8b\u5982 <code>arial-label</code>\uff0c<code>aria-labelledby</code>\uff0c<code>title</code>\uff09\u3002</li>\n</ul>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio</span></span>\n  <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radioA<span class="token punctuation">"</span></span>\n  <span class="token attr-name">inputProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n    <span class="token string">\'aria-label\'</span><span class="token operator">:</span> <span class="token string">\'Radio A\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n</code></pre>\n','<h2 id="heading-api-2"><span class="anchor-link" id="api-2"></span>API<a aria-labelledby="heading-api-2" class="anchor-link-style" href="#api-2" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/zh/api/form-control/"><code>&lt;FormControl /&gt;</code></a></li>\n<li><a href="/zh/api/form-control-label/"><code>&lt;FormControlLabel /&gt;</code></a></li>\n<li><a href="/zh/api/form-label/"><code>&lt;FormLabel /&gt;</code></a></li>\n<li><a href="/zh/api/radio/"><code>&lt;Radio /&gt;</code></a></li>\n<li><a href="/zh/api/radio-group/"><code>&lt;RadioGroup /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"Radio group",level:2,hash:"radio-group",children:[{text:"Direction",level:3,hash:"direction"},{text:"Controlled",level:3,hash:"controlled"}]},{text:"Standalone radio buttons \u72ec\u7acb\u7684\u5355\u9009\u6846\u6309\u94ae",level:2,hash:"standalone-radio-buttons",children:[]},{text:"Size",level:2,hash:"size",children:[]},{text:"Color",level:2,hash:"color",children:[]},{text:"Label placement",level:2,hash:"label-placement",children:[]},{text:"\u663e\u793a\u9519\u8bef",level:2,hash:"show-error",children:[]},{text:"Customization",level:2,hash:"customization",children:[]},{text:"useRadioGroup",level:2,hash:"useradiogroup",children:[{text:"API",level:3,hash:"api"}]},{text:"When to use",level:2,hash:"when-to-use",children:[]},{text:"Accessibility",level:2,hash:"accessibility",children:[]},{text:"API",level:2,hash:"api-2",children:[]}],title:"React Radio buttons\uff08\u5355\u9009\u6309\u94ae\uff09\u7ec4\u4ef6",headers:{title:"React Radio buttons\uff08\u5355\u9009\u6309\u94ae\uff09\u7ec4\u4ef6",components:["FormControl","FormControlLabel","FormLabel","Radio","RadioGroup"],githubLabel:"component: Radio",materialDesign:"https://material.io/components/selection-controls#radio-buttons",waiAria:"https://www.w3.org/TR/wai-aria-practices/#radiobutton"}}},M={"pages/components/radio-buttons/RadioButtonsGroup.js":{module:"./RadioButtonsGroup.js",raw:'import * as React from \'react\';\nimport Radio from \'@mui/material/Radio\';\nimport RadioGroup from \'@mui/material/RadioGroup\';\nimport FormControlLabel from \'@mui/material/FormControlLabel\';\nimport FormControl from \'@mui/material/FormControl\';\nimport FormLabel from \'@mui/material/FormLabel\';\n\nexport default function RadioButtonsGroup() {\n  return (\n    <FormControl component="fieldset">\n      <FormLabel component="legend">Gender</FormLabel>\n      <RadioGroup\n        aria-label="gender"\n        defaultValue="female"\n        name="radio-buttons-group"\n      >\n        <FormControlLabel value="female" control={<Radio />} label="Female" />\n        <FormControlLabel value="male" control={<Radio />} label="Male" />\n        <FormControlLabel value="other" control={<Radio />} label="Other" />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n',jsxPreview:'<FormControl component="fieldset">\n  <FormLabel component="legend">Gender</FormLabel>\n  <RadioGroup\n    aria-label="gender"\n    defaultValue="female"\n    name="radio-buttons-group"\n  >\n    <FormControlLabel value="female" control={<Radio />} label="Female" />\n    <FormControlLabel value="male" control={<Radio />} label="Male" />\n    <FormControlLabel value="other" control={<Radio />} label="Other" />\n  </RadioGroup>\n</FormControl>',moduleTS:"./RadioButtonsGroup.js",rawTS:'import * as React from \'react\';\nimport Radio from \'@mui/material/Radio\';\nimport RadioGroup from \'@mui/material/RadioGroup\';\nimport FormControlLabel from \'@mui/material/FormControlLabel\';\nimport FormControl from \'@mui/material/FormControl\';\nimport FormLabel from \'@mui/material/FormLabel\';\n\nexport default function RadioButtonsGroup() {\n  return (\n    <FormControl component="fieldset">\n      <FormLabel component="legend">Gender</FormLabel>\n      <RadioGroup\n        aria-label="gender"\n        defaultValue="female"\n        name="radio-buttons-group"\n      >\n        <FormControlLabel value="female" control={<Radio />} label="Female" />\n        <FormControlLabel value="male" control={<Radio />} label="Male" />\n        <FormControlLabel value="other" control={<Radio />} label="Other" />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n'},"pages/components/radio-buttons/ControlledRadioButtonsGroup.js":{module:"./ControlledRadioButtonsGroup.js",raw:'import * as React from \'react\';\nimport Radio from \'@mui/material/Radio\';\nimport RadioGroup from \'@mui/material/RadioGroup\';\nimport FormControlLabel from \'@mui/material/FormControlLabel\';\nimport FormControl from \'@mui/material/FormControl\';\nimport FormLabel from \'@mui/material/FormLabel\';\n\nexport default function ControlledRadioButtonsGroup() {\n  const [value, setValue] = React.useState(\'female\');\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <FormControl component="fieldset">\n      <FormLabel component="legend">Gender</FormLabel>\n      <RadioGroup\n        aria-label="gender"\n        name="controlled-radio-buttons-group"\n        value={value}\n        onChange={handleChange}\n      >\n        <FormControlLabel value="female" control={<Radio />} label="Female" />\n        <FormControlLabel value="male" control={<Radio />} label="Male" />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n',jsxPreview:'<FormControl component="fieldset">\n  <FormLabel component="legend">Gender</FormLabel>\n  <RadioGroup\n    aria-label="gender"\n    name="controlled-radio-buttons-group"\n    value={value}\n    onChange={handleChange}\n  >\n    <FormControlLabel value="female" control={<Radio />} label="Female" />\n    <FormControlLabel value="male" control={<Radio />} label="Male" />\n  </RadioGroup>\n</FormControl>',moduleTS:"./ControlledRadioButtonsGroup.js",rawTS:'import * as React from \'react\';\nimport Radio from \'@mui/material/Radio\';\nimport RadioGroup from \'@mui/material/RadioGroup\';\nimport FormControlLabel from \'@mui/material/FormControlLabel\';\nimport FormControl from \'@mui/material/FormControl\';\nimport FormLabel from \'@mui/material/FormLabel\';\n\nexport default function ControlledRadioButtonsGroup() {\n  const [value, setValue] = React.useState(\'female\');\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue((event.target as HTMLInputElement).value);\n  };\n\n  return (\n    <FormControl component="fieldset">\n      <FormLabel component="legend">Gender</FormLabel>\n      <RadioGroup\n        aria-label="gender"\n        name="controlled-radio-buttons-group"\n        value={value}\n        onChange={handleChange}\n      >\n        <FormControlLabel value="female" control={<Radio />} label="Female" />\n        <FormControlLabel value="male" control={<Radio />} label="Male" />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n'},"pages/components/radio-buttons/RowRadioButtonsGroup.js":{module:"./RowRadioButtonsGroup.js",raw:'import * as React from \'react\';\nimport Radio from \'@mui/material/Radio\';\nimport RadioGroup from \'@mui/material/RadioGroup\';\nimport FormControlLabel from \'@mui/material/FormControlLabel\';\nimport FormControl from \'@mui/material/FormControl\';\nimport FormLabel from \'@mui/material/FormLabel\';\n\nexport default function RowRadioButtonsGroup() {\n  return (\n    <FormControl component="fieldset">\n      <FormLabel component="legend">Gender</FormLabel>\n      <RadioGroup row aria-label="gender" name="row-radio-buttons-group">\n        <FormControlLabel value="female" control={<Radio />} label="Female" />\n        <FormControlLabel value="male" control={<Radio />} label="Male" />\n        <FormControlLabel value="other" control={<Radio />} label="Other" />\n        <FormControlLabel\n          value="disabled"\n          disabled\n          control={<Radio />}\n          label="other"\n        />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n',jsxPreview:'<FormControl component="fieldset">\n  <FormLabel component="legend">Gender</FormLabel>\n  <RadioGroup row aria-label="gender" name="row-radio-buttons-group">\n    <FormControlLabel value="female" control={<Radio />} label="Female" />\n    <FormControlLabel value="male" control={<Radio />} label="Male" />\n    <FormControlLabel value="other" control={<Radio />} label="Other" />\n    <FormControlLabel\n      value="disabled"\n      disabled\n      control={<Radio />}\n      label="other"\n    />\n  </RadioGroup>\n</FormControl>',moduleTS:"./RowRadioButtonsGroup.js",rawTS:'import * as React from \'react\';\nimport Radio from \'@mui/material/Radio\';\nimport RadioGroup from \'@mui/material/RadioGroup\';\nimport FormControlLabel from \'@mui/material/FormControlLabel\';\nimport FormControl from \'@mui/material/FormControl\';\nimport FormLabel from \'@mui/material/FormLabel\';\n\nexport default function RowRadioButtonsGroup() {\n  return (\n    <FormControl component="fieldset">\n      <FormLabel component="legend">Gender</FormLabel>\n      <RadioGroup row aria-label="gender" name="row-radio-buttons-group">\n        <FormControlLabel value="female" control={<Radio />} label="Female" />\n        <FormControlLabel value="male" control={<Radio />} label="Male" />\n        <FormControlLabel value="other" control={<Radio />} label="Other" />\n        <FormControlLabel\n          value="disabled"\n          disabled\n          control={<Radio />}\n          label="other"\n        />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n'},"pages/components/radio-buttons/RadioButtons.js":{module:"./RadioButtons.js",raw:"import * as React from 'react';\nimport Radio from '@mui/material/Radio';\n\nexport default function RadioButtons() {\n  const [selectedValue, setSelectedValue] = React.useState('a');\n\n  const handleChange = (event) => {\n    setSelectedValue(event.target.value);\n  };\n\n  return (\n    <div>\n      <Radio\n        checked={selectedValue === 'a'}\n        onChange={handleChange}\n        value=\"a\"\n        name=\"radio-buttons\"\n        inputProps={{ 'aria-label': 'A' }}\n      />\n      <Radio\n        checked={selectedValue === 'b'}\n        onChange={handleChange}\n        value=\"b\"\n        name=\"radio-buttons\"\n        inputProps={{ 'aria-label': 'B' }}\n      />\n    </div>\n  );\n}\n",jsxPreview:"<Radio\n  checked={selectedValue === 'a'}\n  onChange={handleChange}\n  value=\"a\"\n  name=\"radio-buttons\"\n  inputProps={{ 'aria-label': 'A' }}\n/>\n<Radio\n  checked={selectedValue === 'b'}\n  onChange={handleChange}\n  value=\"b\"\n  name=\"radio-buttons\"\n  inputProps={{ 'aria-label': 'B' }}\n/>",moduleTS:"./RadioButtons.js",rawTS:"import * as React from 'react';\nimport Radio from '@mui/material/Radio';\n\nexport default function RadioButtons() {\n  const [selectedValue, setSelectedValue] = React.useState('a');\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedValue(event.target.value);\n  };\n\n  return (\n    <div>\n      <Radio\n        checked={selectedValue === 'a'}\n        onChange={handleChange}\n        value=\"a\"\n        name=\"radio-buttons\"\n        inputProps={{ 'aria-label': 'A' }}\n      />\n      <Radio\n        checked={selectedValue === 'b'}\n        onChange={handleChange}\n        value=\"b\"\n        name=\"radio-buttons\"\n        inputProps={{ 'aria-label': 'B' }}\n      />\n    </div>\n  );\n}\n"},"pages/components/radio-buttons/SizeRadioButtons.js":{module:"./SizeRadioButtons.js",raw:"import * as React from 'react';\nimport Radio from '@mui/material/Radio';\n\nexport default function SizeRadioButtons() {\n  const [selectedValue, setSelectedValue] = React.useState('a');\n  const handleChange = (event) => {\n    setSelectedValue(event.target.value);\n  };\n\n  const controlProps = (item) => ({\n    checked: selectedValue === item,\n    onChange: handleChange,\n    value: item,\n    name: 'size-radio-button-demo',\n    inputProps: { 'aria-label': item },\n  });\n\n  return (\n    <div>\n      <Radio {...controlProps('a')} size=\"small\" />\n      <Radio {...controlProps('b')} />\n      <Radio\n        {...controlProps('c')}\n        sx={{\n          '& .MuiSvgIcon-root': {\n            fontSize: 28,\n          },\n        }}\n      />\n    </div>\n  );\n}\n",jsxPreview:"<Radio {...controlProps('a')} size=\"small\" />\n<Radio {...controlProps('b')} />\n<Radio\n  {...controlProps('c')}\n  sx={{\n    '& .MuiSvgIcon-root': {\n      fontSize: 28,\n    },\n  }}\n/>",moduleTS:"./SizeRadioButtons.js",rawTS:"import * as React from 'react';\nimport Radio from '@mui/material/Radio';\n\nexport default function SizeRadioButtons() {\n  const [selectedValue, setSelectedValue] = React.useState('a');\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedValue(event.target.value);\n  };\n\n  const controlProps = (item: string) => ({\n    checked: selectedValue === item,\n    onChange: handleChange,\n    value: item,\n    name: 'size-radio-button-demo',\n    inputProps: { 'aria-label': item },\n  });\n\n  return (\n    <div>\n      <Radio {...controlProps('a')} size=\"small\" />\n      <Radio {...controlProps('b')} />\n      <Radio\n        {...controlProps('c')}\n        sx={{\n          '& .MuiSvgIcon-root': {\n            fontSize: 28,\n          },\n        }}\n      />\n    </div>\n  );\n}\n"},"pages/components/radio-buttons/ColorRadioButtons.js":{module:"./ColorRadioButtons.js",raw:"import * as React from 'react';\nimport { pink } from '@mui/material/colors';\nimport Radio from '@mui/material/Radio';\n\nexport default function ColorRadioButtons() {\n  const [selectedValue, setSelectedValue] = React.useState('a');\n\n  const handleChange = (event) => {\n    setSelectedValue(event.target.value);\n  };\n\n  const controlProps = (item) => ({\n    checked: selectedValue === item,\n    onChange: handleChange,\n    value: item,\n    name: 'color-radio-button-demo',\n    inputProps: { 'aria-label': item },\n  });\n\n  return (\n    <div>\n      <Radio {...controlProps('a')} />\n      <Radio {...controlProps('b')} color=\"secondary\" />\n      <Radio {...controlProps('c')} color=\"success\" />\n      <Radio {...controlProps('d')} color=\"default\" />\n      <Radio\n        {...controlProps('e')}\n        sx={{\n          color: pink[800],\n          '&.Mui-checked': {\n            color: pink[600],\n          },\n        }}\n      />\n    </div>\n  );\n}\n",jsxPreview:"<Radio {...controlProps('a')} />\n<Radio {...controlProps('b')} color=\"secondary\" />\n<Radio {...controlProps('c')} color=\"success\" />\n<Radio {...controlProps('d')} color=\"default\" />\n<Radio\n  {...controlProps('e')}\n  sx={{\n    color: pink[800],\n    '&.Mui-checked': {\n      color: pink[600],\n    },\n  }}\n/>",moduleTS:"./ColorRadioButtons.js",rawTS:"import * as React from 'react';\nimport { pink } from '@mui/material/colors';\nimport Radio from '@mui/material/Radio';\n\nexport default function ColorRadioButtons() {\n  const [selectedValue, setSelectedValue] = React.useState('a');\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedValue(event.target.value);\n  };\n\n  const controlProps = (item: string) => ({\n    checked: selectedValue === item,\n    onChange: handleChange,\n    value: item,\n    name: 'color-radio-button-demo',\n    inputProps: { 'aria-label': item },\n  });\n\n  return (\n    <div>\n      <Radio {...controlProps('a')} />\n      <Radio {...controlProps('b')} color=\"secondary\" />\n      <Radio {...controlProps('c')} color=\"success\" />\n      <Radio {...controlProps('d')} color=\"default\" />\n      <Radio\n        {...controlProps('e')}\n        sx={{\n          color: pink[800],\n          '&.Mui-checked': {\n            color: pink[600],\n          },\n        }}\n      />\n    </div>\n  );\n}\n"},"pages/components/radio-buttons/FormControlLabelPlacement.js":{module:"./FormControlLabelPlacement.js",raw:'import * as React from \'react\';\nimport Radio from \'@mui/material/Radio\';\nimport RadioGroup from \'@mui/material/RadioGroup\';\nimport FormControlLabel from \'@mui/material/FormControlLabel\';\nimport FormControl from \'@mui/material/FormControl\';\nimport FormLabel from \'@mui/material/FormLabel\';\n\nexport default function FormControlLabelPlacement() {\n  return (\n    <FormControl component="fieldset">\n      <FormLabel component="legend">labelPlacement</FormLabel>\n      <RadioGroup row aria-label="position" name="position" defaultValue="top">\n        <FormControlLabel\n          value="top"\n          control={<Radio />}\n          label="Top"\n          labelPlacement="top"\n        />\n        <FormControlLabel\n          value="start"\n          control={<Radio />}\n          label="Start"\n          labelPlacement="start"\n        />\n        <FormControlLabel\n          value="bottom"\n          control={<Radio />}\n          label="Bottom"\n          labelPlacement="bottom"\n        />\n        <FormControlLabel value="end" control={<Radio />} label="End" />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n',moduleTS:"./FormControlLabelPlacement.js",rawTS:'import * as React from \'react\';\nimport Radio from \'@mui/material/Radio\';\nimport RadioGroup from \'@mui/material/RadioGroup\';\nimport FormControlLabel from \'@mui/material/FormControlLabel\';\nimport FormControl from \'@mui/material/FormControl\';\nimport FormLabel from \'@mui/material/FormLabel\';\n\nexport default function FormControlLabelPlacement() {\n  return (\n    <FormControl component="fieldset">\n      <FormLabel component="legend">labelPlacement</FormLabel>\n      <RadioGroup row aria-label="position" name="position" defaultValue="top">\n        <FormControlLabel\n          value="top"\n          control={<Radio />}\n          label="Top"\n          labelPlacement="top"\n        />\n        <FormControlLabel\n          value="start"\n          control={<Radio />}\n          label="Start"\n          labelPlacement="start"\n        />\n        <FormControlLabel\n          value="bottom"\n          control={<Radio />}\n          label="Bottom"\n          labelPlacement="bottom"\n        />\n        <FormControlLabel value="end" control={<Radio />} label="End" />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n'},"pages/components/radio-buttons/UseRadioGroup.js":{module:"./UseRadioGroup.js",raw:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport RadioGroup, { useRadioGroup } from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Radio from '@mui/material/Radio';\n\nconst StyledFormControlLabel = styled((props) => <FormControlLabel {...props} />)(\n  ({ theme, checked }) => ({\n    '.MuiFormControlLabel-label': checked && {\n      color: theme.palette.primary.main,\n    },\n  }),\n);\n\nfunction MyFormControlLabel(props) {\n  const radioGroup = useRadioGroup();\n\n  let checked = false;\n\n  if (radioGroup) {\n    checked = radioGroup.value === props.value;\n  }\n\n  return <StyledFormControlLabel checked={checked} {...props} />;\n}\n\nMyFormControlLabel.propTypes = {\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any,\n};\n\nexport default function UseRadioGroup() {\n  return (\n    <RadioGroup name=\"use-radio-group\" defaultValue=\"first\">\n      <MyFormControlLabel value=\"first\" label=\"First\" control={<Radio />} />\n      <MyFormControlLabel value=\"second\" label=\"Second\" control={<Radio />} />\n    </RadioGroup>\n  );\n}\n",jsxPreview:'<RadioGroup name="use-radio-group" defaultValue="first">\n  <MyFormControlLabel value="first" label="First" control={<Radio />} />\n  <MyFormControlLabel value="second" label="Second" control={<Radio />} />\n</RadioGroup>',moduleTS:"./UseRadioGroup.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport RadioGroup, { useRadioGroup } from '@mui/material/RadioGroup';\nimport FormControlLabel, {\n  FormControlLabelProps,\n} from '@mui/material/FormControlLabel';\nimport Radio from '@mui/material/Radio';\n\ninterface StyledFormControlLabelProps extends FormControlLabelProps {\n  checked: boolean;\n}\n\nconst StyledFormControlLabel = styled((props: StyledFormControlLabelProps) => (\n  <FormControlLabel {...props} />\n))(({ theme, checked }) => ({\n  '.MuiFormControlLabel-label': checked && {\n    color: theme.palette.primary.main,\n  },\n}));\n\nfunction MyFormControlLabel(props: FormControlLabelProps) {\n  const radioGroup = useRadioGroup();\n\n  let checked = false;\n\n  if (radioGroup) {\n    checked = radioGroup.value === props.value;\n  }\n\n  return <StyledFormControlLabel checked={checked} {...props} />;\n}\n\nexport default function UseRadioGroup() {\n  return (\n    <RadioGroup name=\"use-radio-group\" defaultValue=\"first\">\n      <MyFormControlLabel value=\"first\" label=\"First\" control={<Radio />} />\n      <MyFormControlLabel value=\"second\" label=\"Second\" control={<Radio />} />\n    </RadioGroup>\n  );\n}\n"},"pages/components/radio-buttons/CustomizedRadios.js":{module:"./CustomizedRadios.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nconst BpIcon = styled('span')(({ theme }) => ({\n  borderRadius: '50%',\n  width: 16,\n  height: 16,\n  boxShadow:\n    theme.palette.mode === 'dark'\n      ? '0 0 0 1px rgb(16 22 26 / 40%)'\n      : 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n  backgroundColor: theme.palette.mode === 'dark' ? '#394b59' : '#f5f8fa',\n  backgroundImage:\n    theme.palette.mode === 'dark'\n      ? 'linear-gradient(180deg,hsla(0,0%,100%,.05),hsla(0,0%,100%,0))'\n      : 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n  '.Mui-focusVisible &': {\n    outline: '2px auto rgba(19,124,189,.6)',\n    outlineOffset: 2,\n  },\n  'input:hover ~ &': {\n    backgroundColor: theme.palette.mode === 'dark' ? '#30404d' : '#ebf1f5',\n  },\n  'input:disabled ~ &': {\n    boxShadow: 'none',\n    background:\n      theme.palette.mode === 'dark' ? 'rgba(57,75,89,.5)' : 'rgba(206,217,224,.5)',\n  },\n}));\n\nconst BpCheckedIcon = styled(BpIcon)({\n  backgroundColor: '#137cbd',\n  backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n  '&:before': {\n    display: 'block',\n    width: 16,\n    height: 16,\n    backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n    content: '\"\"',\n  },\n  'input:hover ~ &': {\n    backgroundColor: '#106ba3',\n  },\n});\n\n// Inspired by blueprintjs\nfunction BpRadio(props) {\n  return (\n    <Radio\n      sx={{\n        '&:hover': {\n          bgcolor: 'transparent',\n        },\n      }}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<BpCheckedIcon />}\n      icon={<BpIcon />}\n      {...props}\n    />\n  );\n}\n\nexport default function CustomizedRadios() {\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Gender</FormLabel>\n      <RadioGroup defaultValue=\"female\" aria-label=\"gender\" name=\"customized-radios\">\n        <FormControlLabel value=\"female\" control={<BpRadio />} label=\"Female\" />\n        <FormControlLabel value=\"male\" control={<BpRadio />} label=\"Male\" />\n        <FormControlLabel value=\"other\" control={<BpRadio />} label=\"Other\" />\n        <FormControlLabel\n          value=\"disabled\"\n          disabled\n          control={<BpRadio />}\n          label=\"(Disabled option)\"\n        />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n",jsxPreview:'<FormControl component="fieldset">\n  <FormLabel component="legend">Gender</FormLabel>\n  <RadioGroup defaultValue="female" aria-label="gender" name="customized-radios">\n    <FormControlLabel value="female" control={<BpRadio />} label="Female" />\n    <FormControlLabel value="male" control={<BpRadio />} label="Male" />\n    <FormControlLabel value="other" control={<BpRadio />} label="Other" />\n    <FormControlLabel\n      value="disabled"\n      disabled\n      control={<BpRadio />}\n      label="(Disabled option)"\n    />\n  </RadioGroup>\n</FormControl>',moduleTS:"./CustomizedRadios.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Radio, { RadioProps } from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nconst BpIcon = styled('span')(({ theme }) => ({\n  borderRadius: '50%',\n  width: 16,\n  height: 16,\n  boxShadow:\n    theme.palette.mode === 'dark'\n      ? '0 0 0 1px rgb(16 22 26 / 40%)'\n      : 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n  backgroundColor: theme.palette.mode === 'dark' ? '#394b59' : '#f5f8fa',\n  backgroundImage:\n    theme.palette.mode === 'dark'\n      ? 'linear-gradient(180deg,hsla(0,0%,100%,.05),hsla(0,0%,100%,0))'\n      : 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n  '.Mui-focusVisible &': {\n    outline: '2px auto rgba(19,124,189,.6)',\n    outlineOffset: 2,\n  },\n  'input:hover ~ &': {\n    backgroundColor: theme.palette.mode === 'dark' ? '#30404d' : '#ebf1f5',\n  },\n  'input:disabled ~ &': {\n    boxShadow: 'none',\n    background:\n      theme.palette.mode === 'dark' ? 'rgba(57,75,89,.5)' : 'rgba(206,217,224,.5)',\n  },\n}));\n\nconst BpCheckedIcon = styled(BpIcon)({\n  backgroundColor: '#137cbd',\n  backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n  '&:before': {\n    display: 'block',\n    width: 16,\n    height: 16,\n    backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n    content: '\"\"',\n  },\n  'input:hover ~ &': {\n    backgroundColor: '#106ba3',\n  },\n});\n\n// Inspired by blueprintjs\nfunction BpRadio(props: RadioProps) {\n  return (\n    <Radio\n      sx={{\n        '&:hover': {\n          bgcolor: 'transparent',\n        },\n      }}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<BpCheckedIcon />}\n      icon={<BpIcon />}\n      {...props}\n    />\n  );\n}\n\nexport default function CustomizedRadios() {\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Gender</FormLabel>\n      <RadioGroup defaultValue=\"female\" aria-label=\"gender\" name=\"customized-radios\">\n        <FormControlLabel value=\"female\" control={<BpRadio />} label=\"Female\" />\n        <FormControlLabel value=\"male\" control={<BpRadio />} label=\"Male\" />\n        <FormControlLabel value=\"other\" control={<BpRadio />} label=\"Other\" />\n        <FormControlLabel\n          value=\"disabled\"\n          disabled\n          control={<BpRadio />}\n          label=\"(Disabled option)\"\n        />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n"},"pages/components/radio-buttons/ErrorRadios.js":{module:"./ErrorRadios.js",raw:"import * as React from 'react';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormLabel from '@mui/material/FormLabel';\nimport Button from '@mui/material/Button';\n\nexport default function ErrorRadios() {\n  const [value, setValue] = React.useState('');\n  const [error, setError] = React.useState(false);\n  const [helperText, setHelperText] = React.useState('Choose wisely');\n\n  const handleRadioChange = (event) => {\n    setValue(event.target.value);\n    setHelperText(' ');\n    setError(false);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (value === 'best') {\n      setHelperText('You got it!');\n      setError(false);\n    } else if (value === 'worst') {\n      setHelperText('Sorry, wrong answer!');\n      setError(true);\n    } else {\n      setHelperText('Please select an option.');\n      setError(true);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormControl\n        sx={{ m: 3 }}\n        component=\"fieldset\"\n        error={error}\n        variant=\"standard\"\n      >\n        <FormLabel component=\"legend\">Pop quiz: MUI is...</FormLabel>\n        <RadioGroup\n          aria-label=\"quiz\"\n          name=\"quiz\"\n          value={value}\n          onChange={handleRadioChange}\n        >\n          <FormControlLabel value=\"best\" control={<Radio />} label=\"The best!\" />\n          <FormControlLabel value=\"worst\" control={<Radio />} label=\"The worst.\" />\n        </RadioGroup>\n        <FormHelperText>{helperText}</FormHelperText>\n        <Button sx={{ mt: 1, mr: 1 }} type=\"submit\" variant=\"outlined\">\n          Check Answer\n        </Button>\n      </FormControl>\n    </form>\n  );\n}\n",moduleTS:"./ErrorRadios.js",rawTS:"import * as React from 'react';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormLabel from '@mui/material/FormLabel';\nimport Button from '@mui/material/Button';\n\nexport default function ErrorRadios() {\n  const [value, setValue] = React.useState('');\n  const [error, setError] = React.useState(false);\n  const [helperText, setHelperText] = React.useState('Choose wisely');\n\n  const handleRadioChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue((event.target as HTMLInputElement).value);\n    setHelperText(' ');\n    setError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (value === 'best') {\n      setHelperText('You got it!');\n      setError(false);\n    } else if (value === 'worst') {\n      setHelperText('Sorry, wrong answer!');\n      setError(true);\n    } else {\n      setHelperText('Please select an option.');\n      setError(true);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormControl\n        sx={{ m: 3 }}\n        component=\"fieldset\"\n        error={error}\n        variant=\"standard\"\n      >\n        <FormLabel component=\"legend\">Pop quiz: MUI is...</FormLabel>\n        <RadioGroup\n          aria-label=\"quiz\"\n          name=\"quiz\"\n          value={value}\n          onChange={handleRadioChange}\n        >\n          <FormControlLabel value=\"best\" control={<Radio />} label=\"The best!\" />\n          <FormControlLabel value=\"worst\" control={<Radio />} label=\"The worst.\" />\n        </RadioGroup>\n        <FormHelperText>{helperText}</FormHelperText>\n        <Button sx={{ mt: 1, mr: 1 }} type=\"submit\" variant=\"outlined\">\n          Check Answer\n        </Button>\n      </FormControl>\n    </form>\n  );\n}\n"}},A={"./RadioButtonsGroup.js":function(){return a||(a=(0,u.jsxs)(d.Z,{component:"fieldset",children:[(0,u.jsx)(c.Z,{component:"legend",children:"Gender"}),(0,u.jsxs)(i.Z,{"aria-label":"gender",defaultValue:"female",name:"radio-buttons-group",children:[(0,u.jsx)(s.Z,{value:"female",control:(0,u.jsx)(l.Z,{}),label:"Female"}),(0,u.jsx)(s.Z,{value:"male",control:(0,u.jsx)(l.Z,{}),label:"Male"}),(0,u.jsx)(s.Z,{value:"other",control:(0,u.jsx)(l.Z,{}),label:"Other"})]})]}))},"./ControlledRadioButtonsGroup.js":function(){var o=t.useState("female"),e=(0,f.Z)(o,2),n=e[0],a=e[1];return(0,u.jsxs)(d.Z,{component:"fieldset",children:[p||(p=(0,u.jsx)(c.Z,{component:"legend",children:"Gender"})),(0,u.jsxs)(i.Z,{"aria-label":"gender",name:"controlled-radio-buttons-group",value:n,onChange:function(o){a(o.target.value)},children:[m||(m=(0,u.jsx)(s.Z,{value:"female",control:(0,u.jsx)(l.Z,{}),label:"Female"})),h||(h=(0,u.jsx)(s.Z,{value:"male",control:(0,u.jsx)(l.Z,{}),label:"Male"}))]})]})},"./RowRadioButtonsGroup.js":function(){return b||(b=(0,u.jsxs)(d.Z,{component:"fieldset",children:[(0,u.jsx)(c.Z,{component:"legend",children:"Gender"}),(0,u.jsxs)(i.Z,{row:!0,"aria-label":"gender",name:"row-radio-buttons-group",children:[(0,u.jsx)(s.Z,{value:"female",control:(0,u.jsx)(l.Z,{}),label:"Female"}),(0,u.jsx)(s.Z,{value:"male",control:(0,u.jsx)(l.Z,{}),label:"Male"}),(0,u.jsx)(s.Z,{value:"other",control:(0,u.jsx)(l.Z,{}),label:"Other"}),(0,u.jsx)(s.Z,{value:"disabled",disabled:!0,control:(0,u.jsx)(l.Z,{}),label:"other"})]})]}))},"./RadioButtons.js":function(){var o=t.useState("a"),e=(0,f.Z)(o,2),n=e[0],a=e[1],r=function(o){a(o.target.value)};return(0,u.jsxs)("div",{children:[(0,u.jsx)(l.Z,{checked:"a"===n,onChange:r,value:"a",name:"radio-buttons",inputProps:{"aria-label":"A"}}),(0,u.jsx)(l.Z,{checked:"b"===n,onChange:r,value:"b",name:"radio-buttons",inputProps:{"aria-label":"B"}})]})},"./SizeRadioButtons.js":function(){var o=t.useState("a"),e=(0,f.Z)(o,2),n=e[0],a=e[1],r=function(o){a(o.target.value)},i=function(o){return{checked:n===o,onChange:r,value:o,name:"size-radio-button-demo",inputProps:{"aria-label":o}}};return(0,u.jsxs)("div",{children:[(0,u.jsx)(l.Z,(0,g.Z)((0,g.Z)({},i("a")),{},{size:"small"})),(0,u.jsx)(l.Z,(0,g.Z)({},i("b"))),(0,u.jsx)(l.Z,(0,g.Z)((0,g.Z)({},i("c")),{},{sx:{"& .MuiSvgIcon-root":{fontSize:28}}}))]})},"./ColorRadioButtons.js":function(){var o=t.useState("a"),e=(0,f.Z)(o,2),n=e[0],a=e[1],r=function(o){a(o.target.value)},i=function(o){return{checked:n===o,onChange:r,value:o,name:"color-radio-button-demo",inputProps:{"aria-label":o}}};return(0,u.jsxs)("div",{children:[(0,u.jsx)(l.Z,(0,g.Z)({},i("a"))),(0,u.jsx)(l.Z,(0,g.Z)((0,g.Z)({},i("b")),{},{color:"secondary"})),(0,u.jsx)(l.Z,(0,g.Z)((0,g.Z)({},i("c")),{},{color:"success"})),(0,u.jsx)(l.Z,(0,g.Z)((0,g.Z)({},i("d")),{},{color:"default"})),(0,u.jsx)(l.Z,(0,g.Z)((0,g.Z)({},i("e")),{},{sx:{color:R.Z[800],"&.Mui-checked":{color:R.Z[600]}}}))]})},"./FormControlLabelPlacement.js":function(){return v||(v=(0,u.jsxs)(d.Z,{component:"fieldset",children:[(0,u.jsx)(c.Z,{component:"legend",children:"labelPlacement"}),(0,u.jsxs)(i.Z,{row:!0,"aria-label":"position",name:"position",defaultValue:"top",children:[(0,u.jsx)(s.Z,{value:"top",control:(0,u.jsx)(l.Z,{}),label:"Top",labelPlacement:"top"}),(0,u.jsx)(s.Z,{value:"start",control:(0,u.jsx)(l.Z,{}),label:"Start",labelPlacement:"start"}),(0,u.jsx)(s.Z,{value:"bottom",control:(0,u.jsx)(l.Z,{}),label:"Bottom",labelPlacement:"bottom"}),(0,u.jsx)(s.Z,{value:"end",control:(0,u.jsx)(l.Z,{}),label:"End"})]})]}))},"./UseRadioGroup.js":function(){return k||(k=(0,u.jsxs)(i.Z,{name:"use-radio-group",defaultValue:"first",children:[(0,u.jsx)(j,{value:"first",label:"First",control:(0,u.jsx)(l.Z,{})}),(0,u.jsx)(j,{value:"second",label:"Second",control:(0,u.jsx)(l.Z,{})})]}))},"./CustomizedRadios.js":function(){return F||(F=(0,u.jsxs)(d.Z,{component:"fieldset",children:[(0,u.jsx)(c.Z,{component:"legend",children:"Gender"}),(0,u.jsxs)(i.Z,{defaultValue:"female","aria-label":"gender",name:"customized-radios",children:[(0,u.jsx)(s.Z,{value:"female",control:(0,u.jsx)(S,{}),label:"Female"}),(0,u.jsx)(s.Z,{value:"male",control:(0,u.jsx)(S,{}),label:"Male"}),(0,u.jsx)(s.Z,{value:"other",control:(0,u.jsx)(S,{}),label:"Other"}),(0,u.jsx)(s.Z,{value:"disabled",disabled:!0,control:(0,u.jsx)(S,{}),label:"(Disabled option)"})]})]}))},"./ErrorRadios.js":function(){var o=t.useState(""),e=(0,f.Z)(o,2),n=e[0],a=e[1],r=t.useState(!1),p=(0,f.Z)(r,2),m=p[0],h=p[1],b=t.useState("Choose wisely"),g=(0,f.Z)(b,2),v=g[0],R=g[1];return(0,u.jsx)("form",{onSubmit:function(o){o.preventDefault(),"best"===n?(R("You got it!"),h(!1)):"worst"===n?(R("Sorry, wrong answer!"),h(!0)):(R("Please select an option."),h(!0))},children:(0,u.jsxs)(d.Z,{sx:{m:3},component:"fieldset",error:m,variant:"standard",children:[P||(P=(0,u.jsx)(c.Z,{component:"legend",children:"Pop quiz: MUI is..."})),(0,u.jsxs)(i.Z,{"aria-label":"quiz",name:"quiz",value:n,onChange:function(o){a(o.target.value),R(" "),h(!1)},children:[B||(B=(0,u.jsx)(s.Z,{value:"best",control:(0,u.jsx)(l.Z,{}),label:"The best!"})),Z||(Z=(0,u.jsx)(s.Z,{value:"worst",control:(0,u.jsx)(l.Z,{}),label:"The worst."}))]}),(0,u.jsx)(T.Z,{children:v}),(0,u.jsx)(I.Z,{sx:{mt:1,mr:1},type:"submit",variant:"outlined",children:"Check Answer"})]})})}};function H(){return V||(V=(0,u.jsx)(r.Z,{demos:M,docs:E,demoComponents:A}))}},658295:function(o,e){"use strict";e.Z={50:"#fce4ec",100:"#f8bbd0",200:"#f48fb1",300:"#f06292",400:"#ec407a",500:"#e91e63",600:"#d81b60",700:"#c2185b",800:"#ad1457",900:"#880e4f",A100:"#ff80ab",A200:"#ff4081",A400:"#f50057",A700:"#c51162"}},948042:function(o,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/radio-buttons",function(){return n(423584)}])},309318:function(o,e,n){"use strict";function a(o){if(void 0===o)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return o}n.d(e,{Z:function(){return a}})},962187:function(o,e,n){"use strict";n.d(e,{Z:function(){return p}});var a=n(875499),t=n(128274),r=n(982055);function l(o){return(l=t?r:function(o){return o.__proto__||r(o)})(o)}var i=n(41281),s=n(950093);function d(o){return(d="function"===typeof i&&"symbol"===typeof s?function(o){return typeof o}:function(o){return o&&"function"===typeof i&&o.constructor===i&&o!==i.prototype?"symbol":typeof o})(o)}var c=n(309318);function u(o,e){if(e&&("object"===d(e)||"function"===typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return(0,c.Z)(o)}function p(o){var e=function(){if("undefined"===typeof Reflect||!a)return!1;if(a.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(a(Boolean,[],(function(){}))),!0}catch(o){return!1}}();return function(){var n,t=l(o);if(e){var r=l(this).constructor;n=a(t,arguments,r)}else n=t.apply(this,arguments);return u(this,n)}}},892362:function(o,e,n){"use strict";n.d(e,{Z:function(){return l}});var a=n(38401),t=n(128274);function r(o,e){return(r=t||function(o,e){return o.__proto__=e,o})(o,e)}function l(o,e){if("function"!==typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");o.prototype=a(e&&e.prototype,{constructor:{value:o,writable:!0,configurable:!0}}),e&&r(o,e)}}},function(o){o.O(0,[4631,1194,2591,5408,6950,1895,8100,1980,4376,892,2798,6753,6750,7439,6035,3229,7414,478,16,4616,5236,9774,2888,179],(function(){return e=948042,o(o.s=e);var e}));var e=o.O();_N_E=e}]);