(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6039],{587725:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return It}});var a,o,s,l,i,r,d,p,c,u,m,h,f,x,g,b,k,v,y,F,T,I=t(827378),w=t(494616),C=t(375205),j=t(267414),S=t(824246);var B,P,Z,V,A,M,R=t(25778);var z,L,H,q=t(683990),U=t(101497),E=t(847635),W=t(828996),N=t(712905);var D=t(768913),O=[{value:"USD",label:"$"},{value:"EUR",label:"\u20ac"},{value:"BTC",label:"\u0e3f"},{value:"JPY",label:"\xa5"}];var $,_,Y,G,K,J,X,Q,nn,en,tn,an,on,sn,ln,rn,dn,pn,cn,un,mn,hn,fn,xn,gn,bn,kn,vn=t(957379),yn=t(295649),Fn=t(62072),Tn=t(662374),In=t(231548),wn=t(336146),Cn=t(987970),jn=t(827108);var Sn,Bn,Pn,Zn,Vn,An,Mn,Rn,zn,Ln,Hn,qn,Un,En,Wn,Nn,Dn,On,$n,_n,Yn,Gn,Kn,Jn,Xn=t(568075);function Qn(){return(0,S.jsx)(C.Z,{sx:{height:20,backgroundColor:function(n){return"light"===n.palette.mode?"rgba(255, 0, 0, 0.1)":"rgb(255 132 132 / 25%)"}}})}var ne,ee,te,ae={"aria-label":"description"};var oe,se,le,ie=t(290763),re=t(240120),de=t(380602),pe=(0,ie.ZP)(j.Z)({"& label.Mui-focused":{color:"green"},"& .MuiInput-underline:after":{borderBottomColor:"green"},"& .MuiOutlinedInput-root":{"& fieldset":{borderColor:"red"},"&:hover fieldset":{borderColor:"yellow"},"&.Mui-focused fieldset":{borderColor:"green"}}}),ce=(0,ie.ZP)(de.ZP)((function(n){var e=n.theme;return{"label + &":{marginTop:e.spacing(3)},"& .MuiInputBase-input":{borderRadius:4,position:"relative",backgroundColor:"light"===e.palette.mode?"#fcfcfb":"#2b2b2b",border:"1px solid #ced4da",fontSize:16,width:"auto",padding:"10px 12px",transition:e.transitions.create(["border-color","background-color","box-shadow"]),fontFamily:["-apple-system","BlinkMacSystemFont",'"Segoe UI"',"Roboto",'"Helvetica Neue"',"Arial","sans-serif",'"Apple Color Emoji"','"Segoe UI Emoji"','"Segoe UI Symbol"'].join(","),"&:focus":{boxShadow:"".concat((0,re.Fq)(e.palette.primary.main,.25)," 0 0 0 0.2rem"),borderColor:e.palette.primary.main}}}})),ue=(0,ie.ZP)((function(n){return(0,S.jsx)(j.Z,(0,yn.Z)({InputProps:{disableUnderline:!0}},n))}))((function(n){var e=n.theme;return{"& .MuiFilledInput-root":{border:"1px solid #e2e2e1",overflow:"hidden",borderRadius:4,backgroundColor:"light"===e.palette.mode?"#fcfcfb":"#2b2b2b",transition:e.transitions.create(["border-color","background-color","box-shadow"]),"&:hover":{backgroundColor:"transparent"},"&.Mui-focused":{backgroundColor:"transparent",boxShadow:"".concat((0,re.Fq)(e.palette.primary.main,.25)," 0 0 0 2px"),borderColor:e.palette.primary.main}}}})),me=(0,ie.ZP)(j.Z)({"& input:valid + fieldset":{borderColor:"green",borderWidth:2},"& input:invalid + fieldset":{borderColor:"red",borderWidth:2},"& input:valid:focus + fieldset":{borderLeftWidth:6,padding:"4px !important"}});var he,fe,xe,ge=t(709497),be=t(610870),ke=t(542255),ve=t(770154),ye=t(314684);var Fe,Te,Ie,we,Ce,je,Se=t(760163);function Be(){var n=((0,Se.Z)()||{}).focused,e=I.useMemo((function(){return n?"This field is being focused":"Helper text"}),[n]);return(0,S.jsx)(wn.Z,{children:e})}var Pe,Ze=t(481936),Ve=t(470516),Ae=t(362740),Me=["onChange"],Re=["onChange"],ze=I.forwardRef((function(n,e){var t=n.onChange,a=(0,Ze.Z)(n,Me);return(0,S.jsx)(Ve.oc,(0,yn.Z)((0,yn.Z)({},a),{},{mask:"(#00) 000-0000",definitions:{"#":/[1-9]/},inputRef:e,onAccept:function(e){return t({target:{name:n.name,value:e}})},overwrite:!0}))})),Le=I.forwardRef((function(n,e){var t=n.onChange,a=(0,Ze.Z)(n,Re);return(0,S.jsx)(Ae.Z,(0,yn.Z)((0,yn.Z)({},a),{},{getInputRef:e,onValueChange:function(e){t({target:{name:n.name,value:e.value}})},thousandSeparator:!0,isNumericString:!0,prefix:"$"}))}));var He=t(416903),qe=t(848939);var Ue=I.createContext(void 0);var Ee=t(564410);function We(n,e){var t,a,o,s,l,i,r,d=n.defaultValue,p=n.disabled,c=void 0!==p&&p,u=n.error,m=void 0!==u&&u,h=n.onBlur,f=n.onChange,x=n.onFocus,g=n.required,b=void 0!==g&&g,k=n.value,v=I.useContext(Ue);v?(t=v.value,o=null!==(l=v.disabled)&&void 0!==l&&l,a=null!==(i=v.required)&&void 0!==i&&i,s=null!==(r=v.error)&&void 0!==r&&r):(t=k,o=c,a=b,s=m);var y=I.useRef(null!=t).current,F=I.useCallback((function(n){0}),[]),T=I.useRef(null),w=(0,qe.Z)(e,F),C=(0,qe.Z)(T,w),j=I.useState(!1),S=(0,R.Z)(j,2),B=S[0],P=S[1];I.useEffect((function(){!v&&o&&B&&(P(!1),null===h||void 0===h||h())}),[v,o,B,h]);var Z=function(n){return function(e){var t,a;null!==v&&void 0!==v&&v.disabled?e.stopPropagation():(null===(t=n.onFocus)||void 0===t||t.call(n,e),v&&v.onFocus?null===v||void 0===v||null===(a=v.onFocus)||void 0===a||a.call(v):P(!0))}},V=function(n){return function(e){var t,a;if(!y){var o=e.target||T.current;if(null==o)throw new Error((0,He.Z)(17))}null===v||void 0===v||null===(t=v.onChange)||void 0===t||t.call(v,e);for(var s=arguments.length,l=new Array(s>1?s-1:0),i=1;i<s;i++)l[i-1]=arguments[i];null===(a=n.onChange)||void 0===a||a.call.apply(a,[n,e].concat(l))}};return{disabled:o,error:s,focused:B,formControlContext:v,getInputProps:function(n){var e,l={onBlur:h,onChange:f,onFocus:x},i=(0,yn.Z)((0,yn.Z)({},l),(0,Ee.Z)(n)),r=(0,yn.Z)((0,yn.Z)((0,yn.Z)({},n),i),{},{onBlur:(e=i,function(n){var t;null===(t=e.onBlur)||void 0===t||t.call(e,n),v&&v.onBlur?v.onBlur():P(!1)}),onChange:V(i),onFocus:Z(i)});return(0,yn.Z)((0,yn.Z)({},r),{},{"aria-invalid":s||void 0,defaultValue:d,ref:C,value:t,required:a,disabled:o})},getRootProps:function(e){var t,a=(0,Ee.Z)(n,["onBlur","onChange","onFocus"]),o=(0,yn.Z)((0,yn.Z)({},a),(0,Ee.Z)(e));return(0,yn.Z)((0,yn.Z)((0,yn.Z)({},e),o),{},{onClick:(t=o,function(n){var e;T.current&&n.currentTarget===n.target&&T.current.focus(),null===(e=t.onClick)||void 0===e||e.call(t,n)})})},required:a,value:t}}var Ne,De=t(888432),Oe="#80BFFF",$e="#3399FF",_e="#F3F6F9",Ye="#E7EBF0",Ge="#CDD2D7",Ke="#B2BAC2",Je="#6F7E8C",Xe="#2D3843",Qe="#1A2027",nt=(0,De.Z)("input")((function(n){var e=n.theme;return"\n  width: 320px;\n  font-size: 0.875rem;\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ".concat("dark"===e.palette.mode?Ge:Qe,";\n  background: ").concat("dark"===e.palette.mode?Qe:_e,";\n  border: 1px solid ").concat("dark"===e.palette.mode?Xe:Ge,";\n  border-radius: 8px;\n  padding: 12px 12px;\n  transition: all 150ms ease;\n\n  &:hover {\n    background: ").concat("dark"===e.palette.mode?null:Ye,";\n    border-color: ").concat("dark"===e.palette.mode?Je:Ke,";\n  }\n\n  &:focus {\n    outline: 2px solid ").concat("dark"===e.palette.mode?$e:Oe,";\n  }\n")})),et=I.forwardRef((function(n,e){var t=We(n,e),a=t.getRootProps,o=t.getInputProps;return(0,S.jsx)("div",(0,yn.Z)((0,yn.Z)({},a()),{},{children:(0,S.jsx)(nt,(0,yn.Z)((0,yn.Z)({},n),o()))}))}));var tt=t(138944),at=t(376961),ot=t(340815);var st,lt=(0,t(84408).Z)("MuiInput",["root","formControl","focused","disabled","error","multiline","input","inputMultiline","inputTypeSearch","adornedStart","adornedEnd"]),it=["aria-describedby","aria-label","aria-labelledby","autoComplete","autoFocus","className","component","components","componentsProps","defaultValue","disabled","endAdornment","error","id","maxRows","minRows","multiline","name","onClick","onChange","onKeyDown","onKeyUp","onFocus","onBlur","placeholder","readOnly","required","rows","type","startAdornment","value"],rt=I.forwardRef((function(n,e){var t,a,o,s,l,i=n["aria-describedby"],r=n["aria-label"],d=n["aria-labelledby"],p=n.autoComplete,c=n.autoFocus,u=n.className,m=n.component,h=n.components,f=void 0===h?{}:h,x=n.componentsProps,g=void 0===x?{}:x,b=n.defaultValue,k=n.disabled,v=n.endAdornment,y=n.error,F=n.id,T=n.maxRows,I=n.minRows,w=n.multiline,C=void 0!==w&&w,j=n.name,B=n.onClick,P=n.onChange,Z=n.onKeyDown,V=n.onKeyUp,A=n.onFocus,M=n.onBlur,R=n.placeholder,z=n.readOnly,L=n.required,H=n.rows,q=n.type,U=void 0===q?"text":q,E=n.startAdornment,W=n.value,N=(0,Ze.Z)(n,it),D=We({disabled:k,defaultValue:b,error:y,onBlur:M,onClick:B,onChange:P,onFocus:A,required:L,value:W},null===(t=g.input)||void 0===t?void 0:t.ref),O=D.getRootProps,$=D.getInputProps,_=D.focused,Y=D.formControlContext,G=D.error,K=D.disabled,J=(0,yn.Z)((0,yn.Z)({},n),{},{disabled:K,error:G,focused:_,formControlContext:Y,multiline:C,type:U}),X=(0,tt.default)(K&&lt.disabled,G&&lt.error,_&&lt.focused,Boolean(Y)&&lt.formControl,C&&lt.multiline,Boolean(E)&&lt.adornedStart,Boolean(v)&&lt.adornedEnd),Q=(0,tt.default)(K&&lt.disabled,C&&lt.multiline),nn={"aria-describedby":i,"aria-label":r,"aria-labelledby":d,autoComplete:p,autoFocus:c,id:F,onKeyDown:Z,onKeyUp:V,name:j,placeholder:R,readOnly:z,type:U},en=null!==(a=null!==m&&void 0!==m?m:f.Root)&&void 0!==a?a:"div",tn=(0,at.Z)(en,(0,yn.Z)((0,yn.Z)({},O((0,yn.Z)((0,yn.Z)({},N),g.root))),{},{className:(0,tt.default)(lt.root,X,u,null===(o=g.root)||void 0===o?void 0:o.className)}),J),an=null!==(s=f.Input)&&void 0!==s?s:"input",on=(0,at.Z)(an,(0,yn.Z)((0,yn.Z)({},$((0,yn.Z)((0,yn.Z)({},g.input),nn))),{},{className:(0,tt.default)(lt.input,Q,null===(l=g.input)||void 0===l?void 0:l.className)}),J);if(C){var sn,ln,rn=(0,ot.Z)(null!==(sn=f.Textarea)&&void 0!==sn?sn:"textarea");on=H?(0,yn.Z)({type:void 0,minRows:rn?void 0:H,maxRows:rn?void 0:H},on):(0,yn.Z)({type:void 0,maxRows:rn?void 0:T,minRows:rn?void 0:I},on),an=null!==(ln=f.Textarea)&&void 0!==ln?ln:"textarea"}return(0,S.jsxs)(en,(0,yn.Z)((0,yn.Z)({},tn),{},{ref:e,children:[E,(0,S.jsx)(an,(0,yn.Z)({},on)),v]}))})),dt="#80BFFF",pt="#3399FF",ct="#F3F6F9",ut="#E7EBF0",mt="#CDD2D7",ht="#B2BAC2",ft="#6F7E8C",xt="#2D3843",gt="#1A2027",bt=(0,De.Z)("input")((function(n){var e=n.theme;return"\n  width: 320px;\n  font-size: 0.875rem;\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ".concat("dark"===e.palette.mode?mt:gt,";\n  background: ").concat("dark"===e.palette.mode?gt:ct,";\n  border: 1px solid ").concat("dark"===e.palette.mode?xt:mt,";\n  border-radius: 8px;\n  padding: 12px 12px;\n  transition: all 150ms ease;\n\n  &:hover {\n    background: ").concat("dark"===e.palette.mode?null:ut,";\n    border-color: ").concat("dark"===e.palette.mode?ft:ht,";\n  }\n\n  &:focus {\n    outline: 2px solid ").concat("dark"===e.palette.mode?pt:dt,";\n  }\n")})),kt=I.forwardRef((function(n,e){return(0,S.jsx)(rt,(0,yn.Z)((0,yn.Z)({components:{Input:bt}},n),{},{ref:e}))}));var vt,yt={en:{description:"Text fields let users enter and edit text.",location:"/docs/src/pages/components/text-fields/text-fields.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Text Field</h1><p class="description">Text fields let users enter and edit text.</p>\n\n<p>Text fields allow users to enter text into a UI. They typically appear in forms and dialogs.</p>\n',{component:"modules/components/ComponentLinkHeader.js"},'<h2 id="heading-basic-textfield"><span class="anchor-link" id="basic-textfield"></span>Basic TextField<a aria-labelledby="heading-basic-textfield" class="anchor-link-style" href="#basic-textfield" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>TextField</code> wrapper component is a complete form control including a label, input, and help text.\nIt comes with three variants: outlined (default), filled, and standard.</p>\n',{demo:"pages/components/text-fields/BasicTextFields.js"},'<p><strong>Note:</strong> The standard variant of the <code>TextField</code> is no longer documented in the <a href="https://material.io/" target="_blank" rel="noopener nofollow">Material Design guidelines</a>\n(<a href="https://medium.com/google-design/the-evolution-of-material-designs-text-fields-603688b3fe03">here&#39;s why</a>),\nbut MUI will continue to support it.</p>\n<h2 id="heading-form-props"><span class="anchor-link" id="form-props"></span>Form props<a aria-labelledby="heading-form-props" class="anchor-link-style" href="#form-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Standard form attributes are supported e.g. <code>required</code>, <code>disabled</code>, <code>type</code>, etc. as well as a <code>helperText</code> which is used to give context about a field&#39;s input, such as how the input will be used.</p>\n',{demo:"pages/components/text-fields/FormPropsTextFields.js"},'<h2 id="heading-validation"><span class="anchor-link" id="validation"></span>Validation<a aria-labelledby="heading-validation" class="anchor-link-style" href="#validation" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>error</code> prop toggles the error state.\nThe <code>helperText</code> prop can then be used to provide feedback to the user about the error.</p>\n',{demo:"pages/components/text-fields/ValidationTextFields.js"},'<h2 id="heading-multiline"><span class="anchor-link" id="multiline"></span>Multiline<a aria-labelledby="heading-multiline" class="anchor-link-style" href="#multiline" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>multiline</code> prop transforms the text field into a <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea"><code>&lt;textarea&gt;</code></a> element.\nUnless the <code>rows</code> prop is set, the height of the text field dynamically matches its content (using <a href="/components/textarea-autosize/">TextareaAutosize</a>).\nYou can use the <code>minRows</code> and <code>maxRows</code> props to bound it.</p>\n',{demo:"pages/components/text-fields/MultilineTextFields.js"},'<h2 id="heading-select"><span class="anchor-link" id="select"></span>Select<a aria-labelledby="heading-select" class="anchor-link-style" href="#select" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>select</code> prop makes the text field use the <a href="/components/selects/">Select</a> component internally.</p>\n',{demo:"pages/components/text-fields/SelectTextFields.js"},'<h2 id="heading-icons"><span class="anchor-link" id="icons"></span>Icons<a aria-labelledby="heading-icons" class="anchor-link-style" href="#icons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>There are multiple ways to display an icon with a text field.</p>\n',{demo:"pages/components/text-fields/InputWithIcon.js"},'<h3 id="heading-input-adornments"><span class="anchor-link" id="input-adornments"></span>Input Adornments<a aria-labelledby="heading-input-adornments" class="anchor-link-style" href="#input-adornments" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The main way is with an <code>InputAdornment</code>.\nThis can be used to add a prefix, a suffix, or an action to an input.\nFor instance, you can use an icon button to hide or reveal the password.</p>\n',{demo:"pages/components/text-fields/InputAdornments.js"},'<h2 id="heading-sizes"><span class="anchor-link" id="sizes"></span>Sizes<a aria-labelledby="heading-sizes" class="anchor-link-style" href="#sizes" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Fancy smaller inputs? Use the <code>size</code> prop.</p>\n',{demo:"pages/components/text-fields/TextFieldSizes.js"},"<p>The <code>filled</code> variant input height can be further reduced by rendering the label outside of it.</p>\n",{demo:"pages/components/text-fields/TextFieldHiddenLabel.js"},'<h2 id="heading-margin"><span class="anchor-link" id="margin"></span>Margin<a aria-labelledby="heading-margin" class="anchor-link-style" href="#margin" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>margin</code> prop can be used to alter the vertical spacing of the text field.\nUsing <code>none</code> (default) doesn&#39;t apply margins to the <code>FormControl</code> whereas <code>dense</code> and <code>normal</code> do.</p>\n',{demo:"pages/components/text-fields/LayoutTextFields.js"},'<h2 id="heading-full-width"><span class="anchor-link" id="full-width"></span>Full width<a aria-labelledby="heading-full-width" class="anchor-link-style" href="#full-width" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><code>fullWidth</code> can be used to make the input take up the full width of its container.</p>\n',{demo:"pages/components/text-fields/FullWidthTextField.js"},'<h2 id="heading-uncontrolled-vs-controlled"><span class="anchor-link" id="uncontrolled-vs-controlled"></span>Uncontrolled vs. Controlled<a aria-labelledby="heading-uncontrolled-vs-controlled" class="anchor-link-style" href="#uncontrolled-vs-controlled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The component can be controlled or uncontrolled.</p>\n',{demo:"pages/components/text-fields/StateTextFields.js"},'<h2 id="heading-components"><span class="anchor-link" id="components"></span>Components<a aria-labelledby="heading-components" class="anchor-link-style" href="#components" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><code>TextField</code> is composed of smaller components (\n<a href="/api/form-control/"><code>FormControl</code></a>,\n<a href="/api/input/"><code>Input</code></a>,\n<a href="/api/filled-input/"><code>FilledInput</code></a>,\n<a href="/api/input-label/"><code>InputLabel</code></a>,\n<a href="/api/outlined-input/"><code>OutlinedInput</code></a>,\nand <a href="/api/form-helper-text/"><code>FormHelperText</code></a>\n) that you can leverage directly to significantly customize your form inputs.</p>\n<p>You might also have noticed that some native HTML input properties are missing from the <code>TextField</code> component.\nThis is on purpose.\nThe component takes care of the most used properties.\nThen, it&#39;s up to the user to use the underlying component shown in the following demo. Still, you can use <code>inputProps</code> (and <code>InputProps</code>, <code>InputLabelProps</code> properties) if you want to avoid some boilerplate.</p>\n',{demo:"pages/components/text-fields/ComposedTextField.js"},'<h2 id="heading-inputs"><span class="anchor-link" id="inputs"></span>Inputs<a aria-labelledby="heading-inputs" class="anchor-link-style" href="#inputs" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2>',{demo:"pages/components/text-fields/Inputs.js"},'<h2 id="heading-color"><span class="anchor-link" id="color"></span>Color<a aria-labelledby="heading-color" class="anchor-link-style" href="#color" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>color</code> prop changes the highlight color of the text field when focused.</p>\n',{demo:"pages/components/text-fields/ColorTextFields.js"},'<h2 id="heading-customization"><span class="anchor-link" id="customization"></span>Customization<a aria-labelledby="heading-customization" class="anchor-link-style" href="#customization" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Here are some examples of customizing the component.\nYou can learn more about this in the <a href="/customization/how-to-customize/">overrides documentation page</a>.</p>\n',{demo:"pages/components/text-fields/CustomizedInputs.js"},'<p>Customization does not stop at CSS.\nYou can use composition to build custom components and give your app a unique feel.\nBelow is an example using the <a href="/api/input-base/"><code>InputBase</code></a> component, inspired by Google Maps.</p>\n',{demo:"pages/components/text-fields/CustomizedInputBase.js",bg:!0},'<p>\ud83c\udfa8 If you are looking for inspiration, you can check <a href="https://mui-treasury.com/styles/text-field/">MUI Treasury&#39;s customization examples</a>.</p>\n<h2 id="heading-useformcontrol"><span class="anchor-link" id="useformcontrol"></span><code>useFormControl</code><a aria-labelledby="heading-useformcontrol" class="anchor-link-style" href="#useformcontrol" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>For advanced customization use cases, a <code>useFormControl()</code> hook is exposed.\nThis hook returns the context value of the parent <code>FormControl</code> component.</p>\n<p><strong>API</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> useFormControl <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/FormControl\'</span><span class="token punctuation">;</span>\n</code></pre>\n<p><strong>Returns</strong></p>\n<p><code>value</code> (<em>object</em>):</p>\n<ul>\n<li><code>value.adornedStart</code> (<em>bool</em>): Indicate whether the child <code>Input</code> or <code>Select</code> component has a start adornment.</li>\n<li><code>value.setAdornedStart</code> (<em>func</em>): Setter function for <code>adornedStart</code> state value.</li>\n<li><code>value.color</code> (<em>string</em>): The theme color is being used, inherited from <code>FormControl</code> <code>color</code> prop .</li>\n<li><code>value.disabled</code> (<em>bool</em>): Indicate whether the component is being displayed in a disabled state, inherited from <code>FormControl</code> <code>disabled</code> prop.</li>\n<li><code>value.error</code> (<em>bool</em>): Indicate whether the component is being displayed in an error state, inherited from <code>FormControl</code> <code>error</code> prop</li>\n<li><code>value.filled</code> (<em>bool</em>): Indicate whether input is filled</li>\n<li><code>value.focused</code> (<em>bool</em>): Indicate whether the component and its children are being displayed in a focused state</li>\n<li><code>value.fullWidth</code> (<em>bool</em>): Indicate whether the component is taking up the full width of its container, inherited from <code>FormControl</code> <code>fullWidth</code> prop</li>\n<li><code>value.hiddenLabel</code> (<em>bool</em>): Indicate whether the label is being hidden, inherited from <code>FormControl</code> <code>hiddenLabel</code> prop</li>\n<li><code>value.required</code> (<em>bool</em>): Indicate whether the label is indicating that the input is required input, inherited from the <code>FormControl</code> <code>required</code> prop</li>\n<li><code>value.size</code> (<em>string</em>): The size of the component, inherited from the <code>FormControl</code> <code>size</code> prop</li>\n<li><code>value.variant</code> (<em>string</em>): The variant is being used by the <code>FormControl</code> component and its children, inherited from <code>FormControl</code> <code>variant</code> prop</li>\n<li><code>value.onBlur</code> (<em>func</em>): Should be called when the input is blurred</li>\n<li><code>value.onFocus</code> (<em>func</em>): Should be called when the input is focused</li>\n<li><code>value.onEmpty</code> (<em>func</em>): Should be called when the input is emptied</li>\n<li><code>value.onFilled</code> (<em>func</em>): Should be called when the input is filled</li>\n</ul>\n<p><strong>Example</strong></p>\n',{demo:"pages/components/text-fields/UseFormControl.js"},'<h2 id="heading-limitations"><span class="anchor-link" id="limitations"></span>Limitations<a aria-labelledby="heading-limitations" class="anchor-link-style" href="#limitations" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="heading-shrink"><span class="anchor-link" id="shrink"></span>Shrink<a aria-labelledby="heading-shrink" class="anchor-link-style" href="#shrink" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The input label &quot;shrink&quot; state isn&#39;t always correct.\nThe input label is supposed to shrink as soon as the input is displaying something.\nIn some circumstances, we can&#39;t determine the &quot;shrink&quot; state (number input, datetime input, Stripe input). You might notice an overlap.</p>\n<p><img src="/static/images/text-fields/shrink.png" alt="shrink"></p>\n<p>To workaround the issue, you can force the &quot;shrink&quot; state of the label.</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TextField</span></span> <span class="token attr-name">InputLabelProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> shrink<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre>\n<p>or</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputLabel</span></span> <span class="token attr-name">shrink</span><span class="token punctuation">></span></span>Count<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">InputLabel</span></span><span class="token punctuation">></span></span>\n</code></pre>\n<h3 id="heading-floating-label"><span class="anchor-link" id="floating-label"></span>Floating label<a aria-labelledby="heading-floating-label" class="anchor-link-style" href="#floating-label" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The floating label is absolutely positioned.\nIt won&#39;t impact the layout of the page.\nMake sure that the input is larger than the label to display correctly.</p>\n<h3 id="heading-type-quot-number-quot"><span class="anchor-link" id="type-quot-number-quot"></span>type=&quot;number&quot;<a aria-labelledby="heading-type-quot-number-quot" class="anchor-link-style" href="#type-quot-number-quot" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Inputs of type=&quot;number&quot; have potential usability issues:</p>\n<ul>\n<li>Allowing certain non-numeric characters (&#39;e&#39;, &#39;+&#39;, &#39;-&#39;, &#39;.&#39;) and silently discarding others</li>\n<li>The functionality of scrolling to increment/decrement the number can cause accidental and hard-to-notice changes</li>\n</ul>\n<p>and more - see <a href="https://technology.blog.gov.uk/2020/02/24/why-the-gov-uk-design-system-team-changed-the-input-type-for-numbers/">this article</a> by the GOV.UK Design System team for a more detailed explanation.</p>\n<p>For number validation, one viable alternative is to use the default input type=&quot;text&quot; with the <em>pattern</em> attribute, for example:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TextField</span></span> <span class="token attr-name">inputProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> inputMode<span class="token operator">:</span> <span class="token string">\'numeric\'</span><span class="token punctuation">,</span> pattern<span class="token operator">:</span> <span class="token string">\'[0-9]*\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre>\n<p>In the future, we might provide a <a href="https://github.com/mui-org/material-ui/issues/19154">number input component</a>.</p>\n<h3 id="heading-helper-text"><span class="anchor-link" id="helper-text"></span>Helper text<a aria-labelledby="heading-helper-text" class="anchor-link-style" href="#helper-text" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The helper text prop affects the height of the text field. If two text fields are placed side by side, one with a helper text and one without, they will have different heights. For example:</p>\n',{demo:"pages/components/text-fields/HelperTextMisaligned.js"},"<p>This can be fixed by passing a space character to the <code>helperText</code> prop:</p>\n",{demo:"pages/components/text-fields/HelperTextAligned.js"},'<h2 id="heading-integration-with-3rd-party-input-libraries"><span class="anchor-link" id="integration-with-3rd-party-input-libraries"></span>Integration with 3rd party input libraries<a aria-labelledby="heading-integration-with-3rd-party-input-libraries" class="anchor-link-style" href="#integration-with-3rd-party-input-libraries" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can use third-party libraries to format an input.\nYou have to provide a custom implementation of the <code>&lt;input&gt;</code> element with the <code>inputComponent</code> property.</p>\n<p>The following demo uses the <a href="https://github.com/uNmAnNeR/imaskjs">react-imask</a> and <a href="https://github.com/s-yadav/react-number-format">react-number-format</a> libraries. The same concept could be applied to <a href="https://github.com/mui-org/material-ui/issues/16037">e.g. react-stripe-element</a>.</p>\n',{demo:"pages/components/text-fields/FormattedInputs.js"},'<p>The provided input component should expose a ref with a value that implements the following interface:</p>\n<pre><code class="language-ts"><span class="token keyword">interface</span> <span class="token class-name">InputElement</span> <span class="token punctuation">{</span>\n  <span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  value<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<pre><code class="language-jsx"><span class="token keyword">const</span> MyInputComponent <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">forwardRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> ref</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> component<span class="token operator">:</span> Component<span class="token punctuation">,</span> <span class="token operator">...</span>other <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n\n  <span class="token comment">// implement `InputElement` interface</span>\n  React<span class="token punctuation">.</span><span class="token function">useImperativeHandle</span><span class="token punctuation">(</span>ref<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token function-variable function">focus</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token comment">// logic to focus the rendered component from 3rd party belongs here</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// hiding the value e.g. react-stripe-elements</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// `Component` will be your `SomeThirdPartyComponent` from below</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Component</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>other<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// usage</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TextField</span></span>\n  <span class="token attr-name">InputProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n    inputComponent<span class="token operator">:</span> MyInputComponent<span class="token punctuation">,</span>\n    inputProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n      component<span class="token operator">:</span> SomeThirdPartyComponent<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n</code></pre>\n<h2 id="heading-accessibility"><span class="anchor-link" id="accessibility"></span>Accessibility<a aria-labelledby="heading-accessibility" class="anchor-link-style" href="#accessibility" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>In order for the text field to be accessible, <strong>the input should be linked to the label and the helper text</strong>. The underlying DOM nodes should have this structure:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-input<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Email address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-input<span class="token punctuation">"</span></span> <span class="token attr-name">aria-describedby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-helper-text<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-helper-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>We\'ll never share your email<span class="token punctuation">.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre>\n<ul>\n<li>If you are using the <code>TextField</code> component, you just have to provide a unique <code>id</code> unless you&#39;re using the <code>TextField</code> only client side.\nUntil the UI is hydrated <code>TextField</code> without an explicit <code>id</code> will not have associated labels.</li>\n<li>If you are composing the component:</li>\n</ul>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormControl</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputLabel</span></span> <span class="token attr-name">htmlFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-input<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Email address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">InputLabel</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-input<span class="token punctuation">"</span></span> <span class="token attr-name">aria-describedby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-helper-text<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormHelperText</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-helper-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>We\'ll never share your email<span class="token punctuation">.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FormHelperText</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FormControl</span></span><span class="token punctuation">></span></span>\n</code></pre>\n<h2 id="heading-complementary-projects"><span class="anchor-link" id="complementary-projects"></span>Complementary projects<a aria-labelledby="heading-complementary-projects" class="anchor-link-style" href="#complementary-projects" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>For more advanced use cases, you might be able to take advantage of:</p>\n<ul>\n<li><a href="https://react-hook-form.com/">react-hook-form</a>: React hook for form validation.</li>\n<li><a href="https://github.com/stackworx/formik-mui">formik-material-ui</a>: Bindings for using MUI with <a href="https://formik.org/">formik</a>.</li>\n<li><a href="https://github.com/erikras/redux-form-material-ui">redux-form-material-ui</a>: Bindings for using MUI with <a href="https://redux-form.com/">Redux Form</a>.</li>\n<li><a href="https://github.com/lookfirst/mui-rff">mui-rff</a>: Bindings for using MUI with <a href="https://final-form.org/react">React Final Form</a>.</li>\n</ul>\n<h2 id="heading-unstyled"><span class="anchor-link" id="unstyled"></span>Unstyled<a aria-labelledby="heading-unstyled" class="anchor-link-style" href="#unstyled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>For advanced customization scenarios, you can use the unstyled primitives.</p>\n<p>The basic building blocks are the <code>InputUnstyled</code> component and the <code>useInput</code> hook.</p>\n<h3 id="heading-unstyled-component"><span class="anchor-link" id="unstyled-component"></span>Unstyled component<a aria-labelledby="heading-unstyled-component" class="anchor-link-style" href="#unstyled-component" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>InputUnstyled</code> component wraps the native <code>input</code> or <code>textarea</code> element.\nYou can, optionally, provide a custom component to be rendered instead.</p>\n',{demo:"pages/components/text-fields/UnstyledInput.js"},'<h3 id="heading-hook"><span class="anchor-link" id="hook"></span>Hook<a aria-labelledby="heading-hook" class="anchor-link-style" href="#hook" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>useInput</code> hook is the headless version of the <code>InputUnstyled</code> component.\nUse it for even greater control over the rendered output.</p>\n',{demo:"pages/components/text-fields/UseInput.js"},'<h2 id="heading-api"><span class="anchor-link" id="api"></span>API<a aria-labelledby="heading-api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/api/filled-input/"><code>&lt;FilledInput /&gt;</code></a></li>\n<li><a href="/api/form-control/"><code>&lt;FormControl /&gt;</code></a></li>\n<li><a href="/api/form-control-unstyled/"><code>&lt;FormControlUnstyled /&gt;</code></a></li>\n<li><a href="/api/form-helper-text/"><code>&lt;FormHelperText /&gt;</code></a></li>\n<li><a href="/api/input/"><code>&lt;Input /&gt;</code></a></li>\n<li><a href="/api/input-adornment/"><code>&lt;InputAdornment /&gt;</code></a></li>\n<li><a href="/api/input-base/"><code>&lt;InputBase /&gt;</code></a></li>\n<li><a href="/api/input-label/"><code>&lt;InputLabel /&gt;</code></a></li>\n<li><a href="/api/input-unstyled/"><code>&lt;InputUnstyled /&gt;</code></a></li>\n<li><a href="/api/outlined-input/"><code>&lt;OutlinedInput /&gt;</code></a></li>\n<li><a href="/api/text-field/"><code>&lt;TextField /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"Basic TextField",level:2,hash:"basic-textfield",children:[]},{text:"Form props",level:2,hash:"form-props",children:[]},{text:"Validation",level:2,hash:"validation",children:[]},{text:"Multiline",level:2,hash:"multiline",children:[]},{text:"Select",level:2,hash:"select",children:[]},{text:"Icons",level:2,hash:"icons",children:[{text:"Input Adornments",level:3,hash:"input-adornments"}]},{text:"Sizes",level:2,hash:"sizes",children:[]},{text:"Margin",level:2,hash:"margin",children:[]},{text:"Full width",level:2,hash:"full-width",children:[]},{text:"Uncontrolled vs. Controlled",level:2,hash:"uncontrolled-vs-controlled",children:[]},{text:"Components",level:2,hash:"components",children:[]},{text:"Inputs",level:2,hash:"inputs",children:[]},{text:"Color",level:2,hash:"color",children:[]},{text:"Customization",level:2,hash:"customization",children:[]},{text:"useFormControl",level:2,hash:"useformcontrol",children:[]},{text:"Limitations",level:2,hash:"limitations",children:[{text:"Shrink",level:3,hash:"shrink"},{text:"Floating label",level:3,hash:"floating-label"},{text:"type=&quot;number&quot;",level:3,hash:"type-quot-number-quot"},{text:"Helper text",level:3,hash:"helper-text"}]},{text:"Integration with 3rd party input libraries",level:2,hash:"integration-with-3rd-party-input-libraries",children:[]},{text:"Accessibility",level:2,hash:"accessibility",children:[]},{text:"Complementary projects",level:2,hash:"complementary-projects",children:[]},{text:"Unstyled",level:2,hash:"unstyled",children:[{text:"Unstyled component",level:3,hash:"unstyled-component"},{text:"Hook",level:3,hash:"hook"}]},{text:"API",level:2,hash:"api",children:[]}],title:"Text Field React component",headers:{title:"Text Field React component",components:["FilledInput","FormControl","FormControlUnstyled","FormHelperText","Input","InputAdornment","InputBase","InputLabel","InputUnstyled","OutlinedInput","TextField"],githubLabel:"component: TextField",materialDesign:"https://material.io/components/text-fields"}},pt:{description:"Campos de texto permitem que os usu\xe1rios digitem e editem texto.",location:"/docs/src/pages/components/text-fields/text-fields-pt.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Campo de texto</h1><p class="description">Campos de texto permitem que os usu\xe1rios digitem e editem texto.</p>\n\n<p><a href="https://material.io/design/components/text-fields.html" target="_blank" rel="noopener nofollow">Campos de texto</a> permitem que os usu\xe1rios insiram texto em uma interface de usu\xe1rio. Eles geralmente aparecem em formul\xe1rios e di\xe1logos.</p>\n',{component:"modules/components/ComponentLinkHeader.js"},'<h2 id="heading-basic-textfield"><span class="anchor-link" id="basic-textfield"></span>Basic TextField<a aria-labelledby="heading-basic-textfield" class="anchor-link-style" href="#basic-textfield" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>TextField</code> wrapper component is a complete form control including a label, input, and help text. It comes with three variants: outlined (default), filled, and standard.</p>\n',{demo:"pages/components/text-fields/BasicTextFields.js"},'<p><strong>Note:</strong> The standard variant of the <code>TextField</code> is no longer documented in the <a href="https://material.io/" target="_blank" rel="noopener nofollow">Material Design guidelines</a> (<a href="https://medium.com/google-design/the-evolution-of-material-designs-text-fields-603688b3fe03">here&#39;s why</a>), but MUI will continue to support it.</p>\n<h2 id="heading-form-props"><span class="anchor-link" id="form-props"></span>Propriedades de formul\xe1rio<a aria-labelledby="heading-form-props" class="anchor-link-style" href="#form-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Standard form attributes are supported e.g. <code>required</code>, <code>disabled</code>, <code>type</code>, etc. as well as a <code>helperText</code> which is used to give context about a field&#39;s input, such as how the input will be used.</p>\n',{demo:"pages/components/text-fields/FormPropsTextFields.js"},'<h2 id="heading-validation"><span class="anchor-link" id="validation"></span>Valida\xe7\xe3o<a aria-labelledby="heading-validation" class="anchor-link-style" href="#validation" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>error</code> prop toggles the error state. The <code>helperText</code> prop can then be used to provide feedback to the user about the error.</p>\n',{demo:"pages/components/text-fields/ValidationTextFields.js"},'<h2 id="heading-multiline"><span class="anchor-link" id="multiline"></span>Multilinha<a aria-labelledby="heading-multiline" class="anchor-link-style" href="#multiline" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>A propriedade <code>multiline</code> transforma o <code>textfield</code> em um <code>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea&quot;&gt;TextArea&lt;/a&gt;. Unless the</code>rows<code>prop is set, the height of the text field dynamically matches its content (using [TextareaAutosize](/components/textarea-autosize/)). You can use the &lt;code&gt;minRows</code> and <code>maxRows</code> props to bound it.</p>\n',{demo:"pages/components/text-fields/MultilineTextFields.js"},'<h2 id="heading-select"><span class="anchor-link" id="select"></span>Select<a aria-labelledby="heading-select" class="anchor-link-style" href="#select" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>A propriedade <code>select</code> faz com que o campo de texto use internamente um componente <a href="/pt/components/selects/">Select</a>.</p>\n',{demo:"pages/components/text-fields/SelectTextFields.js"},'<h2 id="heading-icons"><span class="anchor-link" id="icons"></span>Icons<a aria-labelledby="heading-icons" class="anchor-link-style" href="#icons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>H\xe1 muitas formas de incluir um \xedcone com um campo de texto.</p>\n',{demo:"pages/components/text-fields/InputWithIcon.js"},'<h3 id="heading-input-adornments"><span class="anchor-link" id="input-adornments"></span>Adere\xe7os de campo<a aria-labelledby="heading-input-adornments" class="anchor-link-style" href="#input-adornments" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>A forma principal \xe9 utilizando um componente <code>InputAdornment</code>. This can be used to add a prefix, a suffix, or an action to an input. Por exemplo, voc\xea pode usar um bot\xe3o com \xedcone para ocultar ou revelar a senha.</p>\n',{demo:"pages/components/text-fields/InputAdornments.js"},'<h2 id="heading-sizes"><span class="anchor-link" id="sizes"></span>Sizes<a aria-labelledby="heading-sizes" class="anchor-link-style" href="#sizes" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Gosta mais de campos de texto menores? Use a propriedade <code>size</code>.</p>\n',{demo:"pages/components/text-fields/TextFieldSizes.js"},"<p>A altura do campo na variante <code>filled</code> pode ser reduzida ainda mais ao renderizar o r\xf3tulo fora dele.</p>\n",{demo:"pages/components/text-fields/TextFieldHiddenLabel.js"},'<h2 id="heading-margin"><span class="anchor-link" id="margin"></span>Margin<a aria-labelledby="heading-margin" class="anchor-link-style" href="#margin" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>margin</code> prop can be used to alter the vertical spacing of the text field. Using <code>none</code> (default) doesn&#39;t apply margins to the <code>FormControl</code> whereas <code>dense</code> and <code>normal</code> do.</p>\n',{demo:"pages/components/text-fields/LayoutTextFields.js"},'<h2 id="heading-full-width"><span class="anchor-link" id="full-width"></span>Full width<a aria-labelledby="heading-full-width" class="anchor-link-style" href="#full-width" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>A propriedade <code>fullWidth</code> pode ser usada para fazer com que o campo ocupe a largura total de seu cont\xeainer.</p>\n',{demo:"pages/components/text-fields/FullWidthTextField.js"},'<h2 id="heading-uncontrolled-vs-controlled"><span class="anchor-link" id="uncontrolled-vs-controlled"></span>Uncontrolled vs. Controlled<a aria-labelledby="heading-uncontrolled-vs-controlled" class="anchor-link-style" href="#uncontrolled-vs-controlled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>O componente pode ser controlado ou n\xe3o controlado.</p>\n',{demo:"pages/components/text-fields/StateTextFields.js"},'<h2 id="heading-components"><span class="anchor-link" id="components"></span>Components<a aria-labelledby="heading-components" class="anchor-link-style" href="#components" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>O componente <code>TextField</code> \xe9 composto por componentes menores (<a href="/pt/api/form-control/"><code>FormControl</code></a>, <a href="/pt/api/input/"><code>Input</code></a>, <a href="/pt/api/filled-input/"><code>FilledInput</code></a>, <a href="/pt/api/input-label/"><code>InputLabel</code></a>, <a href="/pt/api/outlined-input/"><code>OutlinedInput</code></a>, e <a href="/pt/api/form-helper-text/"><code>FormHelperText</code></a>) que voc\xea pode aproveitar diretamente para customizar significativamente os campos do seu formul\xe1rio.</p>\n<p>Voc\xea tamb\xe9m pode ter notado que algumas propriedades de campo nativas do HTML input est\xe3o faltando no componente <code>TextField</code>. Isto \xe9 intencional. The component takes care of the most used properties. Then, it&#39;s up to the user to use the underlying component shown in the following demo. Ainda, voc\xea pode usar <code>inputProps</code> (<code>InputProps</code> e <code>InputLabelProps</code>) se voc\xea quiser evitar algum boilerplate.</p>\n',{demo:"pages/components/text-fields/ComposedTextField.js"},'<h2 id="heading-inputs"><span class="anchor-link" id="inputs"></span>Inputs<a aria-labelledby="heading-inputs" class="anchor-link-style" href="#inputs" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2>',{demo:"pages/components/text-fields/Inputs.js"},'<h2 id="heading-color"><span class="anchor-link" id="color"></span>Color<a aria-labelledby="heading-color" class="anchor-link-style" href="#color" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>A propriedade <code>color</code> altera a cor do destaque do campo de texto quando focado.</p>\n',{demo:"pages/components/text-fields/ColorTextFields.js"},'<h2 id="heading-customization"><span class="anchor-link" id="customization"></span>Customization<a aria-labelledby="heading-customization" class="anchor-link-style" href="#customization" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Here are some examples of customizing the component. You can learn more about this in the <a href="/pt/customization/how-to-customize/">overrides documentation page</a>.</p>\n',{demo:"pages/components/text-fields/CustomizedInputs.js"},'<p>Customization does not stop at CSS. You can use composition to build custom components and give your app a unique feel. Abaixo h\xe1 um exemplo usando o componente <a href="/pt/api/input-base/"><code>InputBase</code></a>, inspirado pelo Google Maps.</p>\n',{demo:"pages/components/text-fields/CustomizedInputBase.js",bg:!0},'<p>\ud83c\udfa8 If you are looking for inspiration, you can check <a href="https://mui-treasury.com/styles/text-field/">MUI Treasury&#39;s customization examples</a>.</p>\n<h2 id="heading-useformcontrol"><span class="anchor-link" id="useformcontrol"></span><code>useFormControl</code><a aria-labelledby="heading-useformcontrol" class="anchor-link-style" href="#useformcontrol" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>For advanced customization use cases, a <code>useFormControl()</code> hook is exposed. This hook returns the context value of the parent <code>FormControl</code> component.</p>\n<p><strong>API</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> useFormControl <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/FormControl\'</span><span class="token punctuation">;</span>\n</code></pre>\n<p><strong>Returns</strong></p>\n<p><code>value</code> (<em>object</em>):</p>\n<ul>\n<li><code>value.adornedStart</code> (<em>bool</em>): Indicate whether the child <code>Input</code> or <code>Select</code> component has a start adornment.</li>\n<li><code>value.setAdornedStart</code> (<em>func</em>): Setter function for <code>adornedStart</code> state value.</li>\n<li><code>value.color</code> (<em>string</em>): The theme color is being used, inherited from <code>FormControl</code> <code>color</code> prop .</li>\n<li><code>value.disabled</code> (<em>bool</em>): Indicate whether the component is being displayed in a disabled state, inherited from <code>FormControl</code> <code>disabled</code> prop.</li>\n<li><code>value.error</code> (<em>bool</em>): Indicate whether the component is being displayed in an error state, inherited from <code>FormControl</code> <code>error</code> prop</li>\n<li><code>value.filled</code> (<em>bool</em>): Indicate whether input is filled</li>\n<li><code>value.focused</code> (<em>bool</em>): Indicate whether the component and its children are being displayed in a focused state</li>\n<li><code>value.fullWidth</code> (<em>bool</em>): Indicate whether the component is taking up the full width of its container, inherited from <code>FormControl</code> <code>fullWidth</code> prop</li>\n<li><code>value.hiddenLabel</code> (<em>bool</em>): Indicate whether the label is being hidden, inherited from <code>FormControl</code> <code>hiddenLabel</code> prop</li>\n<li><code>value.required</code> (<em>bool</em>): Indicate whether the label is indicating that the input is required input, inherited from the <code>FormControl</code> <code>required</code> prop</li>\n<li><code>value.size</code> (<em>string</em>): The size of the component, inherited from the <code>FormControl</code> <code>size</code> prop</li>\n<li><code>value.variant</code> (<em>string</em>): The variant is being used by the <code>FormControl</code> component and its children, inherited from <code>FormControl</code> <code>variant</code> prop</li>\n<li><code>value.onBlur</code> (<em>func</em>): Should be called when the input is blurred</li>\n<li><code>value.onFocus</code> (<em>func</em>): Should be called when the input is focused</li>\n<li><code>value.onEmpty</code> (<em>func</em>): Should be called when the input is emptied</li>\n<li><code>value.onFilled</code> (<em>func</em>): Should be called when the input is filled</li>\n</ul>\n<p><strong>Example</strong></p>\n',{demo:"pages/components/text-fields/UseFormControl.js"},'<h2 id="heading-limitations"><span class="anchor-link" id="limitations"></span>Limitations<a aria-labelledby="heading-limitations" class="anchor-link-style" href="#limitations" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="heading-shrink"><span class="anchor-link" id="shrink"></span>Shrink<a aria-labelledby="heading-shrink" class="anchor-link-style" href="#shrink" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>O r\xf3tulo do campo no estado de &quot;shrink&quot;(recuo) nem sempre est\xe1 correto. O r\xf3tulo do campo deve recuar assim que o campo estiver exibindo algo. Em algumas circunst\xe2ncias, n\xe3o podemos determinar o estado de &quot;shrink&quot; (input num\xe9rico, input datetime, input Stripe). Voc\xea pode notar uma sobreposi\xe7\xe3o.</p>\n<p><img src="/static/images/text-fields/shrink.png" alt="shrink"></p>\n<p>Para contornar o problema, voc\xea pode for\xe7ar o &quot;shrink&quot; do r\xf3tulo.</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TextField</span></span> <span class="token attr-name">InputLabelProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> shrink<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre>\n<p>or</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputLabel</span></span> <span class="token attr-name">shrink</span><span class="token punctuation">></span></span>Contagem<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">InputLabel</span></span><span class="token punctuation">></span></span>\n</code></pre>\n<h3 id="heading-floating-label"><span class="anchor-link" id="floating-label"></span>R\xf3tulo flutuante<a aria-labelledby="heading-floating-label" class="anchor-link-style" href="#floating-label" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The floating label is absolutely positioned. It won&#39;t impact the layout of the page. Make sure that the input is larger than the label to display correctly.</p>\n<h3 id="heading-type-quot-number-quot"><span class="anchor-link" id="type-quot-number-quot"></span>type=&quot;number&quot;<a aria-labelledby="heading-type-quot-number-quot" class="anchor-link-style" href="#type-quot-number-quot" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Campos com type=&quot;number&quot; tem problemas potenciais de usabilidade:</p>\n<ul>\n<li>Permitindo certos caracteres n\xe3o num\xe9ricos (&#39;e&#39;, &#39;+&#39;, &#39;-&#39;, &#39;.&#39;) e silenciosamente descartando outros e silenciosamente descartando outros e silenciosamente descartando outros</li>\n<li>A funcionalidade de rolagem para incrementar/decrementar o n\xfamero, pode causar altera\xe7\xf5es acidentais dif\xedceis de notar</li>\n</ul>\n<p>e muito mais - consulte <a href="https://technology.blog.gov.uk/2020/02/24/why-the-gov-uk-design-system-team-changed-the-input-type-for-numbers/">este artigo</a> da equipe GOV.UK Design System para obter uma explica\xe7\xe3o mais detalhada.</p>\n<p>Para valida\xe7\xe3o de n\xfamero, uma alternativa vi\xe1vel \xe9 usar o pad\xe3o de campo, type=&quot;text&quot;, com o atributo <em>pattern</em>, por exemplo:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TextField</span></span> <span class="token attr-name">inputProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> inputMode<span class="token operator">:</span> <span class="token string">\'numeric\'</span><span class="token punctuation">,</span> pattern<span class="token operator">:</span> <span class="token string">\'[0-9]*\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre>\n<p>No futuro, pretendemos fornecer um <a href="https://github.com/mui-org/material-ui/issues/19154">componente de campo n\xfamero</a>.</p>\n<h3 id="heading-helper-text"><span class="anchor-link" id="helper-text"></span>Texto auxiliar<a aria-labelledby="heading-helper-text" class="anchor-link-style" href="#helper-text" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>A propriedade de texto auxiliar afeta a altura do campo de texto. Se dois campos de texto forem colocados lado a lado, um com um texto auxiliar e outro sem ele, ter\xe3o alturas diferentes. Por exemplo:</p>\n',{demo:"pages/components/text-fields/HelperTextMisaligned.js"},"<p>Isso pode ser corrigido passando um caractere de espa\xe7o para a propriedade <code>helperText</code>:</p>\n",{demo:"pages/components/text-fields/HelperTextAligned.js"},'<h2 id="heading-integration-with-3rd-party-input-libraries"><span class="anchor-link" id="integration-with-3rd-party-input-libraries"></span>Integra\xe7\xe3o com bibliotecas de campo de terceiros<a aria-labelledby="heading-integration-with-3rd-party-input-libraries" class="anchor-link-style" href="#integration-with-3rd-party-input-libraries" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Voc\xea pode usar bibliotecas de terceiros para formatar um campo. Voc\xea precisa fornecer uma implementa\xe7\xe3o personalizada do elemento <code>&lt;input&gt;</code> com a propriedade <code>inputComponent</code>.</p>\n<p>The following demo uses the <a href="https://github.com/uNmAnNeR/imaskjs">react-imask</a> and <a href="https://github.com/s-yadav/react-number-format">react-number-format</a> libraries. O mesmo conceito pode ser aplicado para, <a href="https://github.com/mui-org/material-ui/issues/16037">p. ex. react-stripe-element</a>.</p>\n',{demo:"pages/components/text-fields/FormattedInputs.js"},'<p>O componente de entrada fornecido deve expor um ref com um valor que implemente a seguinte interface:</p>\n<pre><code class="language-ts"><span class="token keyword">interface</span> <span class="token class-name">InputElement</span> <span class="token punctuation">{</span>\n  <span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  value<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<pre><code class="language-jsx"><span class="token keyword">const</span> MyInputComponent <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">forwardRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> ref</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> component<span class="token operator">:</span> Component<span class="token punctuation">,</span> <span class="token operator">...</span>other <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n\n  <span class="token comment">// implemente a interface`InputElement`</span>\n  React<span class="token punctuation">.</span><span class="token function">useImperativeHandle</span><span class="token punctuation">(</span>ref<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token function-variable function">focus</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token comment">// l\xf3gica para focar o componente de terceiro renderizado deve ser feita aqui</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// ocultando o valor, por exemplo, react-stripe-elements</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// O `Component` abaixo ser\xe1 seu `AlgumComponenteDeTerceiro`</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Component</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>other<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// uso</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TextField</span></span>\n  <span class="token attr-name">InputProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n    inputComponent<span class="token operator">:</span> MyInputComponent<span class="token punctuation">,</span>\n    inputProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n      component<span class="token operator">:</span> SomeThirdPartyComponent<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n</code></pre>\n<h2 id="heading-accessibility"><span class="anchor-link" id="accessibility"></span>Accessibility<a aria-labelledby="heading-accessibility" class="anchor-link-style" href="#accessibility" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Para que o campo de texto seja acess\xedvel, <strong>a entrada deve estar vinculada ao r\xf3tulo e ao texto auxiliar</strong>. Os n\xf3s DOM subjacentes devem ter essa estrutura:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-input<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Endere\xe7o de e<span class="token operator">-</span>mail<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-input<span class="token punctuation">"</span></span> <span class="token attr-name">aria-describedby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-helper-text<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-helper-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token constant">N</span>\xf3s nunca compartilharemos seu e<span class="token operator">-</span>mail<span class="token punctuation">.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre>\n<ul>\n<li>If you are using the <code>TextField</code> component, you just have to provide a unique <code>id</code> unless you&#39;re using the <code>TextField</code> only client side. Until the UI is hydrated <code>TextField</code> without an explicit <code>id</code> will not have associated labels.</li>\n<li>If you are composing the component:</li>\n</ul>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">mark</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>crwd-mark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-input<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Endere\xe7o de e<span class="token operator">-</span>mail<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-input<span class="token punctuation">"</span></span> <span class="token attr-name">aria-describedby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-helper-text<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-helper-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token constant">N</span>\xf3s nunca compartilharemos seu e<span class="token operator">-</span>mail<span class="token punctuation">.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre>\n<h2 id="heading-complementary-projects"><span class="anchor-link" id="complementary-projects"></span>Complementary projects<a aria-labelledby="heading-complementary-projects" class="anchor-link-style" href="#complementary-projects" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>For more advanced use cases, you might be able to take advantage of:</p>\n<ul>\n<li><a href="https://react-hook-form.com/">react-hook-form</a>: React hook for form validation.</li>\n<li><a href="https://github.com/stackworx/formik-mui">formik-material-ui</a>: Bindings for using MUI with <a href="https://formik.org/">formik</a>.</li>\n<li><a href="https://github.com/erikras/redux-form-material-ui">redux-form-material-ui</a>: Bindings for using MUI with <a href="https://redux-form.com/">Redux Form</a>.</li>\n<li><a href="https://github.com/lookfirst/mui-rff">mui-rff</a>: Bindings for using MUI with <a href="https://final-form.org/react">React Final Form</a>.</li>\n</ul>\n<h2 id="heading-unstyled"><span class="anchor-link" id="unstyled"></span>Unstyled<a aria-labelledby="heading-unstyled" class="anchor-link-style" href="#unstyled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>For advanced customization scenarios, you can use the unstyled primitives.</p>\n<p>The basic building blocks are the <code>InputUnstyled</code> component and the <code>useInput</code> hook.</p>\n<h3 id="heading-unstyled-component"><span class="anchor-link" id="unstyled-component"></span>Unstyled component<a aria-labelledby="heading-unstyled-component" class="anchor-link-style" href="#unstyled-component" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>InputUnstyled</code> component wraps the native <code>input</code> or <code>textarea</code> element. You can, optionally, provide a custom component to be rendered instead.</p>\n',{demo:"pages/components/text-fields/UnstyledInput.js"},'<h3 id="heading-hook"><span class="anchor-link" id="hook"></span>Hook<a aria-labelledby="heading-hook" class="anchor-link-style" href="#hook" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>useInput</code> hook is the headless version of the <code>InputUnstyled</code> component. Use it for even greater control over the rendered output.</p>\n',{demo:"pages/components/text-fields/UseInput.js"},'<h2 id="heading-api"><span class="anchor-link" id="api"></span>API<a aria-labelledby="heading-api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/pt/api/filled-input/"><code>&lt;FilledInput /&gt;</code></a></li>\n<li><a href="/pt/api/form-control/"><code>&lt;FormControl /&gt;</code></a></li>\n<li><a href="/pt/api/form-control-unstyled/"><code>&lt;FormControlUnstyled /&gt;</code></a></li>\n<li><a href="/pt/api/form-helper-text/"><code>&lt;FormHelperText /&gt;</code></a></li>\n<li><a href="/pt/api/input/"><code>&lt;Input /&gt;</code></a></li>\n<li><a href="/pt/api/input-adornment/"><code>&lt;InputAdornment /&gt;</code></a></li>\n<li><a href="/pt/api/input-base/"><code>&lt;InputBase /&gt;</code></a></li>\n<li><a href="/pt/api/input-label/"><code>&lt;InputLabel /&gt;</code></a></li>\n<li><a href="/pt/api/input-unstyled/"><code>&lt;InputUnstyled /&gt;</code></a></li>\n<li><a href="/pt/api/outlined-input/"><code>&lt;OutlinedInput /&gt;</code></a></li>\n<li><a href="/pt/api/text-field/"><code>&lt;TextField /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"Basic TextField",level:2,hash:"basic-textfield",children:[]},{text:"Propriedades de formul\xe1rio",level:2,hash:"form-props",children:[]},{text:"Valida\xe7\xe3o",level:2,hash:"validation",children:[]},{text:"Multilinha",level:2,hash:"multiline",children:[]},{text:"Select",level:2,hash:"select",children:[]},{text:"Icons",level:2,hash:"icons",children:[{text:"Adere\xe7os de campo",level:3,hash:"input-adornments"}]},{text:"Sizes",level:2,hash:"sizes",children:[]},{text:"Margin",level:2,hash:"margin",children:[]},{text:"Full width",level:2,hash:"full-width",children:[]},{text:"Uncontrolled vs. Controlled",level:2,hash:"uncontrolled-vs-controlled",children:[]},{text:"Components",level:2,hash:"components",children:[]},{text:"Inputs",level:2,hash:"inputs",children:[]},{text:"Color",level:2,hash:"color",children:[]},{text:"Customization",level:2,hash:"customization",children:[]},{text:"useFormControl",level:2,hash:"useformcontrol",children:[]},{text:"Limitations",level:2,hash:"limitations",children:[{text:"Shrink",level:3,hash:"shrink"},{text:"R\xf3tulo flutuante",level:3,hash:"floating-label"},{text:"type=&quot;number&quot;",level:3,hash:"type-quot-number-quot"},{text:"Texto auxiliar",level:3,hash:"helper-text"}]},{text:"Integra\xe7\xe3o com bibliotecas de campo de terceiros",level:2,hash:"integration-with-3rd-party-input-libraries",children:[]},{text:"Accessibility",level:2,hash:"accessibility",children:[]},{text:"Complementary projects",level:2,hash:"complementary-projects",children:[]},{text:"Unstyled",level:2,hash:"unstyled",children:[{text:"Unstyled component",level:3,hash:"unstyled-component"},{text:"Hook",level:3,hash:"hook"}]},{text:"API",level:2,hash:"api",children:[]}],title:"Componente React para Campo de Texto",headers:{title:"Componente React para Campo de Texto",components:["FilledInput","FormControl","FormControlUnstyled","FormHelperText","Input","InputAdornment","InputBase","InputLabel","InputUnstyled","OutlinedInput","TextField"],githubLabel:"component: TextField",materialDesign:"https://material.io/components/text-fields"}},zh:{description:"\u7528\u6237\u53ef\u4ee5\u5728\u6587\u672c\u6846\u5185\u8f93\u5165\u6216\u7f16\u8f91\u6587\u5b57\u3002",location:"/docs/src/pages/components/text-fields/text-fields-zh.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>TextField \u6587\u672c\u6846</h1><p class="description">\u7528\u6237\u53ef\u4ee5\u5728\u6587\u672c\u6846\u5185\u8f93\u5165\u6216\u7f16\u8f91\u6587\u5b57\u3002</p>\n\n<p>\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6587\u672c\u6846\u5728\u754c\u9762\u4e2d\u8f93\u5165\u6587\u672c\u3002 \u901a\u5e38\uff0c\u6211\u4eec\u4f1a\u5728\u8868\u5355\u57df\u548c\u5bf9\u8bdd\u6846\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002</p>\n',{component:"modules/components/ComponentLinkHeader.js"},'<h2 id="heading-basic-textfield"><span class="anchor-link" id="basic-textfield"></span>Basic TextField<a aria-labelledby="heading-basic-textfield" class="anchor-link-style" href="#basic-textfield" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>TextField</code> wrapper component is a complete form control including a label, input, and help text. It comes with three variants: outlined (default), filled, and standard.</p>\n',{demo:"pages/components/text-fields/BasicTextFields.js"},'<p><strong>Note:</strong> The standard variant of the <code>TextField</code> is no longer documented in the <a href="https://material.io/" target="_blank" rel="noopener nofollow">Material Design guidelines</a> (<a href="https://medium.com/google-design/the-evolution-of-material-designs-text-fields-603688b3fe03">here&#39;s why</a>), but MUI will continue to support it.</p>\n<h2 id="heading-form-props"><span class="anchor-link" id="form-props"></span>Form props \u8868\u5355\u7684\u5c5e\u6027<a aria-labelledby="heading-form-props" class="anchor-link-style" href="#form-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u8be5\u7ec4\u4ef6\u652f\u6301\u6807\u51c6\u7684\u8868\u5355\u5c5e\u6027\uff0c\u4f8b\u5982 <code>required</code>\u3001<code>disabled</code>\u3001<code>type</code> \u4ee5\u53ca<code>helperText</code> \u7b49\uff0c\u7528\u4e8e\u63d0\u4f9b\u5b57\u6bb5\u8f93\u5165\u7684\u4e0a\u4e0b\u6587\uff0c\u4f8b\u5982\u8f93\u5165\u7684\u4f7f\u7528\u65b9\u5f0f\u3002</p>\n',{demo:"pages/components/text-fields/FormPropsTextFields.js"},'<h2 id="heading-validation"><span class="anchor-link" id="validation"></span>\u6821\u9a8c<a aria-labelledby="heading-validation" class="anchor-link-style" href="#validation" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>error</code> prop toggles the error state. The <code>helperText</code> prop can then be used to provide feedback to the user about the error.</p>\n',{demo:"pages/components/text-fields/ValidationTextFields.js"},'<h2 id="heading-multiline"><span class="anchor-link" id="multiline"></span>\u591a\u884c\u5c5e\u6027<a aria-labelledby="heading-multiline" class="anchor-link-style" href="#multiline" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><code>multiline</code> \u5c5e\u6027\u5c06\u6587\u672c\u5b57\u6bb5\u8f6c\u6362\u4e3a <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea"><code>&lt;textarea&gt;</code></a> \u5143\u7d20\u3002 \u9664\u975e\u8bbe\u7f6e\u4e86 <code>rows</code> \u5c5e\u6027\uff0c\u5426\u5219\u6587\u672c\u5b57\u6bb5\u7684\u9ad8\u5ea6\u4f1a\u52a8\u6001\u5339\u914d\u5176\u5185\u5bb9\uff08\u4f7f\u7528 <a href="/zh/components/textarea-autosize/">TextareaAutosize</a> \u65f6\uff09\u3002 You can use the <code>minRows</code> and <code>maxRows</code> props to bound it.</p>\n',{demo:"pages/components/text-fields/MultilineTextFields.js"},'<h2 id="heading-select"><span class="anchor-link" id="select"></span>Select<a aria-labelledby="heading-select" class="anchor-link-style" href="#select" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u4f7f\u7528 <code>select</code> \u5c5e\u6027\u7684\u65f6\u5019\uff0c\u60a8\u53ef\u4ee5\u5728\u6587\u672c\u6846\u5185\u63d2\u5165\u4e00\u4e2a <a href="/zh/components/selects/">Select</a> \u7ec4\u4ef6\u3002</p>\n',{demo:"pages/components/text-fields/SelectTextFields.js"},'<h2 id="heading-icons"><span class="anchor-link" id="icons"></span>Icons<a aria-labelledby="heading-icons" class="anchor-link-style" href="#icons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u6211\u4eec\u63d0\u4f9b\u4e86\u5728\u6587\u672c\u6846\u5185\u5c55\u793a\u56fe\u6807\u7684\u4e0d\u540c\u7684\u65b9\u5f0f\u3002</p>\n',{demo:"pages/components/text-fields/InputWithIcon.js"},'<h3 id="heading-input-adornments"><span class="anchor-link" id="input-adornments"></span>\u4fee\u9970\u8f93\u5165\u6846<a aria-labelledby="heading-input-adornments" class="anchor-link-style" href="#input-adornments" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u4e00\u4e2a\u4e3b\u6d41\u7684\u65b9\u6cd5\u662f\u4f7f\u7528 <code>InputAdornment</code> \u7ec4\u4ef6\u3002 This can be used to add a prefix, a suffix, or an action to an input. \u4f8b\u5982\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u56fe\u6807\u6309\u94ae\u6765\u9690\u85cf\u6216\u8005\u663e\u793a\u8f93\u5165\u6846\u91cc\u7684\u5bc6\u7801\u3002</p>\n',{demo:"pages/components/text-fields/InputAdornments.js"},'<h2 id="heading-sizes"><span class="anchor-link" id="sizes"></span>Sizes<a aria-labelledby="heading-sizes" class="anchor-link-style" href="#sizes" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u60f3\u8981\u4f7f\u7528\u5916\u89c2\u770b\u8d77\u6765\u6bd4\u8f83\u5c0f\u7684\u8f93\u5165\u6846\u5417\uff1f \u8bd5\u7740\u4f7f\u7528 <code>size</code> \u5c5e\u6027\u5427\u3002</p>\n',{demo:"pages/components/text-fields/TextFieldSizes.js"},"<p><code>filled</code> \u53d8\u4f53\u7684\u8f93\u5165\u9ad8\u5ea6\u53ef\u4ee5\u901a\u8fc7\u5728\u5916\u90e8\u6e32\u67d3\u6807\u7b7e\u6765\u964d\u4f4e\u3002</p>\n",{demo:"pages/components/text-fields/TextFieldHiddenLabel.js"},'<h2 id="heading-margin"><span class="anchor-link" id="margin"></span>Margin<a aria-labelledby="heading-margin" class="anchor-link-style" href="#margin" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>margin</code> prop can be used to alter the vertical spacing of the text field. Using <code>none</code> (default) doesn&#39;t apply margins to the <code>FormControl</code> whereas <code>dense</code> and <code>normal</code> do.</p>\n',{demo:"pages/components/text-fields/LayoutTextFields.js"},'<h2 id="heading-full-width"><span class="anchor-link" id="full-width"></span>Full width<a aria-labelledby="heading-full-width" class="anchor-link-style" href="#full-width" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u6211\u4eec\u63d0\u4f9b\u4e86<code>fullWidth</code> \u5c5e\u6027\uff0c\u4f7f\u7528\u5b83\u7684\u65f6\u5019\uff0c\u8f93\u5165\u6846\u4f1a\u5360\u636e\u6574\u4e2a\u5bb9\u5668\u7684\u5bbd\u5ea6\u3002</p>\n',{demo:"pages/components/text-fields/FullWidthTextField.js"},'<h2 id="heading-uncontrolled-vs-controlled"><span class="anchor-link" id="uncontrolled-vs-controlled"></span>Uncontrolled vs. Controlled<a aria-labelledby="heading-uncontrolled-vs-controlled" class="anchor-link-style" href="#uncontrolled-vs-controlled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u4f60\u53ef\u4ee5\u9009\u62e9\u63a7\u5236\u7684\u7ec4\u4ef6\uff0c\u6216\u8005\u4e0d\u53d7\u63a7\u7684\u7ec4\u4ef6\u3002</p>\n',{demo:"pages/components/text-fields/StateTextFields.js"},'<h2 id="heading-components"><span class="anchor-link" id="components"></span>Components<a aria-labelledby="heading-components" class="anchor-link-style" href="#components" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><code>TextField</code> \u662f\u7531\u4e00\u4e9b\u8f83\u5c0f\u7684\u7ec4\u4ef6\u7ec4\u6210\u7684 ( <a href="/zh/api/form-control/"><code>FormControl</code></a>\uff0c <a href="/zh/api/input/"><code>Input</code></a>\uff0c <a href="/zh/api/filled-input/"><code>FilledInput</code></a>\uff0c <a href="/zh/api/input-label/"><code>InputLabel</code></a>\uff0c <a href="/zh/api/outlined-input/"><code>OutlinedInput</code></a>\uff0c and <a href="/zh/api/form-helper-text/"><code>FormHelperText</code></a> ) \uff0c\u800c\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e9b\u5c0f\u7684\u7ec4\u4ef6\uff0c\u6765\u81ea\u5b9a\u5236\u4f60\u7684\u8868\u5355\u57df\u8f93\u5165\u6846\u3002</p>\n<p>\u60a8\u53ef\u80fd\u6ce8\u610f\u5230\u4e86\uff0c \u548c\u539f\u751f\u7684 HTML input \u7ec4\u4ef6\u76f8\u6bd4\uff0c<code>TextField</code> \u7ec4\u4ef6\u7f3a\u5931\u4e86\u4e00\u4e9b\u5c5e\u6027\u3002 \u8fd9\u662f\u6545\u610f\u4e3a\u4e4b\u7684\u3002 The component takes care of the most used properties. Then, it&#39;s up to the user to use the underlying component shown in the following demo. \u4f46\u662f\u540c\u65f6, \u4e3a\u4e86\u907f\u514d\u8fc7\u4e8e\u6a21\u7248\u5316\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528 <code>inputProps</code> (\u548c <code>inputProps</code>, <code>InputLabelProps</code> \u5c5e\u6027) \u6765\u63a7\u5236\u539f\u751f\u7ec4\u4ef6\u7684\u5c5e\u6027\u3002</p>\n',{demo:"pages/components/text-fields/ComposedTextField.js"},'<h2 id="heading-inputs"><span class="anchor-link" id="inputs"></span>Inputs<a aria-labelledby="heading-inputs" class="anchor-link-style" href="#inputs" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2>',{demo:"pages/components/text-fields/Inputs.js"},'<h2 id="heading-color"><span class="anchor-link" id="color"></span>Color<a aria-labelledby="heading-color" class="anchor-link-style" href="#color" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u5f53\u4f7f\u7528 <code>color</code> \u5c5e\u6027\u65f6\uff0c\u805a\u7126\u6587\u672c\u6846\u65f6\u7684\u9ad8\u4eae\u989c\u8272\u4f1a\u88ab\u6539\u53d8\u3002</p>\n',{demo:"pages/components/text-fields/ColorTextFields.js"},'<h2 id="heading-customization"><span class="anchor-link" id="customization"></span>Customization<a aria-labelledby="heading-customization" class="anchor-link-style" href="#customization" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Here are some examples of customizing the component. You can learn more about this in the <a href="/zh/customization/how-to-customize/">overrides documentation page</a>.</p>\n',{demo:"pages/components/text-fields/CustomizedInputs.js"},'<p>Customization does not stop at CSS. You can use composition to build custom components and give your app a unique feel. \u63a5\u4e0b\u6765\u7684\u8fd9\u4e2a\u793a\u4f8b\u53d7\u5230\u4e86 Google \u5730\u56fe\u7684\u542f\u53d1\uff0c\u5b83\u4f7f\u7528\u4e86 <a href="/zh/api/input-base/"><code>InputBase</code></a> \u7ec4\u4ef6\u3002</p>\n',{demo:"pages/components/text-fields/CustomizedInputBase.js",bg:!0},'<p>\ud83c\udfa8 If you are looking for inspiration, you can check <a href="https://mui-treasury.com/styles/text-field/">MUI Treasury&#39;s customization examples</a>.</p>\n<h2 id="heading-useformcontrol"><span class="anchor-link" id="useformcontrol"></span><code>useFormControl</code><a aria-labelledby="heading-useformcontrol" class="anchor-link-style" href="#useformcontrol" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>For advanced customization use cases, a <code>useFormControl()</code> hook is exposed. This hook returns the context value of the parent <code>FormControl</code> component.</p>\n<p><strong>API</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> useFormControl <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/FormControl\'</span><span class="token punctuation">;</span>\n</code></pre>\n<p><strong>Returns</strong></p>\n<p><code>value</code> (<em>object</em>):</p>\n<ul>\n<li><code>value.adornedStart</code> (<em>bool</em>): Indicate whether the child <code>Input</code> or <code>Select</code> component has a start adornment.</li>\n<li><code>value.setAdornedStart</code> (<em>func</em>): Setter function for <code>adornedStart</code> state value.</li>\n<li><code>value.color</code> (<em>string</em>): The theme color is being used, inherited from <code>FormControl</code> <code>color</code> prop .</li>\n<li><code>value.disabled</code> (<em>bool</em>): Indicate whether the component is being displayed in a disabled state, inherited from <code>FormControl</code> <code>disabled</code> prop.</li>\n<li><code>value.error</code> (<em>bool</em>): Indicate whether the component is being displayed in an error state, inherited from <code>FormControl</code> <code>error</code> prop</li>\n<li><code>value.filled</code> (<em>bool</em>): Indicate whether input is filled</li>\n<li><code>value.focused</code> (<em>bool</em>): Indicate whether the component and its children are being displayed in a focused state</li>\n<li><code>value.fullWidth</code> (<em>bool</em>): Indicate whether the component is taking up the full width of its container, inherited from <code>FormControl</code> <code>fullWidth</code> prop</li>\n<li><code>value.hiddenLabel</code> (<em>bool</em>): Indicate whether the label is being hidden, inherited from <code>FormControl</code> <code>hiddenLabel</code> prop</li>\n<li><code>value.required</code> (<em>bool</em>): Indicate whether the label is indicating that the input is required input, inherited from the <code>FormControl</code> <code>required</code> prop</li>\n<li><code>value.size</code> (<em>string</em>): The size of the component, inherited from the <code>FormControl</code> <code>size</code> prop</li>\n<li><code>value.variant</code> (<em>string</em>): The variant is being used by the <code>FormControl</code> component and its children, inherited from <code>FormControl</code> <code>variant</code> prop</li>\n<li><code>value.onBlur</code> (<em>func</em>): Should be called when the input is blurred</li>\n<li><code>value.onFocus</code> (<em>func</em>): Should be called when the input is focused</li>\n<li><code>value.onEmpty</code> (<em>func</em>): Should be called when the input is emptied</li>\n<li><code>value.onFilled</code> (<em>func</em>): Should be called when the input is filled</li>\n</ul>\n<p><strong>Example</strong></p>\n',{demo:"pages/components/text-fields/UseFormControl.js"},'<h2 id="heading-limitations"><span class="anchor-link" id="limitations"></span>Limitations<a aria-labelledby="heading-limitations" class="anchor-link-style" href="#limitations" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="heading-shrink"><span class="anchor-link" id="shrink"></span>\u7f29\u653e<a aria-labelledby="heading-shrink" class="anchor-link-style" href="#shrink" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u8f93\u5165\u6846\u6807\u7b7e\u7684 &quot;shrink&quot; \u72b6\u6001\u5e76\u4e0d\u603b\u662f\u6b63\u786e\u7684\u3002 \u8f93\u5165\u6807\u7b7e\u5e94\u5728\u8f93\u5165\u6846\u663e\u793a\u5185\u5bb9\u7684\u65f6\u5019\u7acb\u5373\u6536\u7f29\u3002 \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u65e0\u6cd5\u786e\u5b9a\u8f93\u5165\u6846\u7684 &quot;shrink&quot; \u72b6\u6001 (\u5982\u6570\u5b57\u8f93\u5165\u3001\u65e5\u671f\u65f6\u95f4\u8f93\u5165\u3001\u6761\u5e26\u8f93\u5165)\u3002 \u8fd9\u6837\u4e00\u6765\uff0c\u6709\u53ef\u80fd\u51fa\u73b0\u91cd\u53e0\u7684\u73b0\u8c61\u3002</p>\n<p><img src="/static/images/text-fields/shrink.png" alt="shrink \u7f29\u653e"></p>\n<p>\u82e5\u8981\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u60a8\u53ef\u4ee5\u5728\u8f93\u5165\u6846\u7684\u6807\u7b7e\u4e0a\u5f3a\u5236\u8d4b\u4e88 &quot;shrink&quot; \u72b6\u6001\u3002</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TextField</span></span> <span class="token attr-name">InputLabelProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> shrink<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre>\n<p>or</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputLabel</span></span> <span class="token attr-name">shrink</span><span class="token punctuation">></span></span>\u8ba1\u6570<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">InputLabel</span></span><span class="token punctuation">></span></span>\n</code></pre>\n<h3 id="heading-floating-label"><span class="anchor-link" id="floating-label"></span>\u60ac\u6d6e\u7684\u6807\u7b7e<a aria-labelledby="heading-floating-label" class="anchor-link-style" href="#floating-label" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The floating label is absolutely positioned. It won&#39;t impact the layout of the page. Make sure that the input is larger than the label to display correctly.</p>\n<h3 id="heading-type-quot-number-quot"><span class="anchor-link" id="type-quot-number-quot"></span>type=&quot;number&quot;<a aria-labelledby="heading-type-quot-number-quot" class="anchor-link-style" href="#type-quot-number-quot" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>type=&quot;number&quot; \u7684\u8f93\u5165\u5b58\u5728\u6f5c\u5728\u7684\u53ef\u7528\u6027\u95ee\u9898\u3002</p>\n<ul>\n<li>\u8fd9\u5c06\u5141\u8bb8\u67d0\u4e9b\u975e\u6570\u5b57\u5b57\u7b26\uff08&#39;e&#39;, &#39;+&#39;, &#39;-&#39;, &#39;.&#39;\uff09 \u5e76\u4e14\u4e22\u5931\u5176\u4ed6\u5b57\u7b26 \u5e76\u4e14\u4e22\u5931\u5176\u4ed6\u5b57\u7b26 \u5e76\u4e14\u4e22\u5931\u5176\u4ed6\u5b57\u7b26</li>\n<li>\u6eda\u52a8\u589e\u52a0/\u51cf\u5c11\u6570\u5b57\u7684\u529f\u80fd\u53ef\u80fd\u4f1a\u5bfc\u81f4\u610f\u5916\u548c\u96be\u4ee5\u5bdf\u89c9\u7684\u53d8\u5316\u3002</li>\n</ul>\n<p>\u6709\u5173\u8be5\u8bdd\u9898\u7684\u66f4\u591a\u4fe1\u606f - \u8bf7\u53c2\u9605 GOV.UK \u8bbe\u8ba1\u7cfb\u7edf\u56e2\u961f\u7684 <a href="https://technology.blog.gov.uk/2020/02/24/why-the-gov-uk-design-system-team-changed-the-input-type-for-numbers/">\u8fd9\u7bc7\u6587\u7ae0</a>\uff0c\u6765\u4e86\u89e3\u66f4\u8be6\u7ec6\u7684\u89e3\u91ca\u3002</p>\n<p>\u5bf9\u4e8e\u6570\u5b57\u9a8c\u8bc1\uff0c\u4e00\u4e2a\u53ef\u884c\u7684\u66ff\u4ee3\u65b9\u6cd5\u662f\u4f7f\u7528\u9ed8\u8ba4\u7684 type=&quot;text&quot; \u548c <em>pattern</em> \u5c5e\u6027\uff0c\u4f8b\u5982\uff1a</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TextField</span></span> <span class="token attr-name">inputProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> inputMode<span class="token operator">:</span> <span class="token string">\'numeric\'</span><span class="token punctuation">,</span> pattern<span class="token operator">:</span> <span class="token string">\'[0-9]*\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre>\n<p>\u4ee5\u540e\u6211\u4eec\u53ef\u80fd\u4f1a\u63d0\u4f9b <a href="https://github.com/mui-org/material-ui/issues/19154">\u6570\u5b57\uff08number\uff09\u8f93\u5165\u7ec4\u4ef6</a>\u3002</p>\n<h3 id="heading-helper-text"><span class="anchor-link" id="helper-text"></span>\u8f85\u52a9\u6587\u672c<a aria-labelledby="heading-helper-text" class="anchor-link-style" href="#helper-text" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u52a9\u624b\u6587\u672c\u5c5e\u6027\u4f1a\u5f71\u54cd\u6587\u672c\u5b57\u6bb5\u7684\u9ad8\u5ea6\u3002 \u5982\u679c\u4e24\u4e2a\u6587\u672c\u5b57\u6bb5\u5e76\u6392\u653e\u7f6e\uff0c\u4e00\u4e2a\u6709\u8f85\u52a9\u6587\u672c\uff0c\u53e6\u4e00\u4e2a\u6ca1\u6709\uff0c\u90a3\u4e48\u5b83\u4eec\u7684\u9ad8\u5ea6\u5c31\u4f1a\u4e0d\u540c\u3002 \u4f8b\u5982:</p>\n',{demo:"pages/components/text-fields/HelperTextMisaligned.js"},"<p>\u60a8\u53ef\u4ee5\u4f7f\u7528 <code>error</code> \u5c5e\u6027\u6765\u5207\u6362\u9519\u8bef\u7684\u72b6\u6001\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>helperText</code> \u5c5e\u6027\u6765\u7ed9\u7528\u6237\u63d0\u4f9b\u9519\u8bef\u7684\u63d0\u793a\u4fe1\u606f\u3002</p>\n",{demo:"pages/components/text-fields/HelperTextAligned.js"},'<h2 id="heading-integration-with-3rd-party-input-libraries"><span class="anchor-link" id="integration-with-3rd-party-input-libraries"></span>\u4e0e\u7b2c\u4e09\u65b9 input \u5e93\u7684\u6574\u5408<a aria-labelledby="heading-integration-with-3rd-party-input-libraries" class="anchor-link-style" href="#integration-with-3rd-party-input-libraries" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u60a8\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e93\u6765\u683c\u5f0f\u5316\u60a8\u7684\u8f93\u5165\u6846\u3002 \u53ea\u8981\u786e\u4fdd\u5728\u6574\u5408\u7684\u65f6\u5019\uff0c\u60a8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5e26\u6709 <code>inputComponent</code> \u5c5e\u6027\u7684\u81ea\u5b9a\u4e49 <code>&lt;input&gt;</code> \u5143\u7d20\u3002</p>\n<p>The following demo uses the <a href="https://github.com/uNmAnNeR/imaskjs">react-imask</a> and <a href="https://github.com/s-yadav/react-number-format">react-number-format</a> libraries. \u540c\u6837\u7684\u6982\u5ff5\u53ef\u4ee5\u9002\u7528\u4e8e <a href="https://github.com/mui-org/material-ui/issues/16037">\u8fd9\u4e2a\u4f8b\u5b50\uff1areact-stripe-element</a>\u3002</p>\n',{demo:"pages/components/text-fields/FormattedInputs.js"},'<p>\u7b2c\u4e09\u65b9\u6240\u63d0\u4f9b\u7684\u8f93\u5165\u7ec4\u4ef6\u5e94\u8be5\u66b4\u9732\u4e00\u4e2a ref\uff0c\u5176\u503c\u5b9e\u73b0\u4ee5\u4e0b\u63a5\u53e3\uff1a</p>\n<pre><code class="language-ts"><span class="token keyword">interface</span> <span class="token class-name">InputElement</span> <span class="token punctuation">{</span>\n  <span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  value<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<pre><code class="language-jsx"><span class="token keyword">const</span> MyInputComponent <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">forwardRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> ref</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> component<span class="token operator">:</span> Component<span class="token punctuation">,</span> <span class="token operator">...</span>other <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n\n  <span class="token comment">// \u5b9e\u73b0 `InputElement` \u63a5\u53e3</span>\n  React<span class="token punctuation">.</span><span class="token function">useImperativeHandle</span><span class="token punctuation">(</span>ref<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token function-variable function">focus</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token comment">// \u5728\u8fd9\u91cc\u63d0\u4f9b\u7b2c\u4e09\u65b9\u7ec4\u4ef6\u7684\u805a\u7126\uff08focus\uff09\u6e32\u67d3\u65b9\u6cd5</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// \u9690\u85cf\u503c\uff0c\u4f8b\u5982 react-stripe-elements</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// `Component` \u5c06\u4f1a\u662f\u4e0b\u9762\u4f8b\u5b50\u4e2d\u7684 `SomeThirdPartyComponent`</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Component</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>other<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// \u4f7f\u7528</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TextField</span></span>\n  <span class="token attr-name">InputProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n    inputComponent<span class="token operator">:</span> MyInputComponent<span class="token punctuation">,</span>\n    inputProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n      component<span class="token operator">:</span> SomeThirdPartyComponent<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n</code></pre>\n<h2 id="heading-accessibility"><span class="anchor-link" id="accessibility"></span>Accessibility<a aria-labelledby="heading-accessibility" class="anchor-link-style" href="#accessibility" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u4e3a\u4e86\u786e\u4fdd\u60a8\u7684\u6587\u672c\u6846\u53ef\u63d0\u4f9b\u65e0\u969c\u788d\u8bbf\u95ee\uff0c<strong>\u8f93\u5165\u6846\u5fc5\u987b\u548c\u6807\u7b7e\u4ee5\u53ca\u5e2e\u52a9\u6587\u672c\u8fde\u5728\u4e00\u8d77\u8c03\u7528</strong>\u3002 \u800c\u4e14\uff0c\u6df1\u5c42\u7684 DOM \u8282\u70b9\u5e94\u8be5\u9075\u5faa\u8fd9\u4e2a\u7ed3\u6784\u3002</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-input<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\u7535\u5b50\u90ae\u4ef6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-input<span class="token punctuation">"</span></span> <span class="token attr-name">aria-describedby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-helper-text<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-helper-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\u6211\u4eec\u7edd\u4e0d\u4f1a\u5206\u4eab\u60a8\u7684\u90ae\u4ef6\u5730\u5740\u3002 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre>\n<ul>\n<li>If you are using the <code>TextField</code> component, you just have to provide a unique <code>id</code> unless you&#39;re using the <code>TextField</code> only client side. Until the UI is hydrated <code>TextField</code> without an explicit <code>id</code> will not have associated labels.</li>\n<li>If you are composing the component:</li>\n</ul>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormControl</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputLabel</span></span> <span class="token attr-name">htmlFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-input<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\u7535\u5b50\u90ae\u4ef6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">InputLabel</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-input<span class="token punctuation">"</span></span> <span class="token attr-name">aria-describedby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-helper-text<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormHelperText</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-helper-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\u6211\u4eec\u7edd\u4e0d\u4f1a\u5206\u4eab\u60a8\u7684\u90ae\u4ef6\u5730\u5740\u3002<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FormHelperText</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FormControl</span></span><span class="token punctuation">></span></span>\n</code></pre>\n<h2 id="heading-complementary-projects"><span class="anchor-link" id="complementary-projects"></span>Complementary projects<a aria-labelledby="heading-complementary-projects" class="anchor-link-style" href="#complementary-projects" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>For more advanced use cases, you might be able to take advantage of:</p>\n<ul>\n<li><a href="https://react-hook-form.com/">react-hook-form</a>: React hook for form validation.</li>\n<li><a href="https://github.com/stackworx/formik-mui">formik-material-ui</a>: Bindings for using MUI with <a href="https://formik.org/">formik</a>.</li>\n<li><a href="https://github.com/erikras/redux-form-material-ui">redux-form-material-ui</a>: Bindings for using MUI with <a href="https://redux-form.com/">Redux Form</a>.</li>\n<li><a href="https://github.com/lookfirst/mui-rff">mui-rff</a>: Bindings for using MUI with <a href="https://final-form.org/react">React Final Form</a>.</li>\n</ul>\n<h2 id="heading-unstyled"><span class="anchor-link" id="unstyled"></span>Unstyled<a aria-labelledby="heading-unstyled" class="anchor-link-style" href="#unstyled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>For advanced customization scenarios, you can use the unstyled primitives.</p>\n<p>The basic building blocks are the <code>InputUnstyled</code> component and the <code>useInput</code> hook.</p>\n<h3 id="heading-unstyled-component"><span class="anchor-link" id="unstyled-component"></span>Unstyled component<a aria-labelledby="heading-unstyled-component" class="anchor-link-style" href="#unstyled-component" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>InputUnstyled</code> component wraps the native <code>input</code> or <code>textarea</code> element. You can, optionally, provide a custom component to be rendered instead.</p>\n',{demo:"pages/components/text-fields/UnstyledInput.js"},'<h3 id="heading-hook"><span class="anchor-link" id="hook"></span>Hook<a aria-labelledby="heading-hook" class="anchor-link-style" href="#hook" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>useInput</code> hook is the headless version of the <code>InputUnstyled</code> component. Use it for even greater control over the rendered output.</p>\n',{demo:"pages/components/text-fields/UseInput.js"},'<h2 id="heading-api"><span class="anchor-link" id="api"></span>API<a aria-labelledby="heading-api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/zh/api/filled-input/"><code>&lt;FilledInput /&gt;</code></a></li>\n<li><a href="/zh/api/form-control/"><code>&lt;FormControl /&gt;</code></a></li>\n<li><a href="/zh/api/form-control-unstyled/"><code>&lt;FormControlUnstyled /&gt;</code></a></li>\n<li><a href="/zh/api/form-helper-text/"><code>&lt;FormHelperText /&gt;</code></a></li>\n<li><a href="/zh/api/input/"><code>&lt;Input /&gt;</code></a></li>\n<li><a href="/zh/api/input-adornment/"><code>&lt;InputAdornment /&gt;</code></a></li>\n<li><a href="/zh/api/input-base/"><code>&lt;InputBase /&gt;</code></a></li>\n<li><a href="/zh/api/input-label/"><code>&lt;InputLabel /&gt;</code></a></li>\n<li><a href="/zh/api/input-unstyled/"><code>&lt;InputUnstyled /&gt;</code></a></li>\n<li><a href="/zh/api/outlined-input/"><code>&lt;OutlinedInput /&gt;</code></a></li>\n<li><a href="/zh/api/text-field/"><code>&lt;TextField /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"Basic TextField",level:2,hash:"basic-textfield",children:[]},{text:"Form props \u8868\u5355\u7684\u5c5e\u6027",level:2,hash:"form-props",children:[]},{text:"\u6821\u9a8c",level:2,hash:"validation",children:[]},{text:"\u591a\u884c\u5c5e\u6027",level:2,hash:"multiline",children:[]},{text:"Select",level:2,hash:"select",children:[]},{text:"Icons",level:2,hash:"icons",children:[{text:"\u4fee\u9970\u8f93\u5165\u6846",level:3,hash:"input-adornments"}]},{text:"Sizes",level:2,hash:"sizes",children:[]},{text:"Margin",level:2,hash:"margin",children:[]},{text:"Full width",level:2,hash:"full-width",children:[]},{text:"Uncontrolled vs. Controlled",level:2,hash:"uncontrolled-vs-controlled",children:[]},{text:"Components",level:2,hash:"components",children:[]},{text:"Inputs",level:2,hash:"inputs",children:[]},{text:"Color",level:2,hash:"color",children:[]},{text:"Customization",level:2,hash:"customization",children:[]},{text:"useFormControl",level:2,hash:"useformcontrol",children:[]},{text:"Limitations",level:2,hash:"limitations",children:[{text:"\u7f29\u653e",level:3,hash:"shrink"},{text:"\u60ac\u6d6e\u7684\u6807\u7b7e",level:3,hash:"floating-label"},{text:"type=&quot;number&quot;",level:3,hash:"type-quot-number-quot"},{text:"\u8f85\u52a9\u6587\u672c",level:3,hash:"helper-text"}]},{text:"\u4e0e\u7b2c\u4e09\u65b9 input \u5e93\u7684\u6574\u5408",level:2,hash:"integration-with-3rd-party-input-libraries",children:[]},{text:"Accessibility",level:2,hash:"accessibility",children:[]},{text:"Complementary projects",level:2,hash:"complementary-projects",children:[]},{text:"Unstyled",level:2,hash:"unstyled",children:[{text:"Unstyled component",level:3,hash:"unstyled-component"},{text:"Hook",level:3,hash:"hook"}]},{text:"API",level:2,hash:"api",children:[]}],title:"React Text Field\uff08\u6587\u672c\u6846\uff09\u7ec4\u4ef6",headers:{title:"React Text Field\uff08\u6587\u672c\u6846\uff09\u7ec4\u4ef6",components:["FilledInput","FormControl","FormControlUnstyled","FormHelperText","Input","InputAdornment","InputBase","InputLabel","InputUnstyled","OutlinedInput","TextField"],githubLabel:"component: TextField",materialDesign:"https://material.io/components/text-fields"}}},Ft={"pages/components/text-fields/BasicTextFields.js":{module:"./BasicTextFields.js",raw:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport TextField from \'@mui/material/TextField\';\n\nexport default function BasicTextFields() {\n  return (\n    <Box\n      component="form"\n      sx={{\n        \'& > :not(style)\': { m: 1, width: \'25ch\' },\n      }}\n      noValidate\n      autoComplete="off"\n    >\n      <TextField id="outlined-basic" label="Outlined" variant="outlined" />\n      <TextField id="filled-basic" label="Filled" variant="filled" />\n      <TextField id="standard-basic" label="Standard" variant="standard" />\n    </Box>\n  );\n}\n',jsxPreview:'<TextField id="outlined-basic" label="Outlined" variant="outlined" />\n<TextField id="filled-basic" label="Filled" variant="filled" />\n<TextField id="standard-basic" label="Standard" variant="standard" />',moduleTS:"./BasicTextFields.js",rawTS:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport TextField from \'@mui/material/TextField\';\n\nexport default function BasicTextFields() {\n  return (\n    <Box\n      component="form"\n      sx={{\n        \'& > :not(style)\': { m: 1, width: \'25ch\' },\n      }}\n      noValidate\n      autoComplete="off"\n    >\n      <TextField id="outlined-basic" label="Outlined" variant="outlined" />\n      <TextField id="filled-basic" label="Filled" variant="filled" />\n      <TextField id="standard-basic" label="Standard" variant="standard" />\n    </Box>\n  );\n}\n'},"pages/components/text-fields/FormPropsTextFields.js":{module:"./FormPropsTextFields.js",raw:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport TextField from \'@mui/material/TextField\';\n\nexport default function FormPropsTextFields() {\n  return (\n    <Box\n      component="form"\n      sx={{\n        \'& .MuiTextField-root\': { m: 1, width: \'25ch\' },\n      }}\n      noValidate\n      autoComplete="off"\n    >\n      <div>\n        <TextField\n          required\n          id="outlined-required"\n          label="Required"\n          defaultValue="Hello World"\n        />\n        <TextField\n          disabled\n          id="outlined-disabled"\n          label="Disabled"\n          defaultValue="Hello World"\n        />\n        <TextField\n          id="outlined-password-input"\n          label="Password"\n          type="password"\n          autoComplete="current-password"\n        />\n        <TextField\n          id="outlined-read-only-input"\n          label="Read Only"\n          defaultValue="Hello World"\n          InputProps={{\n            readOnly: true,\n          }}\n        />\n        <TextField\n          id="outlined-number"\n          label="Number"\n          type="number"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField id="outlined-search" label="Search field" type="search" />\n        <TextField\n          id="outlined-helperText"\n          label="Helper text"\n          defaultValue="Default Value"\n          helperText="Some important text"\n        />\n      </div>\n      <div>\n        <TextField\n          required\n          id="filled-required"\n          label="Required"\n          defaultValue="Hello World"\n          variant="filled"\n        />\n        <TextField\n          disabled\n          id="filled-disabled"\n          label="Disabled"\n          defaultValue="Hello World"\n          variant="filled"\n        />\n        <TextField\n          id="filled-password-input"\n          label="Password"\n          type="password"\n          autoComplete="current-password"\n          variant="filled"\n        />\n        <TextField\n          id="filled-read-only-input"\n          label="Read Only"\n          defaultValue="Hello World"\n          InputProps={{\n            readOnly: true,\n          }}\n          variant="filled"\n        />\n        <TextField\n          id="filled-number"\n          label="Number"\n          type="number"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant="filled"\n        />\n        <TextField\n          id="filled-search"\n          label="Search field"\n          type="search"\n          variant="filled"\n        />\n        <TextField\n          id="filled-helperText"\n          label="Helper text"\n          defaultValue="Default Value"\n          helperText="Some important text"\n          variant="filled"\n        />\n      </div>\n      <div>\n        <TextField\n          required\n          id="standard-required"\n          label="Required"\n          defaultValue="Hello World"\n          variant="standard"\n        />\n        <TextField\n          disabled\n          id="standard-disabled"\n          label="Disabled"\n          defaultValue="Hello World"\n          variant="standard"\n        />\n        <TextField\n          id="standard-password-input"\n          label="Password"\n          type="password"\n          autoComplete="current-password"\n          variant="standard"\n        />\n        <TextField\n          id="standard-read-only-input"\n          label="Read Only"\n          defaultValue="Hello World"\n          InputProps={{\n            readOnly: true,\n          }}\n          variant="standard"\n        />\n        <TextField\n          id="standard-number"\n          label="Number"\n          type="number"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant="standard"\n        />\n        <TextField\n          id="standard-search"\n          label="Search field"\n          type="search"\n          variant="standard"\n        />\n        <TextField\n          id="standard-helperText"\n          label="Helper text"\n          defaultValue="Default Value"\n          helperText="Some important text"\n          variant="standard"\n        />\n      </div>\n    </Box>\n  );\n}\n',moduleTS:"./FormPropsTextFields.js",rawTS:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport TextField from \'@mui/material/TextField\';\n\nexport default function FormPropsTextFields() {\n  return (\n    <Box\n      component="form"\n      sx={{\n        \'& .MuiTextField-root\': { m: 1, width: \'25ch\' },\n      }}\n      noValidate\n      autoComplete="off"\n    >\n      <div>\n        <TextField\n          required\n          id="outlined-required"\n          label="Required"\n          defaultValue="Hello World"\n        />\n        <TextField\n          disabled\n          id="outlined-disabled"\n          label="Disabled"\n          defaultValue="Hello World"\n        />\n        <TextField\n          id="outlined-password-input"\n          label="Password"\n          type="password"\n          autoComplete="current-password"\n        />\n        <TextField\n          id="outlined-read-only-input"\n          label="Read Only"\n          defaultValue="Hello World"\n          InputProps={{\n            readOnly: true,\n          }}\n        />\n        <TextField\n          id="outlined-number"\n          label="Number"\n          type="number"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField id="outlined-search" label="Search field" type="search" />\n        <TextField\n          id="outlined-helperText"\n          label="Helper text"\n          defaultValue="Default Value"\n          helperText="Some important text"\n        />\n      </div>\n      <div>\n        <TextField\n          required\n          id="filled-required"\n          label="Required"\n          defaultValue="Hello World"\n          variant="filled"\n        />\n        <TextField\n          disabled\n          id="filled-disabled"\n          label="Disabled"\n          defaultValue="Hello World"\n          variant="filled"\n        />\n        <TextField\n          id="filled-password-input"\n          label="Password"\n          type="password"\n          autoComplete="current-password"\n          variant="filled"\n        />\n        <TextField\n          id="filled-read-only-input"\n          label="Read Only"\n          defaultValue="Hello World"\n          InputProps={{\n            readOnly: true,\n          }}\n          variant="filled"\n        />\n        <TextField\n          id="filled-number"\n          label="Number"\n          type="number"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant="filled"\n        />\n        <TextField\n          id="filled-search"\n          label="Search field"\n          type="search"\n          variant="filled"\n        />\n        <TextField\n          id="filled-helperText"\n          label="Helper text"\n          defaultValue="Default Value"\n          helperText="Some important text"\n          variant="filled"\n        />\n      </div>\n      <div>\n        <TextField\n          required\n          id="standard-required"\n          label="Required"\n          defaultValue="Hello World"\n          variant="standard"\n        />\n        <TextField\n          disabled\n          id="standard-disabled"\n          label="Disabled"\n          defaultValue="Hello World"\n          variant="standard"\n        />\n        <TextField\n          id="standard-password-input"\n          label="Password"\n          type="password"\n          autoComplete="current-password"\n          variant="standard"\n        />\n        <TextField\n          id="standard-read-only-input"\n          label="Read Only"\n          defaultValue="Hello World"\n          InputProps={{\n            readOnly: true,\n          }}\n          variant="standard"\n        />\n        <TextField\n          id="standard-number"\n          label="Number"\n          type="number"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant="standard"\n        />\n        <TextField\n          id="standard-search"\n          label="Search field"\n          type="search"\n          variant="standard"\n        />\n        <TextField\n          id="standard-helperText"\n          label="Helper text"\n          defaultValue="Default Value"\n          helperText="Some important text"\n          variant="standard"\n        />\n      </div>\n    </Box>\n  );\n}\n'},"pages/components/text-fields/ValidationTextFields.js":{module:"./ValidationTextFields.js",raw:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport TextField from \'@mui/material/TextField\';\n\nexport default function ValidationTextFields() {\n  return (\n    <Box\n      component="form"\n      sx={{\n        \'& .MuiTextField-root\': { m: 1, width: \'25ch\' },\n      }}\n      noValidate\n      autoComplete="off"\n    >\n      <div>\n        <TextField\n          error\n          id="outlined-error"\n          label="Error"\n          defaultValue="Hello World"\n        />\n        <TextField\n          error\n          id="outlined-error-helper-text"\n          label="Error"\n          defaultValue="Hello World"\n          helperText="Incorrect entry."\n        />\n      </div>\n      <div>\n        <TextField\n          error\n          id="filled-error"\n          label="Error"\n          defaultValue="Hello World"\n          variant="filled"\n        />\n        <TextField\n          error\n          id="filled-error-helper-text"\n          label="Error"\n          defaultValue="Hello World"\n          helperText="Incorrect entry."\n          variant="filled"\n        />\n      </div>\n      <div>\n        <TextField\n          error\n          id="standard-error"\n          label="Error"\n          defaultValue="Hello World"\n          variant="standard"\n        />\n        <TextField\n          error\n          id="standard-error-helper-text"\n          label="Error"\n          defaultValue="Hello World"\n          helperText="Incorrect entry."\n          variant="standard"\n        />\n      </div>\n    </Box>\n  );\n}\n',moduleTS:"./ValidationTextFields.js",rawTS:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport TextField from \'@mui/material/TextField\';\n\nexport default function ValidationTextFields() {\n  return (\n    <Box\n      component="form"\n      sx={{\n        \'& .MuiTextField-root\': { m: 1, width: \'25ch\' },\n      }}\n      noValidate\n      autoComplete="off"\n    >\n      <div>\n        <TextField\n          error\n          id="outlined-error"\n          label="Error"\n          defaultValue="Hello World"\n        />\n        <TextField\n          error\n          id="outlined-error-helper-text"\n          label="Error"\n          defaultValue="Hello World"\n          helperText="Incorrect entry."\n        />\n      </div>\n      <div>\n        <TextField\n          error\n          id="filled-error"\n          label="Error"\n          defaultValue="Hello World"\n          variant="filled"\n        />\n        <TextField\n          error\n          id="filled-error-helper-text"\n          label="Error"\n          defaultValue="Hello World"\n          helperText="Incorrect entry."\n          variant="filled"\n        />\n      </div>\n      <div>\n        <TextField\n          error\n          id="standard-error"\n          label="Error"\n          defaultValue="Hello World"\n          variant="standard"\n        />\n        <TextField\n          error\n          id="standard-error-helper-text"\n          label="Error"\n          defaultValue="Hello World"\n          helperText="Incorrect entry."\n          variant="standard"\n        />\n      </div>\n    </Box>\n  );\n}\n'},"pages/components/text-fields/MultilineTextFields.js":{module:"./MultilineTextFields.js",raw:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport TextField from \'@mui/material/TextField\';\n\nexport default function MultilineTextFields() {\n  const [value, setValue] = React.useState(\'Controlled\');\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <Box\n      component="form"\n      sx={{\n        \'& .MuiTextField-root\': { m: 1, width: \'25ch\' },\n      }}\n      noValidate\n      autoComplete="off"\n    >\n      <div>\n        <TextField\n          id="outlined-multiline-flexible"\n          label="Multiline"\n          multiline\n          maxRows={4}\n          value={value}\n          onChange={handleChange}\n        />\n        <TextField\n          id="outlined-textarea"\n          label="Multiline Placeholder"\n          placeholder="Placeholder"\n          multiline\n        />\n        <TextField\n          id="outlined-multiline-static"\n          label="Multiline"\n          multiline\n          rows={4}\n          defaultValue="Default Value"\n        />\n      </div>\n      <div>\n        <TextField\n          id="filled-multiline-flexible"\n          label="Multiline"\n          multiline\n          maxRows={4}\n          value={value}\n          onChange={handleChange}\n          variant="filled"\n        />\n        <TextField\n          id="filled-textarea"\n          label="Multiline Placeholder"\n          placeholder="Placeholder"\n          multiline\n          variant="filled"\n        />\n        <TextField\n          id="filled-multiline-static"\n          label="Multiline"\n          multiline\n          rows={4}\n          defaultValue="Default Value"\n          variant="filled"\n        />\n      </div>\n      <div>\n        <TextField\n          id="standard-multiline-flexible"\n          label="Multiline"\n          multiline\n          maxRows={4}\n          value={value}\n          onChange={handleChange}\n          variant="standard"\n        />\n        <TextField\n          id="standard-textarea"\n          label="Multiline Placeholder"\n          placeholder="Placeholder"\n          multiline\n          variant="standard"\n        />\n        <TextField\n          id="standard-multiline-static"\n          label="Multiline"\n          multiline\n          rows={4}\n          defaultValue="Default Value"\n          variant="standard"\n        />\n      </div>\n    </Box>\n  );\n}\n',moduleTS:"./MultilineTextFields.js",rawTS:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport TextField from \'@mui/material/TextField\';\n\nexport default function MultilineTextFields() {\n  const [value, setValue] = React.useState(\'Controlled\');\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <Box\n      component="form"\n      sx={{\n        \'& .MuiTextField-root\': { m: 1, width: \'25ch\' },\n      }}\n      noValidate\n      autoComplete="off"\n    >\n      <div>\n        <TextField\n          id="outlined-multiline-flexible"\n          label="Multiline"\n          multiline\n          maxRows={4}\n          value={value}\n          onChange={handleChange}\n        />\n        <TextField\n          id="outlined-textarea"\n          label="Multiline Placeholder"\n          placeholder="Placeholder"\n          multiline\n        />\n        <TextField\n          id="outlined-multiline-static"\n          label="Multiline"\n          multiline\n          rows={4}\n          defaultValue="Default Value"\n        />\n      </div>\n      <div>\n        <TextField\n          id="filled-multiline-flexible"\n          label="Multiline"\n          multiline\n          maxRows={4}\n          value={value}\n          onChange={handleChange}\n          variant="filled"\n        />\n        <TextField\n          id="filled-textarea"\n          label="Multiline Placeholder"\n          placeholder="Placeholder"\n          multiline\n          variant="filled"\n        />\n        <TextField\n          id="filled-multiline-static"\n          label="Multiline"\n          multiline\n          rows={4}\n          defaultValue="Default Value"\n          variant="filled"\n        />\n      </div>\n      <div>\n        <TextField\n          id="standard-multiline-flexible"\n          label="Multiline"\n          multiline\n          maxRows={4}\n          value={value}\n          onChange={handleChange}\n          variant="standard"\n        />\n        <TextField\n          id="standard-textarea"\n          label="Multiline Placeholder"\n          placeholder="Placeholder"\n          multiline\n          variant="standard"\n        />\n        <TextField\n          id="standard-multiline-static"\n          label="Multiline"\n          multiline\n          rows={4}\n          defaultValue="Default Value"\n          variant="standard"\n        />\n      </div>\n    </Box>\n  );\n}\n'},"pages/components/text-fields/InputWithIcon.js":{module:"./InputWithIcon.js",raw:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport TextField from '@mui/material/TextField';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\n\nexport default function InputWithIcon() {\n  return (\n    <Box sx={{ '& > :not(style)': { m: 1 } }}>\n      <FormControl variant=\"standard\">\n        <InputLabel htmlFor=\"input-with-icon-adornment\">\n          With a start adornment\n        </InputLabel>\n        <Input\n          id=\"input-with-icon-adornment\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <AccountCircle />\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n      <TextField\n        id=\"input-with-icon-textfield\"\n        label=\"TextField\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <AccountCircle />\n            </InputAdornment>\n          ),\n        }}\n        variant=\"standard\"\n      />\n      <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\n        <AccountCircle sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\n        <TextField id=\"input-with-sx\" label=\"With sx\" variant=\"standard\" />\n      </Box>\n    </Box>\n  );\n}\n",moduleTS:"./InputWithIcon.js",rawTS:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport TextField from '@mui/material/TextField';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\n\nexport default function InputWithIcon() {\n  return (\n    <Box sx={{ '& > :not(style)': { m: 1 } }}>\n      <FormControl variant=\"standard\">\n        <InputLabel htmlFor=\"input-with-icon-adornment\">\n          With a start adornment\n        </InputLabel>\n        <Input\n          id=\"input-with-icon-adornment\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <AccountCircle />\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n      <TextField\n        id=\"input-with-icon-textfield\"\n        label=\"TextField\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <AccountCircle />\n            </InputAdornment>\n          ),\n        }}\n        variant=\"standard\"\n      />\n      <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\n        <AccountCircle sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\n        <TextField id=\"input-with-sx\" label=\"With sx\" variant=\"standard\" />\n      </Box>\n    </Box>\n  );\n}\n"},"pages/components/text-fields/SelectTextFields.js":{module:"./SelectTextFields.js",raw:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport TextField from \'@mui/material/TextField\';\nimport MenuItem from \'@mui/material/MenuItem\';\n\nconst currencies = [\n  {\n    value: \'USD\',\n    label: \'$\',\n  },\n  {\n    value: \'EUR\',\n    label: \'\u20ac\',\n  },\n  {\n    value: \'BTC\',\n    label: \'\u0e3f\',\n  },\n  {\n    value: \'JPY\',\n    label: \'\xa5\',\n  },\n];\n\nexport default function SelectTextFields() {\n  const [currency, setCurrency] = React.useState(\'EUR\');\n\n  const handleChange = (event) => {\n    setCurrency(event.target.value);\n  };\n\n  return (\n    <Box\n      component="form"\n      sx={{\n        \'& .MuiTextField-root\': { m: 1, width: \'25ch\' },\n      }}\n      noValidate\n      autoComplete="off"\n    >\n      <div>\n        <TextField\n          id="outlined-select-currency"\n          select\n          label="Select"\n          value={currency}\n          onChange={handleChange}\n          helperText="Please select your currency"\n        >\n          {currencies.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id="outlined-select-currency-native"\n          select\n          label="Native select"\n          value={currency}\n          onChange={handleChange}\n          SelectProps={{\n            native: true,\n          }}\n          helperText="Please select your currency"\n        >\n          {currencies.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n      </div>\n      <div>\n        <TextField\n          id="filled-select-currency"\n          select\n          label="Select"\n          value={currency}\n          onChange={handleChange}\n          helperText="Please select your currency"\n          variant="filled"\n        >\n          {currencies.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id="filled-select-currency-native"\n          select\n          label="Native select"\n          value={currency}\n          onChange={handleChange}\n          SelectProps={{\n            native: true,\n          }}\n          helperText="Please select your currency"\n          variant="filled"\n        >\n          {currencies.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n      </div>\n      <div>\n        <TextField\n          id="standard-select-currency"\n          select\n          label="Select"\n          value={currency}\n          onChange={handleChange}\n          helperText="Please select your currency"\n          variant="standard"\n        >\n          {currencies.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id="standard-select-currency-native"\n          select\n          label="Native select"\n          value={currency}\n          onChange={handleChange}\n          SelectProps={{\n            native: true,\n          }}\n          helperText="Please select your currency"\n          variant="standard"\n        >\n          {currencies.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n      </div>\n    </Box>\n  );\n}\n',moduleTS:"./SelectTextFields.js",rawTS:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport TextField from \'@mui/material/TextField\';\nimport MenuItem from \'@mui/material/MenuItem\';\n\nconst currencies = [\n  {\n    value: \'USD\',\n    label: \'$\',\n  },\n  {\n    value: \'EUR\',\n    label: \'\u20ac\',\n  },\n  {\n    value: \'BTC\',\n    label: \'\u0e3f\',\n  },\n  {\n    value: \'JPY\',\n    label: \'\xa5\',\n  },\n];\n\nexport default function SelectTextFields() {\n  const [currency, setCurrency] = React.useState(\'EUR\');\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCurrency(event.target.value);\n  };\n\n  return (\n    <Box\n      component="form"\n      sx={{\n        \'& .MuiTextField-root\': { m: 1, width: \'25ch\' },\n      }}\n      noValidate\n      autoComplete="off"\n    >\n      <div>\n        <TextField\n          id="outlined-select-currency"\n          select\n          label="Select"\n          value={currency}\n          onChange={handleChange}\n          helperText="Please select your currency"\n        >\n          {currencies.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id="outlined-select-currency-native"\n          select\n          label="Native select"\n          value={currency}\n          onChange={handleChange}\n          SelectProps={{\n            native: true,\n          }}\n          helperText="Please select your currency"\n        >\n          {currencies.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n      </div>\n      <div>\n        <TextField\n          id="filled-select-currency"\n          select\n          label="Select"\n          value={currency}\n          onChange={handleChange}\n          helperText="Please select your currency"\n          variant="filled"\n        >\n          {currencies.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id="filled-select-currency-native"\n          select\n          label="Native select"\n          value={currency}\n          onChange={handleChange}\n          SelectProps={{\n            native: true,\n          }}\n          helperText="Please select your currency"\n          variant="filled"\n        >\n          {currencies.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n      </div>\n      <div>\n        <TextField\n          id="standard-select-currency"\n          select\n          label="Select"\n          value={currency}\n          onChange={handleChange}\n          helperText="Please select your currency"\n          variant="standard"\n        >\n          {currencies.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id="standard-select-currency-native"\n          select\n          label="Native select"\n          value={currency}\n          onChange={handleChange}\n          SelectProps={{\n            native: true,\n          }}\n          helperText="Please select your currency"\n          variant="standard"\n        >\n          {currencies.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n      </div>\n    </Box>\n  );\n}\n'},"pages/components/text-fields/InputAdornments.js":{module:"./InputAdornments.js",raw:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport IconButton from \'@mui/material/IconButton\';\nimport Input from \'@mui/material/Input\';\nimport FilledInput from \'@mui/material/FilledInput\';\nimport OutlinedInput from \'@mui/material/OutlinedInput\';\nimport InputLabel from \'@mui/material/InputLabel\';\nimport InputAdornment from \'@mui/material/InputAdornment\';\nimport FormHelperText from \'@mui/material/FormHelperText\';\nimport FormControl from \'@mui/material/FormControl\';\nimport TextField from \'@mui/material/TextField\';\nimport Visibility from \'@mui/icons-material/Visibility\';\nimport VisibilityOff from \'@mui/icons-material/VisibilityOff\';\n\nexport default function InputAdornments() {\n  const [values, setValues] = React.useState({\n    amount: \'\',\n    password: \'\',\n    weight: \'\',\n    weightRange: \'\',\n    showPassword: false,\n  });\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({\n      ...values,\n      showPassword: !values.showPassword,\n    });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <Box sx={{ display: \'flex\', flexWrap: \'wrap\' }}>\n      <div>\n        <TextField\n          label="With normal TextField"\n          id="outlined-start-adornment"\n          sx={{ m: 1, width: \'25ch\' }}\n          InputProps={{\n            startAdornment: <InputAdornment position="start">kg</InputAdornment>,\n          }}\n        />\n        <FormControl sx={{ m: 1, width: \'25ch\' }} variant="outlined">\n          <OutlinedInput\n            id="outlined-adornment-weight"\n            value={values.weight}\n            onChange={handleChange(\'weight\')}\n            endAdornment={<InputAdornment position="end">kg</InputAdornment>}\n            aria-describedby="outlined-weight-helper-text"\n            inputProps={{\n              \'aria-label\': \'weight\',\n            }}\n          />\n          <FormHelperText id="outlined-weight-helper-text">Weight</FormHelperText>\n        </FormControl>\n        <FormControl sx={{ m: 1, width: \'25ch\' }} variant="outlined">\n          <InputLabel htmlFor="outlined-adornment-password">Password</InputLabel>\n          <OutlinedInput\n            id="outlined-adornment-password"\n            type={values.showPassword ? \'text\' : \'password\'}\n            value={values.password}\n            onChange={handleChange(\'password\')}\n            endAdornment={\n              <InputAdornment position="end">\n                <IconButton\n                  aria-label="toggle password visibility"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge="end"\n                >\n                  {values.showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n            label="Password"\n          />\n        </FormControl>\n        <FormControl fullWidth sx={{ m: 1 }}>\n          <InputLabel htmlFor="outlined-adornment-amount">Amount</InputLabel>\n          <OutlinedInput\n            id="outlined-adornment-amount"\n            value={values.amount}\n            onChange={handleChange(\'amount\')}\n            startAdornment={<InputAdornment position="start">$</InputAdornment>}\n            label="Amount"\n          />\n        </FormControl>\n      </div>\n      <div>\n        <TextField\n          label="With normal TextField"\n          id="filled-start-adornment"\n          sx={{ m: 1, width: \'25ch\' }}\n          InputProps={{\n            startAdornment: <InputAdornment position="start">kg</InputAdornment>,\n          }}\n          variant="filled"\n        />\n        <FormControl sx={{ m: 1, width: \'25ch\' }} variant="filled">\n          <FilledInput\n            id="filled-adornment-weight"\n            value={values.weight}\n            onChange={handleChange(\'weight\')}\n            endAdornment={<InputAdornment position="end">kg</InputAdornment>}\n            aria-describedby="filled-weight-helper-text"\n            inputProps={{\n              \'aria-label\': \'weight\',\n            }}\n          />\n          <FormHelperText id="filled-weight-helper-text">Weight</FormHelperText>\n        </FormControl>\n        <FormControl sx={{ m: 1, width: \'25ch\' }} variant="filled">\n          <InputLabel htmlFor="filled-adornment-password">Password</InputLabel>\n          <FilledInput\n            id="filled-adornment-password"\n            type={values.showPassword ? \'text\' : \'password\'}\n            value={values.password}\n            onChange={handleChange(\'password\')}\n            endAdornment={\n              <InputAdornment position="end">\n                <IconButton\n                  aria-label="toggle password visibility"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge="end"\n                >\n                  {values.showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n        <FormControl fullWidth sx={{ m: 1 }} variant="filled">\n          <InputLabel htmlFor="filled-adornment-amount">Amount</InputLabel>\n          <FilledInput\n            id="filled-adornment-amount"\n            value={values.amount}\n            onChange={handleChange(\'amount\')}\n            startAdornment={<InputAdornment position="start">$</InputAdornment>}\n          />\n        </FormControl>\n      </div>\n      <div>\n        <TextField\n          label="With normal TextField"\n          id="standard-start-adornment"\n          sx={{ m: 1, width: \'25ch\' }}\n          InputProps={{\n            startAdornment: <InputAdornment position="start">kg</InputAdornment>,\n          }}\n          variant="standard"\n        />\n        <FormControl variant="standard" sx={{ m: 1, mt: 3, width: \'25ch\' }}>\n          <Input\n            id="standard-adornment-weight"\n            value={values.weight}\n            onChange={handleChange(\'weight\')}\n            endAdornment={<InputAdornment position="end">kg</InputAdornment>}\n            aria-describedby="standard-weight-helper-text"\n            inputProps={{\n              \'aria-label\': \'weight\',\n            }}\n          />\n          <FormHelperText id="standard-weight-helper-text">Weight</FormHelperText>\n        </FormControl>\n        <FormControl sx={{ m: 1, width: \'25ch\' }} variant="standard">\n          <InputLabel htmlFor="standard-adornment-password">Password</InputLabel>\n          <Input\n            id="standard-adornment-password"\n            type={values.showPassword ? \'text\' : \'password\'}\n            value={values.password}\n            onChange={handleChange(\'password\')}\n            endAdornment={\n              <InputAdornment position="end">\n                <IconButton\n                  aria-label="toggle password visibility"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {values.showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n        <FormControl fullWidth sx={{ m: 1 }} variant="standard">\n          <InputLabel htmlFor="standard-adornment-amount">Amount</InputLabel>\n          <Input\n            id="standard-adornment-amount"\n            value={values.amount}\n            onChange={handleChange(\'amount\')}\n            startAdornment={<InputAdornment position="start">$</InputAdornment>}\n          />\n        </FormControl>\n      </div>\n    </Box>\n  );\n}\n',moduleTS:"./InputAdornments.js",rawTS:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport IconButton from \'@mui/material/IconButton\';\nimport Input from \'@mui/material/Input\';\nimport FilledInput from \'@mui/material/FilledInput\';\nimport OutlinedInput from \'@mui/material/OutlinedInput\';\nimport InputLabel from \'@mui/material/InputLabel\';\nimport InputAdornment from \'@mui/material/InputAdornment\';\nimport FormHelperText from \'@mui/material/FormHelperText\';\nimport FormControl from \'@mui/material/FormControl\';\nimport TextField from \'@mui/material/TextField\';\nimport Visibility from \'@mui/icons-material/Visibility\';\nimport VisibilityOff from \'@mui/icons-material/VisibilityOff\';\n\ninterface State {\n  amount: string;\n  password: string;\n  weight: string;\n  weightRange: string;\n  showPassword: boolean;\n}\n\nexport default function InputAdornments() {\n  const [values, setValues] = React.useState<State>({\n    amount: \'\',\n    password: \'\',\n    weight: \'\',\n    weightRange: \'\',\n    showPassword: false,\n  });\n\n  const handleChange =\n    (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValues({ ...values, [prop]: event.target.value });\n    };\n\n  const handleClickShowPassword = () => {\n    setValues({\n      ...values,\n      showPassword: !values.showPassword,\n    });\n  };\n\n  const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n  };\n\n  return (\n    <Box sx={{ display: \'flex\', flexWrap: \'wrap\' }}>\n      <div>\n        <TextField\n          label="With normal TextField"\n          id="outlined-start-adornment"\n          sx={{ m: 1, width: \'25ch\' }}\n          InputProps={{\n            startAdornment: <InputAdornment position="start">kg</InputAdornment>,\n          }}\n        />\n        <FormControl sx={{ m: 1, width: \'25ch\' }} variant="outlined">\n          <OutlinedInput\n            id="outlined-adornment-weight"\n            value={values.weight}\n            onChange={handleChange(\'weight\')}\n            endAdornment={<InputAdornment position="end">kg</InputAdornment>}\n            aria-describedby="outlined-weight-helper-text"\n            inputProps={{\n              \'aria-label\': \'weight\',\n            }}\n          />\n          <FormHelperText id="outlined-weight-helper-text">Weight</FormHelperText>\n        </FormControl>\n        <FormControl sx={{ m: 1, width: \'25ch\' }} variant="outlined">\n          <InputLabel htmlFor="outlined-adornment-password">Password</InputLabel>\n          <OutlinedInput\n            id="outlined-adornment-password"\n            type={values.showPassword ? \'text\' : \'password\'}\n            value={values.password}\n            onChange={handleChange(\'password\')}\n            endAdornment={\n              <InputAdornment position="end">\n                <IconButton\n                  aria-label="toggle password visibility"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge="end"\n                >\n                  {values.showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n            label="Password"\n          />\n        </FormControl>\n        <FormControl fullWidth sx={{ m: 1 }}>\n          <InputLabel htmlFor="outlined-adornment-amount">Amount</InputLabel>\n          <OutlinedInput\n            id="outlined-adornment-amount"\n            value={values.amount}\n            onChange={handleChange(\'amount\')}\n            startAdornment={<InputAdornment position="start">$</InputAdornment>}\n            label="Amount"\n          />\n        </FormControl>\n      </div>\n      <div>\n        <TextField\n          label="With normal TextField"\n          id="filled-start-adornment"\n          sx={{ m: 1, width: \'25ch\' }}\n          InputProps={{\n            startAdornment: <InputAdornment position="start">kg</InputAdornment>,\n          }}\n          variant="filled"\n        />\n        <FormControl sx={{ m: 1, width: \'25ch\' }} variant="filled">\n          <FilledInput\n            id="filled-adornment-weight"\n            value={values.weight}\n            onChange={handleChange(\'weight\')}\n            endAdornment={<InputAdornment position="end">kg</InputAdornment>}\n            aria-describedby="filled-weight-helper-text"\n            inputProps={{\n              \'aria-label\': \'weight\',\n            }}\n          />\n          <FormHelperText id="filled-weight-helper-text">Weight</FormHelperText>\n        </FormControl>\n        <FormControl sx={{ m: 1, width: \'25ch\' }} variant="filled">\n          <InputLabel htmlFor="filled-adornment-password">Password</InputLabel>\n          <FilledInput\n            id="filled-adornment-password"\n            type={values.showPassword ? \'text\' : \'password\'}\n            value={values.password}\n            onChange={handleChange(\'password\')}\n            endAdornment={\n              <InputAdornment position="end">\n                <IconButton\n                  aria-label="toggle password visibility"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge="end"\n                >\n                  {values.showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n        <FormControl fullWidth sx={{ m: 1 }} variant="filled">\n          <InputLabel htmlFor="filled-adornment-amount">Amount</InputLabel>\n          <FilledInput\n            id="filled-adornment-amount"\n            value={values.amount}\n            onChange={handleChange(\'amount\')}\n            startAdornment={<InputAdornment position="start">$</InputAdornment>}\n          />\n        </FormControl>\n      </div>\n      <div>\n        <TextField\n          label="With normal TextField"\n          id="standard-start-adornment"\n          sx={{ m: 1, width: \'25ch\' }}\n          InputProps={{\n            startAdornment: <InputAdornment position="start">kg</InputAdornment>,\n          }}\n          variant="standard"\n        />\n        <FormControl variant="standard" sx={{ m: 1, mt: 3, width: \'25ch\' }}>\n          <Input\n            id="standard-adornment-weight"\n            value={values.weight}\n            onChange={handleChange(\'weight\')}\n            endAdornment={<InputAdornment position="end">kg</InputAdornment>}\n            aria-describedby="standard-weight-helper-text"\n            inputProps={{\n              \'aria-label\': \'weight\',\n            }}\n          />\n          <FormHelperText id="standard-weight-helper-text">Weight</FormHelperText>\n        </FormControl>\n        <FormControl sx={{ m: 1, width: \'25ch\' }} variant="standard">\n          <InputLabel htmlFor="standard-adornment-password">Password</InputLabel>\n          <Input\n            id="standard-adornment-password"\n            type={values.showPassword ? \'text\' : \'password\'}\n            value={values.password}\n            onChange={handleChange(\'password\')}\n            endAdornment={\n              <InputAdornment position="end">\n                <IconButton\n                  aria-label="toggle password visibility"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {values.showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n        <FormControl fullWidth sx={{ m: 1 }} variant="standard">\n          <InputLabel htmlFor="standard-adornment-amount">Amount</InputLabel>\n          <Input\n            id="standard-adornment-amount"\n            value={values.amount}\n            onChange={handleChange(\'amount\')}\n            startAdornment={<InputAdornment position="start">$</InputAdornment>}\n          />\n        </FormControl>\n      </div>\n    </Box>\n  );\n}\n'},"pages/components/text-fields/TextFieldSizes.js":{module:"./TextFieldSizes.js",raw:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport TextField from \'@mui/material/TextField\';\n\nexport default function TextFieldSizes() {\n  return (\n    <Box\n      component="form"\n      sx={{\n        \'& .MuiTextField-root\': { m: 1, width: \'25ch\' },\n      }}\n      noValidate\n      autoComplete="off"\n    >\n      <div>\n        <TextField\n          label="Size"\n          id="outlined-size-small"\n          defaultValue="Small"\n          size="small"\n        />\n        <TextField label="Size" id="outlined-size-normal" defaultValue="Normal" />\n      </div>\n      <div>\n        <TextField\n          label="Size"\n          id="filled-size-small"\n          defaultValue="Small"\n          variant="filled"\n          size="small"\n        />\n        <TextField\n          label="Size"\n          id="filled-size-normal"\n          defaultValue="Normal"\n          variant="filled"\n        />\n      </div>\n      <div>\n        <TextField\n          label="Size"\n          id="standard-size-small"\n          defaultValue="Small"\n          size="small"\n          variant="standard"\n        />\n        <TextField\n          label="Size"\n          id="standard-size-normal"\n          defaultValue="Normal"\n          variant="standard"\n        />\n      </div>\n    </Box>\n  );\n}\n',moduleTS:"./TextFieldSizes.js",rawTS:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport TextField from \'@mui/material/TextField\';\n\nexport default function TextFieldSizes() {\n  return (\n    <Box\n      component="form"\n      sx={{\n        \'& .MuiTextField-root\': { m: 1, width: \'25ch\' },\n      }}\n      noValidate\n      autoComplete="off"\n    >\n      <div>\n        <TextField\n          label="Size"\n          id="outlined-size-small"\n          defaultValue="Small"\n          size="small"\n        />\n        <TextField label="Size" id="outlined-size-normal" defaultValue="Normal" />\n      </div>\n      <div>\n        <TextField\n          label="Size"\n          id="filled-size-small"\n          defaultValue="Small"\n          variant="filled"\n          size="small"\n        />\n        <TextField\n          label="Size"\n          id="filled-size-normal"\n          defaultValue="Normal"\n          variant="filled"\n        />\n      </div>\n      <div>\n        <TextField\n          label="Size"\n          id="standard-size-small"\n          defaultValue="Small"\n          size="small"\n          variant="standard"\n        />\n        <TextField\n          label="Size"\n          id="standard-size-normal"\n          defaultValue="Normal"\n          variant="standard"\n        />\n      </div>\n    </Box>\n  );\n}\n'},"pages/components/text-fields/TextFieldHiddenLabel.js":{module:"./TextFieldHiddenLabel.js",raw:'import * as React from \'react\';\nimport Stack from \'@mui/material/Stack\';\nimport TextField from \'@mui/material/TextField\';\n\nexport default function TextFieldHiddenLabel() {\n  return (\n    <Stack\n      component="form"\n      sx={{\n        width: \'25ch\',\n      }}\n      spacing={2}\n      noValidate\n      autoComplete="off"\n    >\n      <TextField\n        hiddenLabel\n        id="filled-hidden-label-small"\n        defaultValue="Small"\n        variant="filled"\n        size="small"\n      />\n      <TextField\n        hiddenLabel\n        id="filled-hidden-label-normal"\n        defaultValue="Normal"\n        variant="filled"\n      />\n    </Stack>\n  );\n}\n',jsxPreview:'<TextField\n  hiddenLabel\n  id="filled-hidden-label-small"\n  defaultValue="Small"\n  variant="filled"\n  size="small"\n/>\n<TextField\n  hiddenLabel\n  id="filled-hidden-label-normal"\n  defaultValue="Normal"\n  variant="filled"\n/>',moduleTS:"./TextFieldHiddenLabel.js",rawTS:'import * as React from \'react\';\nimport Stack from \'@mui/material/Stack\';\nimport TextField from \'@mui/material/TextField\';\n\nexport default function TextFieldHiddenLabel() {\n  return (\n    <Stack\n      component="form"\n      sx={{\n        width: \'25ch\',\n      }}\n      spacing={2}\n      noValidate\n      autoComplete="off"\n    >\n      <TextField\n        hiddenLabel\n        id="filled-hidden-label-small"\n        defaultValue="Small"\n        variant="filled"\n        size="small"\n      />\n      <TextField\n        hiddenLabel\n        id="filled-hidden-label-normal"\n        defaultValue="Normal"\n        variant="filled"\n      />\n    </Stack>\n  );\n}\n'},"pages/components/text-fields/FullWidthTextField.js":{module:"./FullWidthTextField.js",raw:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport default function FullWidthTextField() {\n  return (\n    <Box\n      sx={{\n        width: 500,\n        maxWidth: '100%',\n      }}\n    >\n      <TextField fullWidth label=\"fullWidth\" id=\"fullWidth\" />\n    </Box>\n  );\n}\n",jsxPreview:'<TextField fullWidth label="fullWidth" id="fullWidth" />',moduleTS:"./FullWidthTextField.js",rawTS:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport default function FullWidthTextField() {\n  return (\n    <Box\n      sx={{\n        width: 500,\n        maxWidth: '100%',\n      }}\n    >\n      <TextField fullWidth label=\"fullWidth\" id=\"fullWidth\" />\n    </Box>\n  );\n}\n"},"pages/components/text-fields/LayoutTextFields.js":{module:"./LayoutTextFields.js",raw:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nfunction RedBar() {\n  return (\n    <Box\n      sx={{\n        height: 20,\n        backgroundColor: (theme) =>\n          theme.palette.mode === 'light'\n            ? 'rgba(255, 0, 0, 0.1)'\n            : 'rgb(255 132 132 / 25%)',\n      }}\n    />\n  );\n}\n\nexport default function LayoutTextFields() {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        '& .MuiTextField-root': { width: '25ch' },\n      }}\n    >\n      <RedBar />\n      <TextField label={'margin=\"none\"'} id=\"margin-none\" />\n      <RedBar />\n      <TextField label={'margin=\"dense\"'} id=\"margin-dense\" margin=\"dense\" />\n      <RedBar />\n      <TextField label={'margin=\"normal\"'} id=\"margin-normal\" margin=\"normal\" />\n      <RedBar />\n    </Box>\n  );\n}\n",jsxPreview:'<RedBar />\n<TextField label={\'margin="none"\'} id="margin-none" />\n<RedBar />\n<TextField label={\'margin="dense"\'} id="margin-dense" margin="dense" />\n<RedBar />\n<TextField label={\'margin="normal"\'} id="margin-normal" margin="normal" />\n<RedBar />',moduleTS:"./LayoutTextFields.js",rawTS:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nfunction RedBar() {\n  return (\n    <Box\n      sx={{\n        height: 20,\n        backgroundColor: (theme) =>\n          theme.palette.mode === 'light'\n            ? 'rgba(255, 0, 0, 0.1)'\n            : 'rgb(255 132 132 / 25%)',\n      }}\n    />\n  );\n}\n\nexport default function LayoutTextFields() {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        '& .MuiTextField-root': { width: '25ch' },\n      }}\n    >\n      <RedBar />\n      <TextField label={'margin=\"none\"'} id=\"margin-none\" />\n      <RedBar />\n      <TextField label={'margin=\"dense\"'} id=\"margin-dense\" margin=\"dense\" />\n      <RedBar />\n      <TextField label={'margin=\"normal\"'} id=\"margin-normal\" margin=\"normal\" />\n      <RedBar />\n    </Box>\n  );\n}\n"},"pages/components/text-fields/StateTextFields.js":{module:"./StateTextFields.js",raw:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport TextField from \'@mui/material/TextField\';\n\nexport default function StateTextFields() {\n  const [name, setName] = React.useState(\'Cat in the Hat\');\n  const handleChange = (event) => {\n    setName(event.target.value);\n  };\n\n  return (\n    <Box\n      component="form"\n      sx={{\n        \'& > :not(style)\': { m: 1, width: \'25ch\' },\n      }}\n      noValidate\n      autoComplete="off"\n    >\n      <TextField\n        id="outlined-name"\n        label="Name"\n        value={name}\n        onChange={handleChange}\n      />\n      <TextField\n        id="outlined-uncontrolled"\n        label="Uncontrolled"\n        defaultValue="foo"\n      />\n    </Box>\n  );\n}\n',jsxPreview:'<TextField\n  id="outlined-name"\n  label="Name"\n  value={name}\n  onChange={handleChange}\n/>\n<TextField\n  id="outlined-uncontrolled"\n  label="Uncontrolled"\n  defaultValue="foo"\n/>',moduleTS:"./StateTextFields.js",rawTS:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport TextField from \'@mui/material/TextField\';\n\nexport default function StateTextFields() {\n  const [name, setName] = React.useState(\'Cat in the Hat\');\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n  };\n\n  return (\n    <Box\n      component="form"\n      sx={{\n        \'& > :not(style)\': { m: 1, width: \'25ch\' },\n      }}\n      noValidate\n      autoComplete="off"\n    >\n      <TextField\n        id="outlined-name"\n        label="Name"\n        value={name}\n        onChange={handleChange}\n      />\n      <TextField\n        id="outlined-uncontrolled"\n        label="Uncontrolled"\n        defaultValue="foo"\n      />\n    </Box>\n  );\n}\n'},"pages/components/text-fields/ComposedTextField.js":{module:"./ComposedTextField.js",raw:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport FilledInput from \'@mui/material/FilledInput\';\nimport FormControl from \'@mui/material/FormControl\';\nimport FormHelperText from \'@mui/material/FormHelperText\';\nimport Input from \'@mui/material/Input\';\nimport InputLabel from \'@mui/material/InputLabel\';\nimport OutlinedInput from \'@mui/material/OutlinedInput\';\n\nexport default function ComposedTextField() {\n  const [name, setName] = React.useState(\'Composed TextField\');\n\n  const handleChange = (event) => {\n    setName(event.target.value);\n  };\n\n  return (\n    <Box\n      component="form"\n      sx={{\n        \'& > :not(style)\': { m: 1 },\n      }}\n      noValidate\n      autoComplete="off"\n    >\n      <FormControl variant="standard">\n        <InputLabel htmlFor="component-simple">Name</InputLabel>\n        <Input id="component-simple" value={name} onChange={handleChange} />\n      </FormControl>\n      <FormControl variant="standard">\n        <InputLabel htmlFor="component-helper">Name</InputLabel>\n        <Input\n          id="component-helper"\n          value={name}\n          onChange={handleChange}\n          aria-describedby="component-helper-text"\n        />\n        <FormHelperText id="component-helper-text">\n          Some important helper text\n        </FormHelperText>\n      </FormControl>\n      <FormControl disabled variant="standard">\n        <InputLabel htmlFor="component-disabled">Name</InputLabel>\n        <Input id="component-disabled" value={name} onChange={handleChange} />\n        <FormHelperText>Disabled</FormHelperText>\n      </FormControl>\n      <FormControl error variant="standard">\n        <InputLabel htmlFor="component-error">Name</InputLabel>\n        <Input\n          id="component-error"\n          value={name}\n          onChange={handleChange}\n          aria-describedby="component-error-text"\n        />\n        <FormHelperText id="component-error-text">Error</FormHelperText>\n      </FormControl>\n      <FormControl>\n        <InputLabel htmlFor="component-outlined">Name</InputLabel>\n        <OutlinedInput\n          id="component-outlined"\n          value={name}\n          onChange={handleChange}\n          label="Name"\n        />\n      </FormControl>\n      <FormControl variant="filled">\n        <InputLabel htmlFor="component-filled">Name</InputLabel>\n        <FilledInput id="component-filled" value={name} onChange={handleChange} />\n      </FormControl>\n    </Box>\n  );\n}\n',moduleTS:"./ComposedTextField.js",rawTS:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport FilledInput from \'@mui/material/FilledInput\';\nimport FormControl from \'@mui/material/FormControl\';\nimport FormHelperText from \'@mui/material/FormHelperText\';\nimport Input from \'@mui/material/Input\';\nimport InputLabel from \'@mui/material/InputLabel\';\nimport OutlinedInput from \'@mui/material/OutlinedInput\';\n\nexport default function ComposedTextField() {\n  const [name, setName] = React.useState(\'Composed TextField\');\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n  };\n\n  return (\n    <Box\n      component="form"\n      sx={{\n        \'& > :not(style)\': { m: 1 },\n      }}\n      noValidate\n      autoComplete="off"\n    >\n      <FormControl variant="standard">\n        <InputLabel htmlFor="component-simple">Name</InputLabel>\n        <Input id="component-simple" value={name} onChange={handleChange} />\n      </FormControl>\n      <FormControl variant="standard">\n        <InputLabel htmlFor="component-helper">Name</InputLabel>\n        <Input\n          id="component-helper"\n          value={name}\n          onChange={handleChange}\n          aria-describedby="component-helper-text"\n        />\n        <FormHelperText id="component-helper-text">\n          Some important helper text\n        </FormHelperText>\n      </FormControl>\n      <FormControl disabled variant="standard">\n        <InputLabel htmlFor="component-disabled">Name</InputLabel>\n        <Input id="component-disabled" value={name} onChange={handleChange} />\n        <FormHelperText>Disabled</FormHelperText>\n      </FormControl>\n      <FormControl error variant="standard">\n        <InputLabel htmlFor="component-error">Name</InputLabel>\n        <Input\n          id="component-error"\n          value={name}\n          onChange={handleChange}\n          aria-describedby="component-error-text"\n        />\n        <FormHelperText id="component-error-text">Error</FormHelperText>\n      </FormControl>\n      <FormControl>\n        <InputLabel htmlFor="component-outlined">Name</InputLabel>\n        <OutlinedInput\n          id="component-outlined"\n          value={name}\n          onChange={handleChange}\n          label="Name"\n        />\n      </FormControl>\n      <FormControl variant="filled">\n        <InputLabel htmlFor="component-filled">Name</InputLabel>\n        <FilledInput id="component-filled" value={name} onChange={handleChange} />\n      </FormControl>\n    </Box>\n  );\n}\n'},"pages/components/text-fields/Inputs.js":{module:"./Inputs.js",raw:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Input from '@mui/material/Input';\n\nconst ariaLabel = { 'aria-label': 'description' };\n\nexport default function Inputs() {\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1 },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <Input defaultValue=\"Hello world\" inputProps={ariaLabel} />\n      <Input placeholder=\"Placeholder\" inputProps={ariaLabel} />\n      <Input disabled defaultValue=\"Disabled\" inputProps={ariaLabel} />\n      <Input defaultValue=\"Error\" error inputProps={ariaLabel} />\n    </Box>\n  );\n}\n",jsxPreview:'<Input defaultValue="Hello world" inputProps={ariaLabel} />\n<Input placeholder="Placeholder" inputProps={ariaLabel} />\n<Input disabled defaultValue="Disabled" inputProps={ariaLabel} />\n<Input defaultValue="Error" error inputProps={ariaLabel} />',moduleTS:"./Inputs.js",rawTS:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Input from '@mui/material/Input';\n\nconst ariaLabel = { 'aria-label': 'description' };\n\nexport default function Inputs() {\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1 },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <Input defaultValue=\"Hello world\" inputProps={ariaLabel} />\n      <Input placeholder=\"Placeholder\" inputProps={ariaLabel} />\n      <Input disabled defaultValue=\"Disabled\" inputProps={ariaLabel} />\n      <Input defaultValue=\"Error\" error inputProps={ariaLabel} />\n    </Box>\n  );\n}\n"},"pages/components/text-fields/ColorTextFields.js":{module:"./ColorTextFields.js",raw:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport TextField from \'@mui/material/TextField\';\n\nexport default function ColorTextFields() {\n  return (\n    <Box\n      component="form"\n      sx={{\n        \'& > :not(style)\': { m: 1, width: \'25ch\' },\n      }}\n      noValidate\n      autoComplete="off"\n    >\n      <TextField label="Outlined secondary" color="secondary" focused />\n      <TextField label="Filled success" variant="filled" color="success" focused />\n      <TextField\n        label="Standard warning"\n        variant="standard"\n        color="warning"\n        focused\n      />\n    </Box>\n  );\n}\n',jsxPreview:'<TextField label="Outlined secondary" color="secondary" focused />\n<TextField label="Filled success" variant="filled" color="success" focused />\n<TextField\n  label="Standard warning"\n  variant="standard"\n  color="warning"\n  focused\n/>',moduleTS:"./ColorTextFields.js",rawTS:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport TextField from \'@mui/material/TextField\';\n\nexport default function ColorTextFields() {\n  return (\n    <Box\n      component="form"\n      sx={{\n        \'& > :not(style)\': { m: 1, width: \'25ch\' },\n      }}\n      noValidate\n      autoComplete="off"\n    >\n      <TextField label="Outlined secondary" color="secondary" focused />\n      <TextField label="Filled success" variant="filled" color="success" focused />\n      <TextField\n        label="Standard warning"\n        variant="standard"\n        color="warning"\n        focused\n      />\n    </Box>\n  );\n}\n'},"pages/components/text-fields/CustomizedInputs.js":{module:"./CustomizedInputs.js",raw:"import * as React from 'react';\nimport { alpha, styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport TextField from '@mui/material/TextField';\nimport FormControl from '@mui/material/FormControl';\n\nconst CssTextField = styled(TextField)({\n  '& label.Mui-focused': {\n    color: 'green',\n  },\n  '& .MuiInput-underline:after': {\n    borderBottomColor: 'green',\n  },\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: 'red',\n    },\n    '&:hover fieldset': {\n      borderColor: 'yellow',\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: 'green',\n    },\n  },\n});\n\nconst BootstrapInput = styled(InputBase)(({ theme }) => ({\n  'label + &': {\n    marginTop: theme.spacing(3),\n  },\n  '& .MuiInputBase-input': {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.mode === 'light' ? '#fcfcfb' : '#2b2b2b',\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    padding: '10px 12px',\n    transition: theme.transitions.create([\n      'border-color',\n      'background-color',\n      'box-shadow',\n    ]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst RedditTextField = styled((props) => (\n  <TextField InputProps={{ disableUnderline: true }} {...props} />\n))(({ theme }) => ({\n  '& .MuiFilledInput-root': {\n    border: '1px solid #e2e2e1',\n    overflow: 'hidden',\n    borderRadius: 4,\n    backgroundColor: theme.palette.mode === 'light' ? '#fcfcfb' : '#2b2b2b',\n    transition: theme.transitions.create([\n      'border-color',\n      'background-color',\n      'box-shadow',\n    ]),\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n    '&.Mui-focused': {\n      backgroundColor: 'transparent',\n      boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst ValidationTextField = styled(TextField)({\n  '& input:valid + fieldset': {\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  '& input:invalid + fieldset': {\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n  '& input:valid:focus + fieldset': {\n    borderLeftWidth: 6,\n    padding: '4px !important', // override inline-style\n  },\n});\n\nexport default function CustomizedInputs() {\n  return (\n    <Box\n      component=\"form\"\n      noValidate\n      sx={{\n        display: 'grid',\n        gridTemplateColumns: { sm: '1fr 1fr' },\n        gap: 2,\n      }}\n    >\n      <FormControl variant=\"standard\">\n        <InputLabel shrink htmlFor=\"bootstrap-input\">\n          Bootstrap\n        </InputLabel>\n        <BootstrapInput defaultValue=\"react-bootstrap\" id=\"bootstrap-input\" />\n      </FormControl>\n      <RedditTextField\n        label=\"Reddit\"\n        defaultValue=\"react-reddit\"\n        id=\"reddit-input\"\n        variant=\"filled\"\n        style={{ marginTop: 11 }}\n      />\n      <CssTextField label=\"Custom CSS\" id=\"custom-css-outlined-input\" />\n      <ValidationTextField\n        label=\"CSS validation style\"\n        required\n        variant=\"outlined\"\n        defaultValue=\"Success\"\n        id=\"validation-outlined-input\"\n      />\n    </Box>\n  );\n}\n",moduleTS:"./CustomizedInputs.js",rawTS:"import * as React from 'react';\nimport { alpha, styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport FormControl from '@mui/material/FormControl';\nimport { OutlinedInputProps } from '@mui/material/OutlinedInput';\n\nconst CssTextField = styled(TextField)({\n  '& label.Mui-focused': {\n    color: 'green',\n  },\n  '& .MuiInput-underline:after': {\n    borderBottomColor: 'green',\n  },\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: 'red',\n    },\n    '&:hover fieldset': {\n      borderColor: 'yellow',\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: 'green',\n    },\n  },\n});\n\nconst BootstrapInput = styled(InputBase)(({ theme }) => ({\n  'label + &': {\n    marginTop: theme.spacing(3),\n  },\n  '& .MuiInputBase-input': {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.mode === 'light' ? '#fcfcfb' : '#2b2b2b',\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    padding: '10px 12px',\n    transition: theme.transitions.create([\n      'border-color',\n      'background-color',\n      'box-shadow',\n    ]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst RedditTextField = styled((props: TextFieldProps) => (\n  <TextField\n    InputProps={{ disableUnderline: true } as Partial<OutlinedInputProps>}\n    {...props}\n  />\n))(({ theme }) => ({\n  '& .MuiFilledInput-root': {\n    border: '1px solid #e2e2e1',\n    overflow: 'hidden',\n    borderRadius: 4,\n    backgroundColor: theme.palette.mode === 'light' ? '#fcfcfb' : '#2b2b2b',\n    transition: theme.transitions.create([\n      'border-color',\n      'background-color',\n      'box-shadow',\n    ]),\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n    '&.Mui-focused': {\n      backgroundColor: 'transparent',\n      boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst ValidationTextField = styled(TextField)({\n  '& input:valid + fieldset': {\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  '& input:invalid + fieldset': {\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n  '& input:valid:focus + fieldset': {\n    borderLeftWidth: 6,\n    padding: '4px !important', // override inline-style\n  },\n});\n\nexport default function CustomizedInputs() {\n  return (\n    <Box\n      component=\"form\"\n      noValidate\n      sx={{\n        display: 'grid',\n        gridTemplateColumns: { sm: '1fr 1fr' },\n        gap: 2,\n      }}\n    >\n      <FormControl variant=\"standard\">\n        <InputLabel shrink htmlFor=\"bootstrap-input\">\n          Bootstrap\n        </InputLabel>\n        <BootstrapInput defaultValue=\"react-bootstrap\" id=\"bootstrap-input\" />\n      </FormControl>\n      <RedditTextField\n        label=\"Reddit\"\n        defaultValue=\"react-reddit\"\n        id=\"reddit-input\"\n        variant=\"filled\"\n        style={{ marginTop: 11 }}\n      />\n      <CssTextField label=\"Custom CSS\" id=\"custom-css-outlined-input\" />\n      <ValidationTextField\n        label=\"CSS validation style\"\n        required\n        variant=\"outlined\"\n        defaultValue=\"Success\"\n        id=\"validation-outlined-input\"\n      />\n    </Box>\n  );\n}\n"},"pages/components/text-fields/CustomizedInputBase.js":{module:"./CustomizedInputBase.js",raw:"import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport DirectionsIcon from '@mui/icons-material/Directions';\n\nexport default function CustomizedInputBase() {\n  return (\n    <Paper\n      component=\"form\"\n      sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: 400 }}\n    >\n      <IconButton sx={{ p: '10px' }} aria-label=\"menu\">\n        <MenuIcon />\n      </IconButton>\n      <InputBase\n        sx={{ ml: 1, flex: 1 }}\n        placeholder=\"Search Google Maps\"\n        inputProps={{ 'aria-label': 'search google maps' }}\n      />\n      <IconButton type=\"submit\" sx={{ p: '10px' }} aria-label=\"search\">\n        <SearchIcon />\n      </IconButton>\n      <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n      <IconButton color=\"primary\" sx={{ p: '10px' }} aria-label=\"directions\">\n        <DirectionsIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n",moduleTS:"./CustomizedInputBase.js",rawTS:"import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport DirectionsIcon from '@mui/icons-material/Directions';\n\nexport default function CustomizedInputBase() {\n  return (\n    <Paper\n      component=\"form\"\n      sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: 400 }}\n    >\n      <IconButton sx={{ p: '10px' }} aria-label=\"menu\">\n        <MenuIcon />\n      </IconButton>\n      <InputBase\n        sx={{ ml: 1, flex: 1 }}\n        placeholder=\"Search Google Maps\"\n        inputProps={{ 'aria-label': 'search google maps' }}\n      />\n      <IconButton type=\"submit\" sx={{ p: '10px' }} aria-label=\"search\">\n        <SearchIcon />\n      </IconButton>\n      <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n      <IconButton color=\"primary\" sx={{ p: '10px' }} aria-label=\"directions\">\n        <DirectionsIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n"},"pages/components/text-fields/UseFormControl.js":{module:"./UseFormControl.js",raw:"import * as React from 'react';\nimport FormControl, { useFormControl } from '@mui/material/FormControl';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport Box from '@mui/material/Box';\nimport FormHelperText from '@mui/material/FormHelperText';\n\nfunction MyFormHelperText() {\n  const { focused } = useFormControl() || {};\n\n  const helperText = React.useMemo(() => {\n    if (focused) {\n      return 'This field is being focused';\n    }\n\n    return 'Helper text';\n  }, [focused]);\n\n  return <FormHelperText>{helperText}</FormHelperText>;\n}\n\nexport default function UseFormControl() {\n  return (\n    <Box component=\"form\" noValidate autoComplete=\"off\">\n      <FormControl sx={{ width: '25ch' }}>\n        <OutlinedInput placeholder=\"Please enter text\" />\n        <MyFormHelperText />\n      </FormControl>\n    </Box>\n  );\n}\n",jsxPreview:"<FormControl sx={{ width: '25ch' }}>\n  <OutlinedInput placeholder=\"Please enter text\" />\n  <MyFormHelperText />\n</FormControl>",moduleTS:"./UseFormControl.js",rawTS:"import * as React from 'react';\nimport FormControl, { useFormControl } from '@mui/material/FormControl';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport Box from '@mui/material/Box';\nimport FormHelperText from '@mui/material/FormHelperText';\n\nfunction MyFormHelperText() {\n  const { focused } = useFormControl() || {};\n\n  const helperText = React.useMemo(() => {\n    if (focused) {\n      return 'This field is being focused';\n    }\n\n    return 'Helper text';\n  }, [focused]);\n\n  return <FormHelperText>{helperText}</FormHelperText>;\n}\n\nexport default function UseFormControl() {\n  return (\n    <Box component=\"form\" noValidate autoComplete=\"off\">\n      <FormControl sx={{ width: '25ch' }}>\n        <OutlinedInput placeholder=\"Please enter text\" />\n        <MyFormHelperText />\n      </FormControl>\n    </Box>\n  );\n}\n"},"pages/components/text-fields/HelperTextMisaligned.js":{module:"./HelperTextMisaligned.js",raw:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport default function HelperTextMisaligned() {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        '& > :not(style)': { m: 1 },\n      }}\n    >\n      <TextField\n        helperText=\"Please enter your name\"\n        id=\"demo-helper-text-misaligned\"\n        label=\"Name\"\n      />\n      <TextField id=\"demo-helper-text-misaligned-no-helper\" label=\"Name\" />\n    </Box>\n  );\n}\n",jsxPreview:'<TextField\n  helperText="Please enter your name"\n  id="demo-helper-text-misaligned"\n  label="Name"\n/>\n<TextField id="demo-helper-text-misaligned-no-helper" label="Name" />',moduleTS:"./HelperTextMisaligned.js",rawTS:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport default function HelperTextMisaligned() {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        '& > :not(style)': { m: 1 },\n      }}\n    >\n      <TextField\n        helperText=\"Please enter your name\"\n        id=\"demo-helper-text-misaligned\"\n        label=\"Name\"\n      />\n      <TextField id=\"demo-helper-text-misaligned-no-helper\" label=\"Name\" />\n    </Box>\n  );\n}\n"},"pages/components/text-fields/HelperTextAligned.js":{module:"./HelperTextAligned.js",raw:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport default function HelperTextAligned() {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        '& > :not(style)': { m: 1 },\n      }}\n    >\n      <TextField\n        helperText=\"Please enter your name\"\n        id=\"demo-helper-text-aligned\"\n        label=\"Name\"\n      />\n      <TextField\n        helperText=\" \"\n        id=\"demo-helper-text-aligned-no-helper\"\n        label=\"Name\"\n      />\n    </Box>\n  );\n}\n",jsxPreview:'<TextField\n  helperText="Please enter your name"\n  id="demo-helper-text-aligned"\n  label="Name"\n/>\n<TextField\n  helperText=" "\n  id="demo-helper-text-aligned-no-helper"\n  label="Name"\n/>',moduleTS:"./HelperTextAligned.js",rawTS:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport default function HelperTextAligned() {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        '& > :not(style)': { m: 1 },\n      }}\n    >\n      <TextField\n        helperText=\"Please enter your name\"\n        id=\"demo-helper-text-aligned\"\n        label=\"Name\"\n      />\n      <TextField\n        helperText=\" \"\n        id=\"demo-helper-text-aligned-no-helper\"\n        label=\"Name\"\n      />\n    </Box>\n  );\n}\n"},"pages/components/text-fields/FormattedInputs.js":{module:"./FormattedInputs.js",raw:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { IMaskInput } from 'react-imask';\nimport NumberFormat from 'react-number-format';\nimport Box from '@mui/material/Box';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport TextField from '@mui/material/TextField';\nimport FormControl from '@mui/material/FormControl';\n\nconst TextMaskCustom = React.forwardRef(function TextMaskCustom(props, ref) {\n  const { onChange, ...other } = props;\n  return (\n    <IMaskInput\n      {...other}\n      mask=\"(#00) 000-0000\"\n      definitions={{\n        '#': /[1-9]/,\n      }}\n      inputRef={ref}\n      onAccept={(value) => onChange({ target: { name: props.name, value } })}\n      overwrite\n    />\n  );\n});\n\nTextMaskCustom.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst NumberFormatCustom = React.forwardRef(function NumberFormatCustom(props, ref) {\n  const { onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={ref}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"$\"\n    />\n  );\n});\n\nNumberFormatCustom.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default function FormattedInputs() {\n  const [values, setValues] = React.useState({\n    textmask: '(100) 000-0000',\n    numberformat: '1320',\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return (\n    <Box\n      sx={{\n        '& > :not(style)': {\n          m: 1,\n        },\n      }}\n    >\n      <FormControl variant=\"standard\">\n        <InputLabel htmlFor=\"formatted-text-mask-input\">react-imask</InputLabel>\n        <Input\n          value={values.textmask}\n          onChange={handleChange}\n          name=\"textmask\"\n          id=\"formatted-text-mask-input\"\n          inputComponent={TextMaskCustom}\n        />\n      </FormControl>\n      <TextField\n        label=\"react-number-format\"\n        value={values.numberformat}\n        onChange={handleChange}\n        name=\"numberformat\"\n        id=\"formatted-numberformat-input\"\n        InputProps={{\n          inputComponent: NumberFormatCustom,\n        }}\n        variant=\"standard\"\n      />\n    </Box>\n  );\n}\n",moduleTS:"./FormattedInputs.js",rawTS:"import * as React from 'react';\nimport { IMaskInput } from 'react-imask';\nimport NumberFormat from 'react-number-format';\nimport Box from '@mui/material/Box';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport TextField from '@mui/material/TextField';\nimport FormControl from '@mui/material/FormControl';\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nconst TextMaskCustom = React.forwardRef<HTMLElement, CustomProps>(\n  function TextMaskCustom(props, ref) {\n    const { onChange, ...other } = props;\n    return (\n      <IMaskInput\n        {...other}\n        mask=\"(#00) 000-0000\"\n        definitions={{\n          '#': /[1-9]/,\n        }}\n        inputRef={ref}\n        onAccept={(value: any) => onChange({ target: { name: props.name, value } })}\n        overwrite\n      />\n    );\n  },\n);\n\nconst NumberFormatCustom = React.forwardRef<NumberFormat, CustomProps>(\n  function NumberFormatCustom(props, ref) {\n    const { onChange, ...other } = props;\n\n    return (\n      <NumberFormat\n        {...other}\n        getInputRef={ref}\n        onValueChange={(values) => {\n          onChange({\n            target: {\n              name: props.name,\n              value: values.value,\n            },\n          });\n        }}\n        thousandSeparator\n        isNumericString\n        prefix=\"$\"\n      />\n    );\n  },\n);\n\ninterface State {\n  textmask: string;\n  numberformat: string;\n}\n\nexport default function FormattedInputs() {\n  const [values, setValues] = React.useState<State>({\n    textmask: '(100) 000-0000',\n    numberformat: '1320',\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return (\n    <Box\n      sx={{\n        '& > :not(style)': {\n          m: 1,\n        },\n      }}\n    >\n      <FormControl variant=\"standard\">\n        <InputLabel htmlFor=\"formatted-text-mask-input\">react-imask</InputLabel>\n        <Input\n          value={values.textmask}\n          onChange={handleChange}\n          name=\"textmask\"\n          id=\"formatted-text-mask-input\"\n          inputComponent={TextMaskCustom as any}\n        />\n      </FormControl>\n      <TextField\n        label=\"react-number-format\"\n        value={values.numberformat}\n        onChange={handleChange}\n        name=\"numberformat\"\n        id=\"formatted-numberformat-input\"\n        InputProps={{\n          inputComponent: NumberFormatCustom as any,\n        }}\n        variant=\"standard\"\n      />\n    </Box>\n  );\n}\n"},"pages/components/text-fields/UseInput.js":{module:"./UseInput.js",raw:"import * as React from 'react';\nimport { useInput } from '@mui/base';\nimport { styled } from '@mui/system';\n\nconst blue = {\n  200: '#80BFFF',\n  400: '#3399FF',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E7EBF0',\n  200: '#E0E3E7',\n  300: '#CDD2D7',\n  400: '#B2BAC2',\n  500: '#A0AAB4',\n  600: '#6F7E8C',\n  700: '#3E5060',\n  800: '#2D3843',\n  900: '#1A2027',\n};\n\nconst StyledInputElement = styled('input')(\n  ({ theme }) => `\n  width: 320px;\n  font-size: 0.875rem;\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : grey[50]};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[800] : grey[300]};\n  border-radius: 8px;\n  padding: 12px 12px;\n  transition: all 150ms ease;\n\n  &:hover {\n    background: ${theme.palette.mode === 'dark' ? null : grey[100]};\n    border-color: ${theme.palette.mode === 'dark' ? grey[600] : grey[400]};\n  }\n\n  &:focus {\n    outline: 2px solid ${theme.palette.mode === 'dark' ? blue[400] : blue[200]};\n  }\n`,\n);\n\nconst CustomInput = React.forwardRef(function CustomInput(props, ref) {\n  const { getRootProps, getInputProps } = useInput(props, ref);\n\n  return (\n    <div {...getRootProps()}>\n      <StyledInputElement {...props} {...getInputProps()} />\n    </div>\n  );\n});\n\nexport default function UseInput() {\n  return <CustomInput aria-label=\"Demo input\" placeholder=\"Type something...\" />;\n}\n",jsxPreview:'<CustomInput aria-label="Demo input" placeholder="Type something..." />',moduleTS:"./UseInput.js",rawTS:"import * as React from 'react';\nimport { useInput } from '@mui/base';\nimport { styled } from '@mui/system';\n\nconst blue = {\n  200: '#80BFFF',\n  400: '#3399FF',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E7EBF0',\n  200: '#E0E3E7',\n  300: '#CDD2D7',\n  400: '#B2BAC2',\n  500: '#A0AAB4',\n  600: '#6F7E8C',\n  700: '#3E5060',\n  800: '#2D3843',\n  900: '#1A2027',\n};\n\nconst StyledInputElement = styled('input')(\n  ({ theme }) => `\n  width: 320px;\n  font-size: 0.875rem;\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : grey[50]};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[800] : grey[300]};\n  border-radius: 8px;\n  padding: 12px 12px;\n  transition: all 150ms ease;\n\n  &:hover {\n    background: ${theme.palette.mode === 'dark' ? null : grey[100]};\n    border-color: ${theme.palette.mode === 'dark' ? grey[600] : grey[400]};\n  }\n\n  &:focus {\n    outline: 2px solid ${theme.palette.mode === 'dark' ? blue[400] : blue[200]};\n  }\n`,\n);\n\nconst CustomInput = React.forwardRef(function CustomInput(\n  props: React.InputHTMLAttributes<HTMLInputElement>,\n  ref: React.ForwardedRef<HTMLInputElement>,\n) {\n  const { getRootProps, getInputProps } = useInput(props, ref);\n\n  return (\n    <div {...getRootProps()}>\n      <StyledInputElement {...props} {...getInputProps()} />\n    </div>\n  );\n});\n\nexport default function UseInput() {\n  return <CustomInput aria-label=\"Demo input\" placeholder=\"Type something...\" />;\n}\n"},"pages/components/text-fields/UnstyledInput.js":{module:"./UnstyledInput.js",raw:"import * as React from 'react';\nimport InputUnstyled from '@mui/base/InputUnstyled';\nimport { styled } from '@mui/system';\n\nconst blue = {\n  200: '#80BFFF',\n  400: '#3399FF',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E7EBF0',\n  200: '#E0E3E7',\n  300: '#CDD2D7',\n  400: '#B2BAC2',\n  500: '#A0AAB4',\n  600: '#6F7E8C',\n  700: '#3E5060',\n  800: '#2D3843',\n  900: '#1A2027',\n};\n\nconst StyledInputElement = styled('input')(\n  ({ theme }) => `\n  width: 320px;\n  font-size: 0.875rem;\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : grey[50]};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[800] : grey[300]};\n  border-radius: 8px;\n  padding: 12px 12px;\n  transition: all 150ms ease;\n\n  &:hover {\n    background: ${theme.palette.mode === 'dark' ? null : grey[100]};\n    border-color: ${theme.palette.mode === 'dark' ? grey[600] : grey[400]};\n  }\n\n  &:focus {\n    outline: 2px solid ${theme.palette.mode === 'dark' ? blue[400] : blue[200]};\n  }\n`,\n);\n\nconst CustomInput = React.forwardRef(function CustomInput(props, ref) {\n  return (\n    <InputUnstyled components={{ Input: StyledInputElement }} {...props} ref={ref} />\n  );\n});\n\nexport default function UnstyledInput() {\n  return <CustomInput aria-label=\"Demo input\" placeholder=\"Type something...\" />;\n}\n",jsxPreview:'<CustomInput aria-label="Demo input" placeholder="Type something..." />',moduleTS:"./UnstyledInput.js",rawTS:"import * as React from 'react';\nimport InputUnstyled, { InputUnstyledProps } from '@mui/base/InputUnstyled';\nimport { styled } from '@mui/system';\n\nconst blue = {\n  200: '#80BFFF',\n  400: '#3399FF',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E7EBF0',\n  200: '#E0E3E7',\n  300: '#CDD2D7',\n  400: '#B2BAC2',\n  500: '#A0AAB4',\n  600: '#6F7E8C',\n  700: '#3E5060',\n  800: '#2D3843',\n  900: '#1A2027',\n};\n\nconst StyledInputElement = styled('input')(\n  ({ theme }) => `\n  width: 320px;\n  font-size: 0.875rem;\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : grey[50]};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[800] : grey[300]};\n  border-radius: 8px;\n  padding: 12px 12px;\n  transition: all 150ms ease;\n\n  &:hover {\n    background: ${theme.palette.mode === 'dark' ? null : grey[100]};\n    border-color: ${theme.palette.mode === 'dark' ? grey[600] : grey[400]};\n  }\n\n  &:focus {\n    outline: 2px solid ${theme.palette.mode === 'dark' ? blue[400] : blue[200]};\n  }\n`,\n);\n\nconst CustomInput = React.forwardRef(function CustomInput(\n  props: InputUnstyledProps,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  return (\n    <InputUnstyled components={{ Input: StyledInputElement }} {...props} ref={ref} />\n  );\n});\n\nexport default function UnstyledInput() {\n  return <CustomInput aria-label=\"Demo input\" placeholder=\"Type something...\" />;\n}\n"}},Tt={"./BasicTextFields.js":function(){return(0,S.jsxs)(C.Z,{component:"form",sx:{"& > :not(style)":{m:1,width:"25ch"}},noValidate:!0,autoComplete:"off",children:[a||(a=(0,S.jsx)(j.Z,{id:"outlined-basic",label:"Outlined",variant:"outlined"})),o||(o=(0,S.jsx)(j.Z,{id:"filled-basic",label:"Filled",variant:"filled"})),s||(s=(0,S.jsx)(j.Z,{id:"standard-basic",label:"Standard",variant:"standard"}))]})},"./FormPropsTextFields.js":function(){return(0,S.jsxs)(C.Z,{component:"form",sx:{"& .MuiTextField-root":{m:1,width:"25ch"}},noValidate:!0,autoComplete:"off",children:[(0,S.jsxs)("div",{children:[l||(l=(0,S.jsx)(j.Z,{required:!0,id:"outlined-required",label:"Required",defaultValue:"Hello World"})),i||(i=(0,S.jsx)(j.Z,{disabled:!0,id:"outlined-disabled",label:"Disabled",defaultValue:"Hello World"})),r||(r=(0,S.jsx)(j.Z,{id:"outlined-password-input",label:"Password",type:"password",autoComplete:"current-password"})),(0,S.jsx)(j.Z,{id:"outlined-read-only-input",label:"Read Only",defaultValue:"Hello World",InputProps:{readOnly:!0}}),(0,S.jsx)(j.Z,{id:"outlined-number",label:"Number",type:"number",InputLabelProps:{shrink:!0}}),d||(d=(0,S.jsx)(j.Z,{id:"outlined-search",label:"Search field",type:"search"})),p||(p=(0,S.jsx)(j.Z,{id:"outlined-helperText",label:"Helper text",defaultValue:"Default Value",helperText:"Some important text"}))]}),(0,S.jsxs)("div",{children:[c||(c=(0,S.jsx)(j.Z,{required:!0,id:"filled-required",label:"Required",defaultValue:"Hello World",variant:"filled"})),u||(u=(0,S.jsx)(j.Z,{disabled:!0,id:"filled-disabled",label:"Disabled",defaultValue:"Hello World",variant:"filled"})),m||(m=(0,S.jsx)(j.Z,{id:"filled-password-input",label:"Password",type:"password",autoComplete:"current-password",variant:"filled"})),(0,S.jsx)(j.Z,{id:"filled-read-only-input",label:"Read Only",defaultValue:"Hello World",InputProps:{readOnly:!0},variant:"filled"}),(0,S.jsx)(j.Z,{id:"filled-number",label:"Number",type:"number",InputLabelProps:{shrink:!0},variant:"filled"}),h||(h=(0,S.jsx)(j.Z,{id:"filled-search",label:"Search field",type:"search",variant:"filled"})),f||(f=(0,S.jsx)(j.Z,{id:"filled-helperText",label:"Helper text",defaultValue:"Default Value",helperText:"Some important text",variant:"filled"}))]}),(0,S.jsxs)("div",{children:[x||(x=(0,S.jsx)(j.Z,{required:!0,id:"standard-required",label:"Required",defaultValue:"Hello World",variant:"standard"})),g||(g=(0,S.jsx)(j.Z,{disabled:!0,id:"standard-disabled",label:"Disabled",defaultValue:"Hello World",variant:"standard"})),b||(b=(0,S.jsx)(j.Z,{id:"standard-password-input",label:"Password",type:"password",autoComplete:"current-password",variant:"standard"})),(0,S.jsx)(j.Z,{id:"standard-read-only-input",label:"Read Only",defaultValue:"Hello World",InputProps:{readOnly:!0},variant:"standard"}),(0,S.jsx)(j.Z,{id:"standard-number",label:"Number",type:"number",InputLabelProps:{shrink:!0},variant:"standard"}),k||(k=(0,S.jsx)(j.Z,{id:"standard-search",label:"Search field",type:"search",variant:"standard"})),v||(v=(0,S.jsx)(j.Z,{id:"standard-helperText",label:"Helper text",defaultValue:"Default Value",helperText:"Some important text",variant:"standard"}))]})]})},"./ValidationTextFields.js":function(){return(0,S.jsxs)(C.Z,{component:"form",sx:{"& .MuiTextField-root":{m:1,width:"25ch"}},noValidate:!0,autoComplete:"off",children:[y||(y=(0,S.jsxs)("div",{children:[(0,S.jsx)(j.Z,{error:!0,id:"outlined-error",label:"Error",defaultValue:"Hello World"}),(0,S.jsx)(j.Z,{error:!0,id:"outlined-error-helper-text",label:"Error",defaultValue:"Hello World",helperText:"Incorrect entry."})]})),F||(F=(0,S.jsxs)("div",{children:[(0,S.jsx)(j.Z,{error:!0,id:"filled-error",label:"Error",defaultValue:"Hello World",variant:"filled"}),(0,S.jsx)(j.Z,{error:!0,id:"filled-error-helper-text",label:"Error",defaultValue:"Hello World",helperText:"Incorrect entry.",variant:"filled"})]})),T||(T=(0,S.jsxs)("div",{children:[(0,S.jsx)(j.Z,{error:!0,id:"standard-error",label:"Error",defaultValue:"Hello World",variant:"standard"}),(0,S.jsx)(j.Z,{error:!0,id:"standard-error-helper-text",label:"Error",defaultValue:"Hello World",helperText:"Incorrect entry.",variant:"standard"})]}))]})},"./MultilineTextFields.js":function(){var n=I.useState("Controlled"),e=(0,R.Z)(n,2),t=e[0],a=e[1],o=function(n){a(n.target.value)};return(0,S.jsxs)(C.Z,{component:"form",sx:{"& .MuiTextField-root":{m:1,width:"25ch"}},noValidate:!0,autoComplete:"off",children:[(0,S.jsxs)("div",{children:[(0,S.jsx)(j.Z,{id:"outlined-multiline-flexible",label:"Multiline",multiline:!0,maxRows:4,value:t,onChange:o}),B||(B=(0,S.jsx)(j.Z,{id:"outlined-textarea",label:"Multiline Placeholder",placeholder:"Placeholder",multiline:!0})),P||(P=(0,S.jsx)(j.Z,{id:"outlined-multiline-static",label:"Multiline",multiline:!0,rows:4,defaultValue:"Default Value"}))]}),(0,S.jsxs)("div",{children:[(0,S.jsx)(j.Z,{id:"filled-multiline-flexible",label:"Multiline",multiline:!0,maxRows:4,value:t,onChange:o,variant:"filled"}),Z||(Z=(0,S.jsx)(j.Z,{id:"filled-textarea",label:"Multiline Placeholder",placeholder:"Placeholder",multiline:!0,variant:"filled"})),V||(V=(0,S.jsx)(j.Z,{id:"filled-multiline-static",label:"Multiline",multiline:!0,rows:4,defaultValue:"Default Value",variant:"filled"}))]}),(0,S.jsxs)("div",{children:[(0,S.jsx)(j.Z,{id:"standard-multiline-flexible",label:"Multiline",multiline:!0,maxRows:4,value:t,onChange:o,variant:"standard"}),A||(A=(0,S.jsx)(j.Z,{id:"standard-textarea",label:"Multiline Placeholder",placeholder:"Placeholder",multiline:!0,variant:"standard"})),M||(M=(0,S.jsx)(j.Z,{id:"standard-multiline-static",label:"Multiline",multiline:!0,rows:4,defaultValue:"Default Value",variant:"standard"}))]})]})},"./InputWithIcon.js":function(){return(0,S.jsxs)(C.Z,{sx:{"& > :not(style)":{m:1}},children:[z||(z=(0,S.jsxs)(W.Z,{variant:"standard",children:[(0,S.jsx)(U.Z,{htmlFor:"input-with-icon-adornment",children:"With a start adornment"}),(0,S.jsx)(q.Z,{id:"input-with-icon-adornment",startAdornment:(0,S.jsx)(E.Z,{position:"start",children:(0,S.jsx)(N.default,{})})})]})),(0,S.jsx)(j.Z,{id:"input-with-icon-textfield",label:"TextField",InputProps:{startAdornment:L||(L=(0,S.jsx)(E.Z,{position:"start",children:(0,S.jsx)(N.default,{})}))},variant:"standard"}),(0,S.jsxs)(C.Z,{sx:{display:"flex",alignItems:"flex-end"},children:[(0,S.jsx)(N.default,{sx:{color:"action.active",mr:1,my:.5}}),H||(H=(0,S.jsx)(j.Z,{id:"input-with-sx",label:"With sx",variant:"standard"}))]})]})},"./SelectTextFields.js":function(){var n=I.useState("EUR"),e=(0,R.Z)(n,2),t=e[0],a=e[1],o=function(n){a(n.target.value)};return(0,S.jsxs)(C.Z,{component:"form",sx:{"& .MuiTextField-root":{m:1,width:"25ch"}},noValidate:!0,autoComplete:"off",children:[(0,S.jsxs)("div",{children:[(0,S.jsx)(j.Z,{id:"outlined-select-currency",select:!0,label:"Select",value:t,onChange:o,helperText:"Please select your currency",children:O.map((function(n){return(0,S.jsx)(D.Z,{value:n.value,children:n.label},n.value)}))}),(0,S.jsx)(j.Z,{id:"outlined-select-currency-native",select:!0,label:"Native select",value:t,onChange:o,SelectProps:{native:!0},helperText:"Please select your currency",children:O.map((function(n){return(0,S.jsx)("option",{value:n.value,children:n.label},n.value)}))})]}),(0,S.jsxs)("div",{children:[(0,S.jsx)(j.Z,{id:"filled-select-currency",select:!0,label:"Select",value:t,onChange:o,helperText:"Please select your currency",variant:"filled",children:O.map((function(n){return(0,S.jsx)(D.Z,{value:n.value,children:n.label},n.value)}))}),(0,S.jsx)(j.Z,{id:"filled-select-currency-native",select:!0,label:"Native select",value:t,onChange:o,SelectProps:{native:!0},helperText:"Please select your currency",variant:"filled",children:O.map((function(n){return(0,S.jsx)("option",{value:n.value,children:n.label},n.value)}))})]}),(0,S.jsxs)("div",{children:[(0,S.jsx)(j.Z,{id:"standard-select-currency",select:!0,label:"Select",value:t,onChange:o,helperText:"Please select your currency",variant:"standard",children:O.map((function(n){return(0,S.jsx)(D.Z,{value:n.value,children:n.label},n.value)}))}),(0,S.jsx)(j.Z,{id:"standard-select-currency-native",select:!0,label:"Native select",value:t,onChange:o,SelectProps:{native:!0},helperText:"Please select your currency",variant:"standard",children:O.map((function(n){return(0,S.jsx)("option",{value:n.value,children:n.label},n.value)}))})]})]})},"./InputAdornments.js":function(){var n=I.useState({amount:"",password:"",weight:"",weightRange:"",showPassword:!1}),e=(0,R.Z)(n,2),t=e[0],a=e[1],o=function(n){return function(e){a((0,yn.Z)((0,yn.Z)({},t),{},(0,vn.Z)({},n,e.target.value)))}},s=function(){a((0,yn.Z)((0,yn.Z)({},t),{},{showPassword:!t.showPassword}))},l=function(n){n.preventDefault()};return(0,S.jsxs)(C.Z,{sx:{display:"flex",flexWrap:"wrap"},children:[(0,S.jsxs)("div",{children:[(0,S.jsx)(j.Z,{label:"With normal TextField",id:"outlined-start-adornment",sx:{m:1,width:"25ch"},InputProps:{startAdornment:$||($=(0,S.jsx)(E.Z,{position:"start",children:"kg"}))}}),(0,S.jsxs)(W.Z,{sx:{m:1,width:"25ch"},variant:"outlined",children:[(0,S.jsx)(In.Z,{id:"outlined-adornment-weight",value:t.weight,onChange:o("weight"),endAdornment:_||(_=(0,S.jsx)(E.Z,{position:"end",children:"kg"})),"aria-describedby":"outlined-weight-helper-text",inputProps:{"aria-label":"weight"}}),Y||(Y=(0,S.jsx)(wn.Z,{id:"outlined-weight-helper-text",children:"Weight"}))]}),(0,S.jsxs)(W.Z,{sx:{m:1,width:"25ch"},variant:"outlined",children:[G||(G=(0,S.jsx)(U.Z,{htmlFor:"outlined-adornment-password",children:"Password"})),(0,S.jsx)(In.Z,{id:"outlined-adornment-password",type:t.showPassword?"text":"password",value:t.password,onChange:o("password"),endAdornment:(0,S.jsx)(E.Z,{position:"end",children:(0,S.jsx)(Fn.Z,{"aria-label":"toggle password visibility",onClick:s,onMouseDown:l,edge:"end",children:t.showPassword?K||(K=(0,S.jsx)(jn.default,{})):J||(J=(0,S.jsx)(Cn.default,{}))})}),label:"Password"})]}),(0,S.jsxs)(W.Z,{fullWidth:!0,sx:{m:1},children:[X||(X=(0,S.jsx)(U.Z,{htmlFor:"outlined-adornment-amount",children:"Amount"})),(0,S.jsx)(In.Z,{id:"outlined-adornment-amount",value:t.amount,onChange:o("amount"),startAdornment:Q||(Q=(0,S.jsx)(E.Z,{position:"start",children:"$"})),label:"Amount"})]})]}),(0,S.jsxs)("div",{children:[(0,S.jsx)(j.Z,{label:"With normal TextField",id:"filled-start-adornment",sx:{m:1,width:"25ch"},InputProps:{startAdornment:nn||(nn=(0,S.jsx)(E.Z,{position:"start",children:"kg"}))},variant:"filled"}),(0,S.jsxs)(W.Z,{sx:{m:1,width:"25ch"},variant:"filled",children:[(0,S.jsx)(Tn.Z,{id:"filled-adornment-weight",value:t.weight,onChange:o("weight"),endAdornment:en||(en=(0,S.jsx)(E.Z,{position:"end",children:"kg"})),"aria-describedby":"filled-weight-helper-text",inputProps:{"aria-label":"weight"}}),tn||(tn=(0,S.jsx)(wn.Z,{id:"filled-weight-helper-text",children:"Weight"}))]}),(0,S.jsxs)(W.Z,{sx:{m:1,width:"25ch"},variant:"filled",children:[an||(an=(0,S.jsx)(U.Z,{htmlFor:"filled-adornment-password",children:"Password"})),(0,S.jsx)(Tn.Z,{id:"filled-adornment-password",type:t.showPassword?"text":"password",value:t.password,onChange:o("password"),endAdornment:(0,S.jsx)(E.Z,{position:"end",children:(0,S.jsx)(Fn.Z,{"aria-label":"toggle password visibility",onClick:s,onMouseDown:l,edge:"end",children:t.showPassword?on||(on=(0,S.jsx)(jn.default,{})):sn||(sn=(0,S.jsx)(Cn.default,{}))})})})]}),(0,S.jsxs)(W.Z,{fullWidth:!0,sx:{m:1},variant:"filled",children:[ln||(ln=(0,S.jsx)(U.Z,{htmlFor:"filled-adornment-amount",children:"Amount"})),(0,S.jsx)(Tn.Z,{id:"filled-adornment-amount",value:t.amount,onChange:o("amount"),startAdornment:rn||(rn=(0,S.jsx)(E.Z,{position:"start",children:"$"}))})]})]}),(0,S.jsxs)("div",{children:[(0,S.jsx)(j.Z,{label:"With normal TextField",id:"standard-start-adornment",sx:{m:1,width:"25ch"},InputProps:{startAdornment:dn||(dn=(0,S.jsx)(E.Z,{position:"start",children:"kg"}))},variant:"standard"}),(0,S.jsxs)(W.Z,{variant:"standard",sx:{m:1,mt:3,width:"25ch"},children:[(0,S.jsx)(q.Z,{id:"standard-adornment-weight",value:t.weight,onChange:o("weight"),endAdornment:pn||(pn=(0,S.jsx)(E.Z,{position:"end",children:"kg"})),"aria-describedby":"standard-weight-helper-text",inputProps:{"aria-label":"weight"}}),cn||(cn=(0,S.jsx)(wn.Z,{id:"standard-weight-helper-text",children:"Weight"}))]}),(0,S.jsxs)(W.Z,{sx:{m:1,width:"25ch"},variant:"standard",children:[un||(un=(0,S.jsx)(U.Z,{htmlFor:"standard-adornment-password",children:"Password"})),(0,S.jsx)(q.Z,{id:"standard-adornment-password",type:t.showPassword?"text":"password",value:t.password,onChange:o("password"),endAdornment:(0,S.jsx)(E.Z,{position:"end",children:(0,S.jsx)(Fn.Z,{"aria-label":"toggle password visibility",onClick:s,onMouseDown:l,children:t.showPassword?mn||(mn=(0,S.jsx)(jn.default,{})):hn||(hn=(0,S.jsx)(Cn.default,{}))})})})]}),(0,S.jsxs)(W.Z,{fullWidth:!0,sx:{m:1},variant:"standard",children:[fn||(fn=(0,S.jsx)(U.Z,{htmlFor:"standard-adornment-amount",children:"Amount"})),(0,S.jsx)(q.Z,{id:"standard-adornment-amount",value:t.amount,onChange:o("amount"),startAdornment:xn||(xn=(0,S.jsx)(E.Z,{position:"start",children:"$"}))})]})]})]})},"./TextFieldSizes.js":function(){return(0,S.jsxs)(C.Z,{component:"form",sx:{"& .MuiTextField-root":{m:1,width:"25ch"}},noValidate:!0,autoComplete:"off",children:[gn||(gn=(0,S.jsxs)("div",{children:[(0,S.jsx)(j.Z,{label:"Size",id:"outlined-size-small",defaultValue:"Small",size:"small"}),(0,S.jsx)(j.Z,{label:"Size",id:"outlined-size-normal",defaultValue:"Normal"})]})),bn||(bn=(0,S.jsxs)("div",{children:[(0,S.jsx)(j.Z,{label:"Size",id:"filled-size-small",defaultValue:"Small",variant:"filled",size:"small"}),(0,S.jsx)(j.Z,{label:"Size",id:"filled-size-normal",defaultValue:"Normal",variant:"filled"})]})),kn||(kn=(0,S.jsxs)("div",{children:[(0,S.jsx)(j.Z,{label:"Size",id:"standard-size-small",defaultValue:"Small",size:"small",variant:"standard"}),(0,S.jsx)(j.Z,{label:"Size",id:"standard-size-normal",defaultValue:"Normal",variant:"standard"})]}))]})},"./TextFieldHiddenLabel.js":function(){return(0,S.jsxs)(Xn.Z,{component:"form",sx:{width:"25ch"},spacing:2,noValidate:!0,autoComplete:"off",children:[Sn||(Sn=(0,S.jsx)(j.Z,{hiddenLabel:!0,id:"filled-hidden-label-small",defaultValue:"Small",variant:"filled",size:"small"})),Bn||(Bn=(0,S.jsx)(j.Z,{hiddenLabel:!0,id:"filled-hidden-label-normal",defaultValue:"Normal",variant:"filled"}))]})},"./FullWidthTextField.js":function(){return(0,S.jsx)(C.Z,{sx:{width:500,maxWidth:"100%"},children:Pn||(Pn=(0,S.jsx)(j.Z,{fullWidth:!0,label:"fullWidth",id:"fullWidth"}))})},"./LayoutTextFields.js":function(){return(0,S.jsxs)(C.Z,{sx:{display:"flex",flexDirection:"column","& .MuiTextField-root":{width:"25ch"}},children:[Zn||(Zn=(0,S.jsx)(Qn,{})),Vn||(Vn=(0,S.jsx)(j.Z,{label:'margin="none"',id:"margin-none"})),An||(An=(0,S.jsx)(Qn,{})),Mn||(Mn=(0,S.jsx)(j.Z,{label:'margin="dense"',id:"margin-dense",margin:"dense"})),Rn||(Rn=(0,S.jsx)(Qn,{})),zn||(zn=(0,S.jsx)(j.Z,{label:'margin="normal"',id:"margin-normal",margin:"normal"})),Ln||(Ln=(0,S.jsx)(Qn,{}))]})},"./StateTextFields.js":function(){var n=I.useState("Cat in the Hat"),e=(0,R.Z)(n,2),t=e[0],a=e[1];return(0,S.jsxs)(C.Z,{component:"form",sx:{"& > :not(style)":{m:1,width:"25ch"}},noValidate:!0,autoComplete:"off",children:[(0,S.jsx)(j.Z,{id:"outlined-name",label:"Name",value:t,onChange:function(n){a(n.target.value)}}),Hn||(Hn=(0,S.jsx)(j.Z,{id:"outlined-uncontrolled",label:"Uncontrolled",defaultValue:"foo"}))]})},"./ComposedTextField.js":function(){var n=I.useState("Composed TextField"),e=(0,R.Z)(n,2),t=e[0],a=e[1],o=function(n){a(n.target.value)};return(0,S.jsxs)(C.Z,{component:"form",sx:{"& > :not(style)":{m:1}},noValidate:!0,autoComplete:"off",children:[(0,S.jsxs)(W.Z,{variant:"standard",children:[qn||(qn=(0,S.jsx)(U.Z,{htmlFor:"component-simple",children:"Name"})),(0,S.jsx)(q.Z,{id:"component-simple",value:t,onChange:o})]}),(0,S.jsxs)(W.Z,{variant:"standard",children:[Un||(Un=(0,S.jsx)(U.Z,{htmlFor:"component-helper",children:"Name"})),(0,S.jsx)(q.Z,{id:"component-helper",value:t,onChange:o,"aria-describedby":"component-helper-text"}),En||(En=(0,S.jsx)(wn.Z,{id:"component-helper-text",children:"Some important helper text"}))]}),(0,S.jsxs)(W.Z,{disabled:!0,variant:"standard",children:[Wn||(Wn=(0,S.jsx)(U.Z,{htmlFor:"component-disabled",children:"Name"})),(0,S.jsx)(q.Z,{id:"component-disabled",value:t,onChange:o}),Nn||(Nn=(0,S.jsx)(wn.Z,{children:"Disabled"}))]}),(0,S.jsxs)(W.Z,{error:!0,variant:"standard",children:[Dn||(Dn=(0,S.jsx)(U.Z,{htmlFor:"component-error",children:"Name"})),(0,S.jsx)(q.Z,{id:"component-error",value:t,onChange:o,"aria-describedby":"component-error-text"}),On||(On=(0,S.jsx)(wn.Z,{id:"component-error-text",children:"Error"}))]}),(0,S.jsxs)(W.Z,{children:[$n||($n=(0,S.jsx)(U.Z,{htmlFor:"component-outlined",children:"Name"})),(0,S.jsx)(In.Z,{id:"component-outlined",value:t,onChange:o,label:"Name"})]}),(0,S.jsxs)(W.Z,{variant:"filled",children:[_n||(_n=(0,S.jsx)(U.Z,{htmlFor:"component-filled",children:"Name"})),(0,S.jsx)(Tn.Z,{id:"component-filled",value:t,onChange:o})]})]})},"./Inputs.js":function(){return(0,S.jsxs)(C.Z,{component:"form",sx:{"& > :not(style)":{m:1}},noValidate:!0,autoComplete:"off",children:[Yn||(Yn=(0,S.jsx)(q.Z,{defaultValue:"Hello world",inputProps:ae})),Gn||(Gn=(0,S.jsx)(q.Z,{placeholder:"Placeholder",inputProps:ae})),Kn||(Kn=(0,S.jsx)(q.Z,{disabled:!0,defaultValue:"Disabled",inputProps:ae})),Jn||(Jn=(0,S.jsx)(q.Z,{defaultValue:"Error",error:!0,inputProps:ae}))]})},"./ColorTextFields.js":function(){return(0,S.jsxs)(C.Z,{component:"form",sx:{"& > :not(style)":{m:1,width:"25ch"}},noValidate:!0,autoComplete:"off",children:[ne||(ne=(0,S.jsx)(j.Z,{label:"Outlined secondary",color:"secondary",focused:!0})),ee||(ee=(0,S.jsx)(j.Z,{label:"Filled success",variant:"filled",color:"success",focused:!0})),te||(te=(0,S.jsx)(j.Z,{label:"Standard warning",variant:"standard",color:"warning",focused:!0}))]})},"./CustomizedInputs.js":function(){return(0,S.jsxs)(C.Z,{component:"form",noValidate:!0,sx:{display:"grid",gridTemplateColumns:{sm:"1fr 1fr"},gap:2},children:[oe||(oe=(0,S.jsxs)(W.Z,{variant:"standard",children:[(0,S.jsx)(U.Z,{shrink:!0,htmlFor:"bootstrap-input",children:"Bootstrap"}),(0,S.jsx)(ce,{defaultValue:"react-bootstrap",id:"bootstrap-input"})]})),(0,S.jsx)(ue,{label:"Reddit",defaultValue:"react-reddit",id:"reddit-input",variant:"filled",style:{marginTop:11}}),se||(se=(0,S.jsx)(pe,{label:"Custom CSS",id:"custom-css-outlined-input"})),le||(le=(0,S.jsx)(me,{label:"CSS validation style",required:!0,variant:"outlined",defaultValue:"Success",id:"validation-outlined-input"}))]})},"./CustomizedInputBase.js":function(){return(0,S.jsxs)(ge.Z,{component:"form",sx:{p:"2px 4px",display:"flex",alignItems:"center",width:400},children:[(0,S.jsx)(Fn.Z,{sx:{p:"10px"},"aria-label":"menu",children:he||(he=(0,S.jsx)(ke.default,{}))}),(0,S.jsx)(de.ZP,{sx:{ml:1,flex:1},placeholder:"Search Google Maps",inputProps:{"aria-label":"search google maps"}}),(0,S.jsx)(Fn.Z,{type:"submit",sx:{p:"10px"},"aria-label":"search",children:fe||(fe=(0,S.jsx)(ve.default,{}))}),(0,S.jsx)(be.Z,{sx:{height:28,m:.5},orientation:"vertical"}),(0,S.jsx)(Fn.Z,{color:"primary",sx:{p:"10px"},"aria-label":"directions",children:xe||(xe=(0,S.jsx)(ye.default,{}))})]})},"./UseFormControl.js":function(){return(0,S.jsx)(C.Z,{component:"form",noValidate:!0,autoComplete:"off",children:(0,S.jsxs)(W.Z,{sx:{width:"25ch"},children:[Fe||(Fe=(0,S.jsx)(In.Z,{placeholder:"Please enter text"})),Te||(Te=(0,S.jsx)(Be,{}))]})})},"./HelperTextMisaligned.js":function(){return(0,S.jsxs)(C.Z,{sx:{display:"flex",alignItems:"center","& > :not(style)":{m:1}},children:[Ie||(Ie=(0,S.jsx)(j.Z,{helperText:"Please enter your name",id:"demo-helper-text-misaligned",label:"Name"})),we||(we=(0,S.jsx)(j.Z,{id:"demo-helper-text-misaligned-no-helper",label:"Name"}))]})},"./HelperTextAligned.js":function(){return(0,S.jsxs)(C.Z,{sx:{display:"flex",alignItems:"center","& > :not(style)":{m:1}},children:[Ce||(Ce=(0,S.jsx)(j.Z,{helperText:"Please enter your name",id:"demo-helper-text-aligned",label:"Name"})),je||(je=(0,S.jsx)(j.Z,{helperText:" ",id:"demo-helper-text-aligned-no-helper",label:"Name"}))]})},"./FormattedInputs.js":function(){var n=I.useState({textmask:"(100) 000-0000",numberformat:"1320"}),e=(0,R.Z)(n,2),t=e[0],a=e[1],o=function(n){a((0,yn.Z)((0,yn.Z)({},t),{},(0,vn.Z)({},n.target.name,n.target.value)))};return(0,S.jsxs)(C.Z,{sx:{"& > :not(style)":{m:1}},children:[(0,S.jsxs)(W.Z,{variant:"standard",children:[Pe||(Pe=(0,S.jsx)(U.Z,{htmlFor:"formatted-text-mask-input",children:"react-imask"})),(0,S.jsx)(q.Z,{value:t.textmask,onChange:o,name:"textmask",id:"formatted-text-mask-input",inputComponent:ze})]}),(0,S.jsx)(j.Z,{label:"react-number-format",value:t.numberformat,onChange:o,name:"numberformat",id:"formatted-numberformat-input",InputProps:{inputComponent:Le},variant:"standard"})]})},"./UseInput.js":function(){return Ne||(Ne=(0,S.jsx)(et,{"aria-label":"Demo input",placeholder:"Type something..."}))},"./UnstyledInput.js":function(){return st||(st=(0,S.jsx)(kt,{"aria-label":"Demo input",placeholder:"Type something..."}))}};function It(){return vt||(vt=(0,S.jsx)(w.Z,{demos:Ft,docs:yt,demoComponents:Tt}))}},564410:function(n,e,t){"use strict";t.d(e,{Z:function(){return s}});var a=t(183452),o=t.n(a);function s(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];if(void 0===n)return{};var t={};return o()(n).filter((function(t){return t.match(/^on[A-Z]/)&&"function"===typeof n[t]&&!e.includes(t)})).forEach((function(e){t[e]=n[e]})),t}},847635:function(n,e,t){"use strict";t.d(e,{Z:function(){return y}});var a=t(481936),o=t(957379),s=t(295649),l=t(827378),i=t(138944),r=t(47918),d=t(326162),p=t(376811),c=t(255960),u=t(760163),m=t(290763),h=t(892992);function f(n){return(0,h.Z)("MuiInputAdornment",n)}var x=(0,t(84408).Z)("MuiInputAdornment",["root","filled","standard","outlined","positionStart","positionEnd","disablePointerEvents","hiddenLabel","sizeSmall"]),g=t(906205),b=t(824246),k=["children","className","component","disablePointerEvents","disableTypography","position","variant"],v=(0,m.ZP)("div",{name:"MuiInputAdornment",slot:"Root",overridesResolver:function(n,e){var t=n.ownerState;return[e.root,e["position".concat((0,d.Z)(t.position))],!0===t.disablePointerEvents&&e.disablePointerEvents,e[t.variant]]}})((function(n){var e=n.theme,t=n.ownerState;return(0,s.Z)((0,s.Z)((0,s.Z)((0,s.Z)({display:"flex",height:"0.01em",maxHeight:"2em",alignItems:"center",whiteSpace:"nowrap",color:e.palette.action.active},"filled"===t.variant&&(0,o.Z)({},"&.".concat(x.positionStart,"&:not(.").concat(x.hiddenLabel,")"),{marginTop:16})),"start"===t.position&&{marginRight:8}),"end"===t.position&&{marginLeft:8}),!0===t.disablePointerEvents&&{pointerEvents:"none"})})),y=l.forwardRef((function(n,e){var t=(0,g.Z)({props:n,name:"MuiInputAdornment"}),o=t.children,m=t.className,h=t.component,x=void 0===h?"div":h,y=t.disablePointerEvents,F=void 0!==y&&y,T=t.disableTypography,I=void 0!==T&&T,w=t.position,C=t.variant,j=(0,a.Z)(t,k),S=(0,u.Z)()||{},B=C;C&&S.variant,S&&!B&&(B=S.variant);var P=(0,s.Z)((0,s.Z)({},t),{},{hiddenLabel:S.hiddenLabel,size:S.size,disablePointerEvents:F,position:w,variant:B}),Z=function(n){var e=n.classes,t=n.disablePointerEvents,a=n.hiddenLabel,o=n.position,s=n.size,l=n.variant,i={root:["root",t&&"disablePointerEvents",o&&"position".concat((0,d.Z)(o)),l,a&&"hiddenLabel",s&&"size".concat((0,d.Z)(s))]};return(0,r.Z)(i,f,e)}(P);return(0,b.jsx)(c.Z.Provider,{value:null,children:(0,b.jsx)(v,(0,s.Z)((0,s.Z)({as:x,ownerState:P,className:(0,i.default)(Z.root,m),ref:e},j),{},{children:"string"!==typeof o||I?(0,b.jsxs)(l.Fragment,{children:["start"===w?(0,b.jsx)("span",{className:"notranslate",dangerouslySetInnerHTML:{__html:"&#8203;"}}):null,o]}):(0,b.jsx)(p.Z,{color:"text.secondary",children:o})}))})}))},888432:function(n,e,t){"use strict";var a=(0,t(779938).ZP)();e.Z=a},497696:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/text-fields",function(){return t(587725)}])},712905:function(n,e,t){"use strict";var a=t(307914);Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o=a(t(122268)),s=t(824246),l=(0,o.default)((0,s.jsx)("path",{d:"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"}),"AccountCircle");e.default=l},314684:function(n,e,t){"use strict";var a=t(307914);Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o=a(t(122268)),s=t(824246),l=(0,o.default)((0,s.jsx)("path",{d:"m21.71 11.29-9-9a.9959.9959 0 0 0-1.41 0l-9 9c-.39.39-.39 1.02 0 1.41l9 9c.39.39 1.02.39 1.41 0l9-9c.39-.38.39-1.01 0-1.41zM14 14.5V12h-4v3H8v-4c0-.55.45-1 1-1h5V7.5l3.5 3.5-3.5 3.5z"}),"Directions");e.default=l},770154:function(n,e,t){"use strict";var a=t(307914);Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o=a(t(122268)),s=t(824246),l=(0,o.default)((0,s.jsx)("path",{d:"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"}),"Search");e.default=l},987970:function(n,e,t){"use strict";var a=t(307914);Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o=a(t(122268)),s=t(824246),l=(0,o.default)((0,s.jsx)("path",{d:"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"}),"Visibility");e.default=l},827108:function(n,e,t){"use strict";var a=t(307914);Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o=a(t(122268)),s=t(824246),l=(0,o.default)((0,s.jsx)("path",{d:"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z"}),"VisibilityOff");e.default=l}},function(n){n.O(0,[4631,1194,2591,5408,6950,1895,7950,8100,1980,4376,892,2798,6753,6750,7439,6035,3229,7414,478,16,4616,9774,2888,179],(function(){return e=497696,n(n.s=e);var e}));var e=n.O();_N_E=e}]);